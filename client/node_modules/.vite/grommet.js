import {
  require_react_dom
} from "./chunk-GMJOWQXJ.js";
import {
  Ce,
  Ge,
  Ue,
  We,
  es6_exports,
  init_es6,
  init_styled_components_browser_esm,
  styled_components_browser_esm_default,
  styled_components_browser_esm_exports
} from "./chunk-GOTHMEOZ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM,
  require_object_assign,
  require_react
} from "./chunk-UJ3SEB5Q.js";

// node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element3 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment6 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element3;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment6;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/prop-types/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/prop-types/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement3, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x2, y2) {
        if (x2 === y2) {
          return x2 !== 0 || 1 / x2 === 1 / y2;
        } else {
          return x2 !== x2 && y2 !== y2;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate3) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate3(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate3(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), { expectedType });
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate3(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i2 = 0; i2 < propValue.length; i2++) {
            var error = typeChecker(propValue, i2, componentName, location, propFullName + "[" + i2 + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createElementTypeChecker() {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement3(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createElementTypeTypeChecker() {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate3(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i2 = 0; i2 < expectedValues.length; i2++) {
            if (is(propValue, expectedValues[i2])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate3);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate3(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
          var checker = arrayOfTypeCheckers[i2];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i2 + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate3(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
            var checker2 = arrayOfTypeCheckers[i3];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate3);
      }
      function createNodeChecker() {
        function validate3(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement3(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/grommet-icons/utils.js
var require_utils = __commonJS({
  "node_modules/grommet-icons/utils.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.isObject = isObject3;
    exports.deepMerge = deepMerge3;
    exports["default"] = void 0;
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    function isObject3(item) {
      return item && typeof item === "object" && !Array.isArray(item);
    }
    function deepMerge3(target) {
      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        sources[_key - 1] = arguments[_key];
      }
      if (!sources.length) {
        return target;
      }
      var output = _extends124({}, target);
      sources.forEach(function(source) {
        if (isObject3(source)) {
          Object.keys(source).forEach(function(key) {
            if (isObject3(source[key])) {
              if (!output[key]) {
                output[key] = _extends124({}, source[key]);
              } else {
                output[key] = deepMerge3(output[key], source[key]);
              }
            } else {
              output[key] = source[key];
            }
          });
        }
      });
      return output;
    }
    var _default = {
      deepMerge: deepMerge3,
      isObject: isObject3
    };
    exports["default"] = _default;
  }
});

// node_modules/grommet-icons/themes/base.js
var require_base = __commonJS({
  "node_modules/grommet-icons/themes/base.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.base = void 0;
    var base2 = {
      global: {
        colors: {
          icon: "#666666"
        }
      },
      icon: {
        size: {
          small: "12px",
          medium: "24px",
          large: "48px",
          xlarge: "96px"
        }
      }
    };
    exports.base = base2;
  }
});

// node_modules/grommet-icons/themes/index.js
var require_themes = __commonJS({
  "node_modules/grommet-icons/themes/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.base = void 0;
    var _base = require_base();
    exports.base = _base.base;
  }
});

// node_modules/grommet-icons/default-props.js
var require_default_props = __commonJS({
  "node_modules/grommet-icons/default-props.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.extendDefaultTheme = exports.defaultProps = void 0;
    var _utils = require_utils();
    var _themes = require_themes();
    var defaultProps3 = {
      theme: _themes.base
    };
    exports.defaultProps = defaultProps3;
    var extendDefaultTheme3 = function extendDefaultTheme4(theme) {
      defaultProps3.theme = (0, _utils.deepMerge)(_themes.base, theme);
    };
    exports.extendDefaultTheme = extendDefaultTheme3;
  }
});

// node_modules/grommet-icons/StyledIcon.js
var require_StyledIcon = __commonJS({
  "node_modules/grommet-icons/StyledIcon.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StyledIcon = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _styledComponents = _interopRequireWildcard((init_styled_components_browser_esm(), __toCommonJS(styled_components_browser_esm_exports)));
    var _grommetStyles = (init_es6(), __toCommonJS(es6_exports));
    var _defaultProps = require_default_props();
    var _excluded78 = ["a11yTitle", "color", "size", "theme"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose73(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i2;
      for (i2 = 0; i2 < sourceKeys.length; i2++) {
        key = sourceKeys[i2];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    var colorCss = (0, _styledComponents.css)(["", " ", ' g{fill:inherit;stroke:inherit;}*:not([stroke]){&[fill="none"]{stroke-width:0;}}*[stroke*="#"],*[STROKE*="#"]{stroke:inherit;fill:none;}*[fill-rule],*[FILL-RULE],*[fill*="#"],*[FILL*="#"]{fill:inherit;stroke:none;}'], function(props) {
      return (0, _grommetStyles.colorStyle)("fill", props.color || props.theme.global.colors.icon, props.theme);
    }, function(props) {
      return (0, _grommetStyles.colorStyle)("stroke", props.color || props.theme.global.colors.icon, props.theme);
    });
    var IconInner = (0, _react.forwardRef)(function(_ref, ref) {
      var a11yTitle = _ref.a11yTitle, color = _ref.color, size = _ref.size, theme = _ref.theme, rest = _objectWithoutPropertiesLoose73(_ref, _excluded78);
      return _react["default"].createElement("svg", _extends124({
        ref,
        "aria-label": a11yTitle
      }, rest));
    });
    IconInner.displayName = "Icon";
    var parseMetricToNum3 = function parseMetricToNum4(string) {
      return parseFloat(string.match(/\d+(\.\d+)?/), 10);
    };
    var StyledIcon3 = (0, _styledComponents["default"])(IconInner).withConfig({
      displayName: "StyledIcon",
      componentId: "sc-ofa7kd-0"
    })(["display:inline-block;flex:0 0 auto;", " ", " ", ""], function(_ref2) {
      var _ref2$size = _ref2.size, size = _ref2$size === void 0 ? "medium" : _ref2$size, theme = _ref2.theme, viewBox = _ref2.viewBox;
      var _split = (viewBox || "0 0 24 24").split(" "), w2 = _split[2], h2 = _split[3];
      var scale = w2 / h2;
      var dimension = parseMetricToNum3(theme.icon.size[size] || size);
      if (w2 < h2) {
        return "\n      width: " + dimension + "px;\n      height: " + dimension / scale + "px;\n    ";
      }
      if (h2 < w2) {
        return "\n      width: " + dimension * scale + "px;\n      height: " + dimension + "px;\n    ";
      }
      return "\n      width: " + dimension + "px;\n      height: " + dimension + "px;\n    ";
    }, function(_ref3) {
      var color = _ref3.color;
      return color !== "plain" && colorCss;
    }, function(_ref4) {
      var theme = _ref4.theme;
      return theme && theme.icon.extend;
    });
    exports.StyledIcon = StyledIcon3;
    StyledIcon3.defaultProps = {};
    Object.setPrototypeOf(StyledIcon3.defaultProps, _defaultProps.defaultProps);
  }
});

// node_modules/grommet-icons/icons/Actions.js
var require_Actions = __commonJS({
  "node_modules/grommet-icons/icons/Actions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Actions = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Actions2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Actions"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0-11V1m0 22v-5.5M1 12h5.5m11 0H23M4.437 4.437l4.125 4.125m6.876 6.876 4.124 4.124m0-15.125-4.125 4.125m-6.874 6.876-4.126 4.124"
      }));
    });
    exports.Actions = Actions2;
    Actions2.displayName = "Actions";
  }
});

// node_modules/grommet-icons/icons/ClosedCaption.js
var require_ClosedCaption = __commonJS({
  "node_modules/grommet-icons/icons/ClosedCaption.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.ClosedCaption = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var ClosedCaption2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "ClosedCaption"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M1 12c0-7 1.5-8 11-8s11 1 11 8-1.5 8-11 8-11-1-11-8zm4.25 2c0 1.5.75 2 2.5 2s2.5-.5 2.5-2h-.271c0 1.25-1 2-2.229 2-1.23 0-2.229-.75-2.229-2v-4C5.5 8.75 6.5 8 7.75 8s2.25.75 2.229 2h.271c0-1.25-1.021-2-2.5-2s-2.5.75-2.5 2v4zm8 0c0 1.5.75 2 2.5 2s2.5-.5 2.5-2h-.271c0 1.25-1 2-2.229 2-1.23 0-2.229-.75-2.229-2v-4c-.021-1.25.979-2 2.229-2s2.25.75 2.229 2h.271c0-1.25-1.021-2-2.5-2s-2.5.75-2.5 2v4z"
      }));
    });
    exports.ClosedCaption = ClosedCaption2;
    ClosedCaption2.displayName = "ClosedCaption";
  }
});

// node_modules/grommet-icons/icons/Expand.js
var require_Expand = __commonJS({
  "node_modules/grommet-icons/icons/Expand.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Expand = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Expand2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Expand"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m10 14-8 8m-1-7v8h8M22 2l-8 8m1-9h8v8"
      }));
    });
    exports.Expand = Expand2;
    Expand2.displayName = "Expand";
  }
});

// node_modules/grommet-icons/icons/FormClose.js
var require_FormClose = __commonJS({
  "node_modules/grommet-icons/icons/FormClose.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormClose = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var FormClose3 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormClose"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m7 7 10 10M7 17 17 7"
      }));
    });
    exports.FormClose = FormClose3;
    FormClose3.displayName = "FormClose";
  }
});

// node_modules/grommet-icons/icons/FormDown.js
var require_FormDown = __commonJS({
  "node_modules/grommet-icons/icons/FormDown.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormDown = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var FormDown2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormDown"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m18 9-6 6-6-6"
      }));
    });
    exports.FormDown = FormDown2;
    FormDown2.displayName = "FormDown";
  }
});

// node_modules/grommet-icons/icons/FormNext.js
var require_FormNext = __commonJS({
  "node_modules/grommet-icons/icons/FormNext.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormNext = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var FormNext2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormNext"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m9 6 6 6-6 6"
      }));
    });
    exports.FormNext = FormNext2;
    FormNext2.displayName = "FormNext";
  }
});

// node_modules/grommet-icons/icons/FormPrevious.js
var require_FormPrevious = __commonJS({
  "node_modules/grommet-icons/icons/FormPrevious.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormPrevious = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var FormPrevious2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormPrevious"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m15 6-6 6 6 6"
      }));
    });
    exports.FormPrevious = FormPrevious2;
    FormPrevious2.displayName = "FormPrevious";
  }
});

// node_modules/grommet-icons/icons/FormUp.js
var require_FormUp = __commonJS({
  "node_modules/grommet-icons/icons/FormUp.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormUp = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var FormUp2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormUp"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m18 15-6-6-6 6"
      }));
    });
    exports.FormUp = FormUp2;
    FormUp2.displayName = "FormUp";
  }
});

// node_modules/grommet-icons/icons/Next.js
var require_Next = __commonJS({
  "node_modules/grommet-icons/icons/Next.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Next = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Next2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Next"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m7 2 10 10L7 22"
      }));
    });
    exports.Next = Next2;
    Next2.displayName = "Next";
  }
});

// node_modules/grommet-icons/icons/Pause.js
var require_Pause = __commonJS({
  "node_modules/grommet-icons/icons/Pause.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Pause = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Pause2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Pause"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M3 21h6V3H3v18zm12 0h6V3h-6v18z"
      }));
    });
    exports.Pause = Pause2;
    Pause2.displayName = "Pause";
  }
});

// node_modules/grommet-icons/icons/Play.js
var require_Play = __commonJS({
  "node_modules/grommet-icons/icons/Play.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Play = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Play2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Play"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m3 22 18-10L3 2z"
      }));
    });
    exports.Play = Play2;
    Play2.displayName = "Play";
  }
});

// node_modules/grommet-icons/icons/Previous.js
var require_Previous = __commonJS({
  "node_modules/grommet-icons/icons/Previous.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Previous = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Previous2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Previous"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M17 2 7 12l10 10"
      }));
    });
    exports.Previous = Previous2;
    Previous2.displayName = "Previous";
  }
});

// node_modules/grommet-icons/icons/StatusCriticalSmall.js
var require_StatusCriticalSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusCriticalSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusCriticalSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var StatusCriticalSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is critical"
      }, props), _react["default"].createElement("path", {
        fillRule: "evenodd",
        stroke: "#000",
        d: "M6.712 1.263a1.005 1.005 0 0 0-1.424 0L1.263 5.288a1.005 1.005 0 0 0 0 1.424l4.025 4.025a1.005 1.005 0 0 0 1.424 0l4.025-4.025a1.005 1.005 0 0 0 0-1.424L6.712 1.263z"
      }));
    });
    exports.StatusCriticalSmall = StatusCriticalSmall2;
    StatusCriticalSmall2.displayName = "StatusCriticalSmall";
  }
});

// node_modules/grommet-icons/icons/StatusGoodSmall.js
var require_StatusGoodSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusGoodSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusGoodSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var StatusGoodSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is okay"
      }, props), _react["default"].createElement("circle", {
        cx: "6",
        cy: "6",
        r: "5",
        fillRule: "evenodd",
        stroke: "#000"
      }));
    });
    exports.StatusGoodSmall = StatusGoodSmall2;
    StatusGoodSmall2.displayName = "StatusGoodSmall";
  }
});

// node_modules/grommet-icons/icons/StatusWarningSmall.js
var require_StatusWarningSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusWarningSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusWarningSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var StatusWarningSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is warning"
      }, props), _react["default"].createElement("path", {
        fillRule: "evenodd",
        stroke: "#000",
        strokeLinejoin: "round",
        d: "m6 1 5 9H1z"
      }));
    });
    exports.StatusWarningSmall = StatusWarningSmall2;
    StatusWarningSmall2.displayName = "StatusWarningSmall";
  }
});

// node_modules/grommet-icons/icons/StatusUnknownSmall.js
var require_StatusUnknownSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusUnknownSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusUnknownSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var StatusUnknownSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is unknown"
      }, props), _react["default"].createElement("rect", {
        width: "10",
        height: "10",
        x: "1",
        y: "1",
        fillRule: "evenodd",
        stroke: "#000",
        rx: "1"
      }));
    });
    exports.StatusUnknownSmall = StatusUnknownSmall2;
    StatusUnknownSmall2.displayName = "StatusUnknownSmall";
  }
});

// node_modules/grommet-icons/icons/Subtract.js
var require_Subtract = __commonJS({
  "node_modules/grommet-icons/icons/Subtract.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Subtract = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Subtract2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Subtract"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M2 12h20"
      }));
    });
    exports.Subtract = Subtract2;
    Subtract2.displayName = "Subtract";
  }
});

// node_modules/grommet-icons/icons/Volume.js
var require_Volume = __commonJS({
  "node_modules/grommet-icons/icons/Volume.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Volume = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Volume2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Volume"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M15 16a4 4 0 0 0 0-8m0 12c5 0 8-3.589 8-8s-3.589-8-8-8M1 12V8h5l6-5v18l-6-5H1v-4"
      }));
    });
    exports.Volume = Volume2;
    Volume2.displayName = "Volume";
  }
});

// node_modules/grommet-icons/icons/VolumeLow.js
var require_VolumeLow = __commonJS({
  "node_modules/grommet-icons/icons/VolumeLow.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.VolumeLow = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var VolumeLow2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "VolumeLow"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M1 8v8h5.099L12 21V3L6 8H1zm14 8a4 4 0 1 0 0-8"
      }));
    });
    exports.VolumeLow = VolumeLow2;
    VolumeLow2.displayName = "VolumeLow";
  }
});

// node_modules/grommet-icons/icons/FormSearch.js
var require_FormSearch = __commonJS({
  "node_modules/grommet-icons/icons/FormSearch.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormSearch = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var FormSearch2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormSearch"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M13.8 13.8 18 18l-4.2-4.2zM10.5 15a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9z"
      }));
    });
    exports.FormSearch = FormSearch2;
    FormSearch2.displayName = "FormSearch";
  }
});

// node_modules/grommet-icons/icons/Blank.js
var require_Blank = __commonJS({
  "node_modules/grommet-icons/icons/Blank.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Blank = void 0;
    var _react = _interopRequireDefault(require_react());
    var _StyledIcon = require_StyledIcon();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Blank2 = function Blank3(props) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        viewBox: "0 0 24 24",
        "aria-hidden": true
      }, props));
    };
    exports.Blank = Blank2;
  }
});

// node_modules/grommet-icons/icons/Calendar.js
var require_Calendar = __commonJS({
  "node_modules/grommet-icons/icons/Calendar.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Calendar = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var Calendar2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Calendar"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M2 5h20v17H2V5zm16 0V1M6 5V1m-4 9h20"
      }));
    });
    exports.Calendar = Calendar2;
    Calendar2.displayName = "Calendar";
  }
});

// node_modules/grommet-icons/icons/CircleAlert.js
var require_CircleAlert = __commonJS({
  "node_modules/grommet-icons/icons/CircleAlert.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CircleAlert = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends124() {
      _extends124 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends124.apply(this, arguments);
    }
    var CircleAlert2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends124({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "CircleAlert"
      }, props), _react["default"].createElement("path", {
        stroke: "#000",
        strokeWidth: "2",
        d: "M12 14V6m0 12v-2m0-14C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z"
      }));
    });
    exports.CircleAlert = CircleAlert2;
    CircleAlert2.displayName = "CircleAlert";
  }
});

// node_modules/grommet/es6/components/Accordion/Accordion.js
var import_react8 = __toESM(require_react());

// node_modules/grommet/es6/components/Accordion/propTypes.js
var import_prop_types2 = __toESM(require_prop_types());

// node_modules/grommet/es6/utils/general-prop-types.js
var import_prop_types = __toESM(require_prop_types());
var a11yTitlePropType = import_prop_types.default.string;
var alignPropType = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["baseline", "center", "end", "start", "stretch"]), import_prop_types.default.string]);
var colorPropType = import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  dark: import_prop_types.default.string,
  light: import_prop_types.default.string
})]);
var backgroundPropType = import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  color: colorPropType,
  dark: import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.string]),
  image: import_prop_types.default.string,
  position: import_prop_types.default.string,
  opacity: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.bool, import_prop_types.default.number, import_prop_types.default.oneOf(["weak", "medium", "strong"])]),
  repeat: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["no-repeat", "repeat"]), import_prop_types.default.string]),
  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["cover", "contain"]), import_prop_types.default.string]),
  light: import_prop_types.default.string
})]);
var backgroundDoc = backgroundPropType;
var MARGIN_SIZES = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var marginProp = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["none"].concat(MARGIN_SIZES)), import_prop_types.default.shape({
  bottom: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  end: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  horizontal: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  left: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  right: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  start: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  top: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  vertical: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string])
}), import_prop_types.default.string]);
var PAD_SIZES = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var padPropType = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["none"].concat(PAD_SIZES)), import_prop_types.default.shape({
  bottom: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  end: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  horizontal: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  left: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  right: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  start: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  top: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  vertical: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string])
}), import_prop_types.default.string]);
var genericProps = {
  a11yTitle: a11yTitlePropType,
  alignSelf: import_prop_types.default.oneOf(["start", "center", "end", "stretch"]),
  gridArea: import_prop_types.default.string,
  margin: marginProp
};
var elevationPropType = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["none", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types.default.string]);
var hoverIndicatorPropType = import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.string, import_prop_types.default.oneOf(["background"]), backgroundPropType, import_prop_types.default.shape({
  background: backgroundPropType,
  elevation: elevationPropType
})]);
var pointPropType = import_prop_types.default.oneOf(["circle", "diamond", "square", "star", "triangle", "triangleDown"]);
var patternPropType = import_prop_types.default.oneOf(["squares", "circles", "stripesHorizontal", "stripesVertical", "stripesDiagonalDown", "stripesDiagonalUp"]);
var roundPropType = import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "full"]), import_prop_types.default.string, import_prop_types.default.shape({
  corner: import_prop_types.default.oneOf(["top", "left", "bottom", "right", "top-left", "top-right", "bottom-left", "bottom-right"]),
  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types.default.string])
})]);
var dimSizeType = import_prop_types.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge"]);
var heightPropType = import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string, import_prop_types.default.shape({
  height: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  min: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  max: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string])
})]);
var widthPropType = import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string, import_prop_types.default.shape({
  width: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  min: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  max: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string])
})]);
var OVERFLOW_VALUES = ["auto", "hidden", "scroll", "visible"];

// node_modules/grommet/es6/components/Accordion/propTypes.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var PropType = {};
if (true) {
  PropType = _extends({}, genericProps, {
    activeIndex: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.arrayOf(import_prop_types2.default.number)]),
    animate: import_prop_types2.default.bool,
    children: import_prop_types2.default.node,
    onActive: import_prop_types2.default.func,
    multiple: import_prop_types2.default.bool,
    messages: import_prop_types2.default.shape({
      tabContents: import_prop_types2.default.string
    })
  });
}
var AccordionPropTypes = PropType;

// node_modules/grommet/es6/components/Box/Box.js
var import_react6 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/animation.js
init_styled_components_browser_esm();
var PULSE_SIZES = {
  xsmall: 1.001,
  small: 1.01,
  medium: 1.1,
  large: 1.5,
  xlarge: 2
};
var SLIDE_SIZES = {
  xsmall: 1,
  small: 5,
  medium: 10,
  large: 50,
  xlarge: 200
};
var JIGGLE_SIZES = {
  xsmall: 0.1,
  small: 1,
  medium: 5,
  large: 400,
  xlarge: 1e3
};
var ZOOM_SIZES = {
  xsmall: 1e-3,
  small: 0.01,
  medium: 0.05,
  large: 0.1,
  xlarge: 0.5
};
var animationBounds = function animationBounds2(type, size) {
  if (size === void 0) {
    size = "medium";
  }
  if (type === "draw") {
    return ["", "stroke-dashoffset: 0"];
  }
  if (type === "fadeIn") {
    return ["opacity: 0;", "opacity: 1;"];
  }
  if (type === "fadeOut") {
    return ["opacity: 1;", "opacity: 0;"];
  }
  if (type === "jiggle") {
    var deg = JIGGLE_SIZES[size];
    return ["transform: rotate(-" + deg + "deg);", "transform: rotate(" + deg + "deg);"];
  }
  if (type === "pulse") {
    return ["transform: scale(1);", "transform: scale(" + PULSE_SIZES[size] + ")"];
  }
  if (type === "rotateRight") {
    return ["transform: rotate(0deg);", "transform: rotate(359deg);"];
  }
  if (type === "rotateLeft") {
    return ["transform: rotate(0deg);", "transform: rotate(-359deg);"];
  }
  if (type === "flipIn") {
    return ["transform: rotateY(90deg);", "transform: rotateY(0);"];
  }
  if (type === "flipOut") {
    return ["transform: rotateY(0);", "transform: rotateY(90deg);"];
  }
  if (type === "slideDown") {
    return ["transform: translateY(-" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "slideLeft") {
    return ["transform: translateX(" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "slideRight") {
    return ["transform: translateX(-" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "slideUp") {
    return ["transform: translateY(" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "zoomIn") {
    return ["transform: scale(" + (1 - ZOOM_SIZES[size]) + ");", "transform: none;"];
  }
  if (type === "zoomOut") {
    return ["transform: scale(" + (1 + ZOOM_SIZES[size]) + ");", "transform: none;"];
  }
  return [];
};
var normalizeTiming = function normalizeTiming2(time, defaultTiming) {
  return typeof time === "number" ? time / 1e3 + "s" : time || defaultTiming;
};
var animationEnding = function animationEnding2(type) {
  if (type === "draw") {
    return "linear forwards";
  }
  if (type === "jiggle") {
    return "alternate infinite";
  }
  if (type === "pulse") {
    return "alternate infinite";
  }
  if (type === "rotateRight" || type === "rotateLeft") {
    return "infinite linear";
  }
  return "forwards";
};
var animationObjectStyle = function animationObjectStyle2(animation, theme, themeObj) {
  var bounds2 = animationBounds(animation.type, animation.size);
  var animationTheme = themeObj && themeObj.animation || theme.global.animation;
  if (bounds2) {
    var animationTransition = Ce(["from{", ";}to{", ";}"], bounds2[0], bounds2[1]);
    var defaultDuration = function defaultDuration2() {
      return normalizeTiming(animationTheme[animation.type] ? animationTheme[animation.type].duration : animation.duration, animationTheme.duration);
    };
    return Ce(["", " ", " ", " ", ""], Ue(["", ""], animationTransition), normalizeTiming(animation.duration, defaultDuration()), normalizeTiming(animation.delay, "0s"), animationEnding(animation.type));
  }
  return "";
};

// node_modules/grommet/es6/utils/mixins.js
init_styled_components_browser_esm();
var parseMetricToNum = function parseMetricToNum2(metric) {
  if (typeof metric === "number")
    return metric;
  if (metric.match(/\s/) && true) {
    console.warn('Invalid single measurement value: "' + metric + '"');
  }
  return parseFloat(metric.match(/\d+(\.\d+)?/), 10);
};
var breakpointStyle = function breakpointStyle2(breakpoint, content) {
  return Ce(["@media only screen ", "{", ";}"], breakpoint.value && "and (max-width: " + breakpoint.value + "px)", content);
};

// node_modules/grommet/es6/utils/background.js
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/colors.js
var normalizeColor = function normalizeColor2(color, theme, dark2) {
  var colorSpec = theme.global && theme.global.colors[color] !== void 0 ? theme.global.colors[color] : color;
  var result = colorSpec;
  if (colorSpec) {
    if ((dark2 === true || dark2 === void 0 && theme.dark) && colorSpec.dark !== void 0) {
      result = colorSpec.dark;
    } else if ((dark2 === false || !theme.dark) && colorSpec.light !== void 0) {
      result = colorSpec.light;
    }
  }
  if (result && theme.global && theme.global.colors[result] !== void 0) {
    result = normalizeColor2(result, theme, dark2);
  }
  return result;
};
var parseHexToRGB = function parseHexToRGB2(color) {
  return color.length < 7 ? color.match(/[A-Za-z0-9]{1}/g).map(function(v2) {
    return parseInt("" + v2 + v2, 16);
  }) : color.match(/[A-Za-z0-9]{2}/g).map(function(v2) {
    return parseInt(v2, 16);
  });
};
var hslToRGB = function hslToRGB2(h2, s2, l2) {
  var r2;
  var g2;
  var b2;
  if (s2 === 0 || s2 === "0") {
    r2 = l2;
    g2 = l2;
    b2 = l2;
  } else {
    var hue2rgb = function hue2rgb2(p3, q3, inT) {
      var t2 = inT;
      if (t2 < 0)
        t2 += 1;
      if (t2 > 1)
        t2 -= 1;
      if (t2 < 0.16666667)
        return p3 + (q3 - p3) * 6 * t2;
      if (t2 < 1 / 2)
        return q3;
      if (t2 < 0.66666667)
        return p3 + (q3 - p3) * (0.66666667 - t2) * 6;
      return p3;
    };
    var q2 = l2 < 0.5 ? l2 * (1 + s2) : l2 + s2 - l2 * s2;
    var p2 = 2 * l2 - q2;
    r2 = hue2rgb(p2, q2, h2 + 0.33333333);
    g2 = hue2rgb(p2, q2, h2);
    b2 = hue2rgb(p2, q2, h2 - 0.33333333);
  }
  return [Math.round(r2 * 255), Math.round(g2 * 255), Math.round(b2 * 255)];
};
var hexExp = /^#[A-Za-z0-9]{3,4}$|^#[A-Za-z0-9]{6,8}$/;
var rgbExp = /^rgba?\(\s?([0-9]*)\s?,\s?([0-9]*)\s?,\s?([0-9]*)\s?\)/;
var rgbaExp = /^rgba?\(\s?([0-9]*)\s?,\s?([0-9]*)\s?,\s?([0-9]*)\s?,\s?([.0-9]*)\s?\)/;
var hslExp = /^hsla?\(\s?([0-9]*)\s?,\s?([0-9]*)%?\s?,\s?([0-9]*)%?\s?.*?\)/;
var canExtractRGBArray = function canExtractRGBArray2(color) {
  return hexExp.test(color) || rgbExp.test(color) || rgbaExp.test(color) || hslExp.test(color);
};
var getRGBArray = function getRGBArray2(color) {
  if (hexExp.test(color)) {
    var _parseHexToRGB = parseHexToRGB(color), red = _parseHexToRGB[0], green = _parseHexToRGB[1], blue = _parseHexToRGB[2], alpha = _parseHexToRGB[3];
    return [red, green, blue, alpha !== void 0 ? alpha / 255 : void 0];
  }
  var match = color.match(rgbExp);
  if (match) {
    return match.splice(1).map(function(v2) {
      return parseInt(v2, 10);
    });
  }
  match = color.match(rgbaExp);
  if (match) {
    return match.splice(1).map(function(v2) {
      return parseFloat(v2, 10);
    });
  }
  match = color.match(hslExp);
  if (match) {
    var _match$splice$map = match.splice(1).map(function(v2) {
      return parseInt(v2, 10);
    }), h2 = _match$splice$map[0], s2 = _match$splice$map[1], l2 = _match$splice$map[2];
    return hslToRGB(h2 / 360, s2 / 100, l2 / 100);
  }
  return color;
};
var colorIsDark = function colorIsDark2(color) {
  if (color && canExtractRGBArray(color)) {
    var _getRGBArray = getRGBArray(color), red = _getRGBArray[0], green = _getRGBArray[1], blue = _getRGBArray[2], alpha = _getRGBArray[3];
    if (alpha < 0.5)
      return void 0;
    var brightness = (299 * red + 587 * green + 114 * blue) / 1e3;
    return brightness < 125;
  }
  return void 0;
};
var getRGBA = function getRGBA2(color, opacity) {
  if (color && canExtractRGBArray(color)) {
    var _getRGBArray2 = getRGBArray(color), red = _getRGBArray2[0], green = _getRGBArray2[1], blue = _getRGBArray2[2], alpha = _getRGBArray2[3];
    var normalizedAlpha;
    if (opacity !== void 0) {
      normalizedAlpha = opacity;
    } else if (alpha !== void 0) {
      normalizedAlpha = alpha;
    } else {
      normalizedAlpha = 1;
    }
    return "rgba(" + red + ", " + green + ", " + blue + ", " + normalizedAlpha + ")";
  }
  return void 0;
};

// node_modules/grommet/es6/utils/background.js
var evalStyle = function evalStyle2(arg, theme) {
  if (arg && Array.isArray(arg) && typeof arg[0] === "function") {
    return arg[0]({
      theme
    });
  }
  return arg;
};
var normalizeBackground = function normalizeBackground2(background, theme) {
  var result = background;
  if (background) {
    if (theme.dark && background.dark && typeof background.dark !== "boolean") {
      result = background.dark;
    } else if (!theme.dark && background.light && typeof background.light !== "boolean") {
      result = background.light;
    }
    result = evalStyle(result, theme);
  }
  return result;
};
var backgroundIsDark = function backgroundIsDark2(backgroundArg, theme) {
  var background = normalizeBackground(backgroundArg, theme);
  var result;
  if (background) {
    if (typeof background === "object") {
      var color = background.color, dark2 = background.dark, opacity = background.opacity;
      if (typeof dark2 === "boolean") {
        result = dark2;
      } else if (color && (!opacity || opacity !== "weak")) {
        var backgroundColor2 = normalizeColor(background.color, theme);
        if (backgroundColor2) {
          result = colorIsDark(backgroundColor2);
        }
      }
    } else {
      var _color = normalizeColor(background, theme);
      if (_color) {
        result = colorIsDark(_color);
      }
    }
  }
  return result;
};
var darkContext = function darkContext2(backgroundColor2) {
  var isDark = colorIsDark(backgroundColor2);
  if (isDark === void 0)
    return void 0;
  return isDark ? "dark" : "light";
};
var backgroundAndTextColors = function backgroundAndTextColors2(backgroundArg, textArg, theme) {
  if (!backgroundArg)
    return [void 0, textArg];
  var global = theme.global;
  var background = normalizeBackground(backgroundArg, theme);
  var text = textArg || global.colors.text;
  var backgroundColor2;
  var textColor;
  if (typeof background === "object") {
    if (background.dark === false) {
      textColor = text.light || text;
    } else if (background.dark) {
      textColor = text.dark || text;
    }
    if (background.color) {
      var color = normalizeColor(background.color, theme, background.dark);
      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;
      backgroundColor2 = getRGBA(color, opacity) || color;
      if (!textColor && (opacity === void 0 || opacity > 0.3)) {
        var shade = darkContext(backgroundColor2, theme);
        textColor = normalizeColor(shade && text[shade] || text, theme);
      }
    }
  } else {
    backgroundColor2 = normalizeColor(background, theme);
    var _shade = darkContext(backgroundColor2, theme);
    if (_shade) {
      textColor = normalizeColor(text[_shade] || text, theme, _shade === "dark");
    } else {
      if (backgroundColor2 !== "transparent")
        backgroundColor2 = void 0;
      if (text)
        textColor = normalizeColor(text, theme);
    }
  }
  if (textArg === false)
    textColor = void 0;
  return [backgroundColor2, textColor];
};
var backgroundStyle = function backgroundStyle2(backgroundArg, theme, textColorArg) {
  if (backgroundArg === void 0)
    return void 0;
  var background = normalizeBackground(backgroundArg, theme);
  if (typeof background === "string" && background.lastIndexOf("url", 0) === 0) {
    return Ce(["background:", " no-repeat center center;background-size:cover;"], background);
  }
  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme), backgroundColor2 = _backgroundAndTextCol[0], textColor = _backgroundAndTextCol[1];
  if (background.image) {
    var backgroundStyles = "\n      " + (backgroundColor2 ? "background-color: " + backgroundColor2 + ";" : "") + "\n      background-image: " + background.image + ";\n      background-repeat: " + (background.repeat || "no-repeat") + ";\n      background-position: " + (background.position || "center center") + ";\n      background-size: " + (background.size || "cover") + ";\n    ";
    return Ce(["", " ", ""], textColor ? "color: " + textColor + ";" : "", !background.opacity ? backgroundStyles : "position: relative;\n        z-index: 0;\n        &:before {\n          content: '';\n          position: absolute;\n          top: 0;\n          right: 0;\n          left: 0;\n          bottom: 0;\n          z-index: -1;\n          " + backgroundStyles + "\n          opacity: " + (background.opacity === true ? theme.global.opacity.medium : theme.global.opacity[background.opacity] || background.opacity) + ";\n        }");
  }
  if (backgroundColor2) {
    return Ce(["background-color:", ";", ""], backgroundColor2, textColor ? "color: " + textColor + ";" : "");
  }
  if (typeof background === "string")
    return Ce(["background:", ";"], normalizeColor(background, theme));
  return void 0;
};
var activeStyle = Ce(["", ""], function(props) {
  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);
});
var selectedStyle = Ce(["", ""], function(props) {
  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);
});
var getHoverIndicatorStyle = function getHoverIndicatorStyle2(hoverIndicator, theme) {
  var background;
  var elevation;
  if (hoverIndicator === true || hoverIndicator === "background") {
    background = theme.global.hover.background;
  } else if (typeof hoverIndicator === "object") {
    if (hoverIndicator.elevation || hoverIndicator.background) {
      elevation = hoverIndicator.elevation;
      background = hoverIndicator.background;
    } else
      background = hoverIndicator;
  } else {
    background = hoverIndicator;
  }
  return Ce(["", " ", ""], backgroundStyle(background, theme, theme.global.hover.color), elevation && "box-shadow: " + theme.global.elevation[theme.dark ? "dark" : "light"][elevation] + ";");
};

// node_modules/grommet/es6/utils/border.js
init_styled_components_browser_esm();
var responsiveBorderStyle = function responsiveBorderStyle2(data, theme) {
  var color = normalizeColor(data.color || "border", theme);
  var borderSize = data.size || "xsmall";
  var style = data.style || "solid";
  var side = typeof data === "string" ? data : data.side || "all";
  var breakpoint = theme.box.responsiveBreakpoint && theme.global.breakpoints[theme.box.responsiveBreakpoint];
  if (!breakpoint.borderSize)
    breakpoint.borderSize = theme.global.borderSize;
  var value = breakpoint && (breakpoint.borderSize[borderSize] || borderSize) && style + " " + (breakpoint.borderSize[borderSize] || borderSize) + " " + color;
  if (!value)
    return void 0;
  if (side === "top" || side === "bottom" || side === "left" || side === "right")
    return "border-" + side + ": " + value + ";";
  if (side === "end" || side === "start")
    return "border-inline-" + side + ": " + value + ";";
  if (side === "vertical")
    return "\n      border-left: " + value + ";\n      border-right: " + value + ";\n    ";
  if (side === "horizontal")
    return "\n      border-top: " + value + ";\n      border-bottom: " + value + ";\n    ";
  if (side === "between")
    return void 0;
  return "border: " + value + ";";
};
var borderStyle = function borderStyle2(data, responsive, theme) {
  var styles = [];
  var color = normalizeColor(data.color || "border", theme);
  var borderSize = data.size || "xsmall";
  var style = data.style || "solid";
  var side = typeof data === "string" ? data : data.side || "all";
  var value = style + " " + (theme.global.borderSize[borderSize] || borderSize) + " " + color;
  var responsiveStyle = responsive && responsiveBorderStyle(data, theme);
  var breakpoint = responsiveStyle && theme.box.responsiveBreakpoint && theme.global.breakpoints[theme.box.responsiveBreakpoint];
  if (side === "top" || side === "bottom" || side === "left" || side === "right") {
    styles.push("border-" + side + ": " + value + ";");
    if (responsiveStyle) {
      styles.push(breakpointStyle(breakpoint, responsiveStyle));
    }
  } else if (side === "end" || side === "start") {
    styles.push(Ce(["border-inline-", ":", ";"], side, value));
    if (responsiveStyle) {
      styles.push(breakpointStyle(breakpoint, responsiveStyle));
    }
  } else if (side === "vertical") {
    styles.push(Ce(["border-left:", ";border-right:", ";"], value, value));
    if (responsiveStyle) {
      styles.push(breakpointStyle(breakpoint, responsiveStyle));
    }
  } else if (side === "horizontal") {
    styles.push(Ce(["border-top:", ";border-bottom:", ";"], value, value));
    if (responsiveStyle) {
      styles.push(breakpointStyle(breakpoint, responsiveStyle));
    }
  } else if (side === "between") {
  } else {
    styles.push(Ce(["border:", ";"], value));
    if (responsiveStyle) {
      styles.push(breakpointStyle(breakpoint, responsiveStyle));
    }
  }
  return styles;
};

// node_modules/grommet/es6/utils/DOM.js
var findScrollParent = function findScrollParent2(element, horizontal12) {
  var result;
  if (element) {
    var parent = element.parentNode;
    while (!result && parent && parent.getBoundingClientRect) {
      var rect = parent.getBoundingClientRect();
      if (horizontal12) {
        if (rect.width && parent.scrollWidth > rect.width + 10) {
          result = parent;
        }
      } else if (rect.height && parent.scrollHeight > rect.height + 10) {
        result = parent;
      }
      parent = parent.parentNode;
    }
    if (!result) {
      result = document;
    } else if (result.tagName.toLowerCase() === "body") {
      result = document;
    }
  }
  return result;
};
var documentTags = ["html", "body"];
var findScrollParents = function findScrollParents2(element, horizontal12) {
  var result = [];
  if (element) {
    var parent = element.parentNode;
    while (parent && parent.getBoundingClientRect) {
      var rect = parent.getBoundingClientRect();
      if (horizontal12) {
        if (rect.width && parent.scrollWidth > rect.width + 10) {
          result.push(parent);
        }
      } else if (rect.height && parent.scrollHeight > rect.height + 10) {
        result.push(parent);
      }
      parent = parent.parentNode;
    }
    if (result.length && documentTags.includes(result[0].tagName.toLowerCase())) {
      result.length = 0;
    }
    result.push(document);
  }
  return result;
};
var containsFocus = function containsFocus2(node) {
  var element = document.activeElement;
  while (element) {
    if (element === node)
      break;
    element = element.parentElement;
  }
  return !!element;
};
var isFocusable = function isFocusable2(element) {
  var tagName = element.tagName.toLowerCase();
  return tagName === "input" || tagName === "select" || tagName === "textarea";
};
var getFirstFocusableDescendant = function getFirstFocusableDescendant2(element) {
  var children2 = element.getElementsByTagName("*");
  for (var i2 = 0; i2 < children2.length; i2 += 1) {
    var child = children2[i2];
    if (isFocusable(child)) {
      return child;
    }
  }
  return void 0;
};
var shouldKeepFocus = function shouldKeepFocus2() {
  var element = document.activeElement;
  if (isFocusable(element))
    return true;
  return !!getFirstFocusableDescendant(element);
};
var getNewContainer = function getNewContainer2(target, targetChildPosition) {
  if (target === void 0) {
    target = document.body;
  }
  var container = document.createElement("div");
  if (targetChildPosition === "first") {
    target.prepend(container);
  } else {
    target.appendChild(container);
  }
  return container;
};
var setFocusWithoutScroll = function setFocusWithoutScroll2(element) {
  var x2 = window.scrollX;
  var y2 = window.scrollY;
  element.focus();
  window.scrollTo(x2, y2);
};
var TABINDEX = "tabindex";
var TABINDEX_STATE = "data-g-tabindex";
var makeNodeFocusable = function makeNodeFocusable2(node) {
  if (!node.hasAttribute("aria-live")) {
    node.removeAttribute("aria-hidden");
    var elements = node.getElementsByTagName("*");
    Array.prototype.filter.call(elements || [], function(element) {
      return element.hasAttribute(TABINDEX_STATE);
    }).forEach(function(element) {
      var prior = element.getAttribute(TABINDEX_STATE);
      if (prior >= 0) {
        element.setAttribute(TABINDEX, element.getAttribute(TABINDEX_STATE));
      } else if (prior === "none") {
        element.removeAttribute(TABINDEX);
      }
      element.removeAttribute(TABINDEX_STATE);
    });
  }
};
var autoFocusingTags = /(a|area|input|select|textarea|button|iframe)$/;
var makeNodeUnfocusable = function makeNodeUnfocusable2(node) {
  if (!node.hasAttribute("aria-live")) {
    node.setAttribute("aria-hidden", true);
    var elements = node.getElementsByTagName("*");
    Array.prototype.filter.call(elements || [], function(element) {
      return element.getAttribute(TABINDEX) !== null;
    }).forEach(function(element) {
      element.setAttribute(TABINDEX_STATE, element.getAttribute(TABINDEX));
      element.setAttribute(TABINDEX, -1);
    });
    Array.prototype.filter.call(elements || [], function(element) {
      var currentTag = element.tagName.toLowerCase();
      return currentTag.match(autoFocusingTags) && element.focus && element.getAttribute(TABINDEX_STATE) === null;
    }).forEach(function(element) {
      element.setAttribute(TABINDEX_STATE, "none");
      element.setAttribute(TABINDEX, -1);
    });
  }
};
var findVisibleParent = function findVisibleParent2(element) {
  if (element) {
    return element.offsetParent ? element : findVisibleParent2(element.parentElement) || element;
  }
  return void 0;
};
var isNodeAfterScroll = function isNodeAfterScroll2(node, target) {
  var _node$getBoundingClie = node.getBoundingClientRect(), bottom = _node$getBoundingClie.bottom;
  var _ref = target.getBoundingClientRect ? target.getBoundingClientRect() : {
    height: 0,
    top: 0
  }, height = _ref.height, top = _ref.top;
  return bottom >= top + height;
};
var isNodeBeforeScroll = function isNodeBeforeScroll2(node, target) {
  var _node$getBoundingClie2 = node.getBoundingClientRect(), top = _node$getBoundingClie2.top;
  var _ref2 = target.getBoundingClientRect ? target.getBoundingClientRect() : {
    top: 0
  }, targetTop = _ref2.top;
  return top <= targetTop;
};

// node_modules/grommet/es6/utils/graphics.js
var POST_DECIMAL_DIGITS = 10;
var polarToCartesian = function polarToCartesian2(centerX, centerY, radius, angleInDegrees) {
  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180;
  return {
    x: centerX + radius * Math.cos(angleInRadians),
    y: centerY + radius * Math.sin(angleInRadians)
  };
};
var arcCommands = function arcCommands2(centerX, centerY, radius, startAngle, endAngle) {
  var normalizedEndAngle = endAngle;
  if (endAngle > startAngle && endAngle - startAngle >= 360) {
    normalizedEndAngle = startAngle + 359.99;
  }
  var start = polarToCartesian(centerX, centerY, radius, normalizedEndAngle);
  var end = polarToCartesian(centerX, centerY, radius, startAngle);
  var arcSweep = normalizedEndAngle - startAngle <= 180 ? "0" : "1";
  var d2 = ["M", start.x.toFixed(POST_DECIMAL_DIGITS), start.y.toFixed(POST_DECIMAL_DIGITS), "A", radius.toFixed(POST_DECIMAL_DIGITS), radius.toFixed(POST_DECIMAL_DIGITS), 0, arcSweep, 0, end.x.toFixed(POST_DECIMAL_DIGITS), end.y.toFixed(POST_DECIMAL_DIGITS)].join(" ");
  return d2;
};
var translateEndAngle = function translateEndAngle2(startAngle, anglePer, value) {
  return Math.max(0, startAngle + anglePer * value) % 360;
};

// node_modules/grommet/es6/utils/styles.js
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/responsive.js
var getBreakpoint = function getBreakpoint2(viewportWidth, theme) {
  var sortedBreakpoints = Object.keys(theme.global.breakpoints).sort(function(a2, b2) {
    var first = theme.global.breakpoints[a2];
    var second = theme.global.breakpoints[b2];
    if (!first)
      return 1;
    if (!second)
      return -1;
    if (!first.value)
      return 1;
    if (!second.value)
      return -1;
    return first.value - second.value;
  });
  var lastBreakpoint = sortedBreakpoints[sortedBreakpoints.length - 1];
  var result = sortedBreakpoints.find(function(name) {
    var breakpoint = theme.global.breakpoints[name];
    return !breakpoint.value || breakpoint.value >= viewportWidth ? name : false;
  });
  return result || lastBreakpoint;
};
var getDeviceBreakpoint = function getDeviceBreakpoint2(type, theme) {
  return theme.global.deviceBreakpoints[type];
};
var getBreakpointStyle = function getBreakpointStyle2(theme, breakpointSize) {
  var breakpoint = breakpointSize && theme.global.breakpoints[breakpointSize] || {};
  if (!breakpoint.edgeSize)
    breakpoint.edgeSize = theme.global.edgeSize;
  if (!breakpoint.borderSize)
    breakpoint.borderSize = theme.global.borderSize;
  if (!breakpoint.size)
    breakpoint.size = theme.global.size;
  return breakpoint;
};

// node_modules/grommet/es6/utils/styles.js
var baseStyle = Ce(["font-family:", ";font-size:", ";line-height:", ";font-weight:", ";", " box-sizing:border-box;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;"], function(props) {
  return props.theme.global.font.family;
}, function(props) {
  return props.theme.global.font.size;
}, function(props) {
  return props.theme.global.font.height;
}, function(props) {
  return props.theme.global.font.weight;
}, function(props) {
  return !props.plain && backgroundStyle(props.theme.baseBackground, props.theme);
});
var controlBorderStyle = Ce(["border:", " solid ", ";border-radius:", ";"], function(props) {
  return props.theme.global.control.border.width;
}, function(props) {
  return normalizeColor(props.theme.global.control.border.color || "border", props.theme);
}, function(props) {
  return props.theme.global.control.border.radius;
});
var edgeStyle = function edgeStyle2(kind, data, responsive, responsiveBreakpoint, theme) {
  var breakpoint = responsiveBreakpoint && theme.global.breakpoints[responsiveBreakpoint];
  if (typeof data === "string") {
    return Ce(["", ":", ";", ";"], kind, theme.global.edgeSize[data] || data, responsive && breakpoint ? breakpointStyle(breakpoint, "\n        " + kind + ": " + (breakpoint.edgeSize[data] || data) + ";\n      ") : "");
  }
  var result = [];
  var horizontal12 = data.horizontal, vertical12 = data.vertical, top = data.top, bottom = data.bottom, left = data.left, right = data.right;
  var horizontalVerticalEqual = horizontal12 && vertical12 && horizontal12 === vertical12;
  var allSidesEqual = top && bottom && left && right && top === bottom === left === right;
  if (horizontalVerticalEqual || allSidesEqual) {
    var value = horizontalVerticalEqual ? horizontal12 : top;
    return Ce(["", ":", ";", ";"], kind, theme.global.edgeSize[value] || value, responsive && breakpoint ? breakpointStyle(breakpoint, "\n        " + kind + ": " + (breakpoint.edgeSize[value] || value) + ";\n      ") : "");
  }
  if (horizontal12) {
    result.push(Ce(["", "-left:", ";", "-right:", ";", ";"], kind, theme.global.edgeSize[horizontal12] || horizontal12, kind, theme.global.edgeSize[horizontal12] || horizontal12, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-left: " + (breakpoint.edgeSize[horizontal12] || horizontal12) + ";\n          " + kind + "-right: " + (breakpoint.edgeSize[horizontal12] || horizontal12) + ";\n        ") : ""));
  }
  if (vertical12) {
    result.push(Ce(["", "-top:", ";", "-bottom:", ";", ";"], kind, theme.global.edgeSize[vertical12] || vertical12, kind, theme.global.edgeSize[vertical12] || vertical12, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-top: " + (breakpoint.edgeSize[vertical12] || vertical12) + ";\n          " + kind + "-bottom: " + (breakpoint.edgeSize[vertical12] || vertical12) + ";\n        ") : ""));
  }
  if (top) {
    result.push(Ce(["", "-top:", ";", ";"], kind, theme.global.edgeSize[top] || top, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-top: " + (breakpoint.edgeSize[top] || top) + ";\n        ") : ""));
  }
  if (bottom) {
    result.push(Ce(["", "-bottom:", ";", ";"], kind, theme.global.edgeSize[bottom] || bottom, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-bottom: " + (breakpoint.edgeSize[bottom] || bottom) + ";\n        ") : ""));
  }
  if (left) {
    result.push(Ce(["", "-left:", ";", ";"], kind, theme.global.edgeSize[left] || left, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-left: " + (breakpoint.edgeSize[left] || left) + ";\n        ") : ""));
  }
  if (right) {
    result.push(Ce(["", "-right:", ";", ";"], kind, theme.global.edgeSize[right] || right, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-right: " + (breakpoint.edgeSize[right] || right) + ";\n        ") : ""));
  }
  if (data.start) {
    result.push(Ce(["", "-inline-start:", ";", ";"], kind, theme.global.edgeSize[data.start] || data.start, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-inline-start: " + (breakpoint.edgeSize[data.start] || data.start) + ";\n        ") : ""));
  }
  if (data.end) {
    result.push(Ce(["", "-inline-end:", ";", ";"], kind, theme.global.edgeSize[data.end] || data.end, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-inline-end: " + (breakpoint.edgeSize[data.end] || data.end) + ";\n        ") : ""));
  }
  return result;
};
var fillStyle = function fillStyle2(fillProp) {
  if (fillProp === "horizontal") {
    return "width: 100%;";
  }
  if (fillProp === "vertical") {
    return "height: 100%;";
  }
  if (fillProp) {
    return "\n      width: 100%;\n      height: 100%;\n    ";
  }
  return void 0;
};
var focusStyles = function focusStyles2(props, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, forceOutline = _ref.forceOutline, justBorder = _ref.justBorder;
  var focus = props.theme.global.focus;
  if (!focus || forceOutline && !focus.outline) {
    var color = normalizeColor("focus", props.theme);
    if (color)
      return "outline: 2px solid " + color + ";";
    return "";
  }
  if (focus.outline && (!focus.border || !justBorder)) {
    if (typeof focus.outline === "object") {
      var _color = normalizeColor(focus.outline.color || "focus", props.theme);
      var size = focus.outline.size || "2px";
      return "\n        outline-offset: 0px;\n        outline: " + size + " solid " + _color + ";\n      ";
    }
    return "outline: " + focus.outline + ";";
  }
  if (focus.shadow && (!focus.border || !justBorder)) {
    if (typeof focus.shadow === "object") {
      var _color2 = normalizeColor(focus.border && focus.border.color || focus.shadow.color || "focus", props.theme);
      var _size = focus.shadow.size || "2px";
      return "\n        outline: none;\n        box-shadow: 0 0 " + _size + " " + _size + " " + _color2 + ";\n      ";
    }
    return "\n      outline: none;\n      box-shadow: " + focus.shadow + ";\n    ";
  }
  if (focus.border) {
    var _color3 = normalizeColor(focus.border.color || "focus", props.theme);
    return "\n      outline: none;\n      border-color: " + _color3 + ";\n    ";
  }
  return "";
};
var unfocusStyles = function unfocusStyles2(props, _temp2) {
  var _ref2 = _temp2 === void 0 ? {} : _temp2, forceOutline = _ref2.forceOutline, justBorder = _ref2.justBorder;
  var focus = props.theme.global.focus;
  if (!focus || forceOutline && !focus.outline) {
    var color = normalizeColor("focus", props.theme);
    if (color)
      return "outline: none;";
    return "";
  }
  if (focus.outline && (!focus.border || !justBorder)) {
    if (typeof focus.outline === "object") {
      return "\n        outline-offset: 0px;\n        outline: none;\n      ";
    }
    return "outline: none;";
  }
  if (focus.shadow && (!focus.border || !justBorder)) {
    if (typeof focus.shadow === "object") {
      return "\n        outline: none;\n        box-shadow: none;\n      ";
    }
    return "\n      outline: none;\n      box-shadow: none;\n    ";
  }
  if (focus.border) {
    return "\n      outline: none;\n      border-color: none;\n    ";
  }
  return "";
};
var focusStyle = function focusStyle2(_temp3) {
  var _ref3 = _temp3 === void 0 ? {} : _temp3, forceOutline = _ref3.forceOutline, justBorder = _ref3.justBorder, skipSvgChildren = _ref3.skipSvgChildren;
  return Ce(["", " ", " ", ""], function(props) {
    return !skipSvgChildren && "\n  > circle,\n  > ellipse,\n  > line,\n  > path,\n  > polygon,\n  > polyline,\n  > rect {\n    " + focusStyles(props) + "\n  }";
  }, function(props) {
    return focusStyles(props, {
      forceOutline,
      justBorder
    });
  }, !forceOutline && "\n  ::-moz-focus-inner {\n    border: 0;\n  }\n  ");
};
var unfocusStyle = function unfocusStyle2(_temp4) {
  var _ref4 = _temp4 === void 0 ? {} : _temp4, forceOutline = _ref4.forceOutline, justBorder = _ref4.justBorder, skipSvgChildren = _ref4.skipSvgChildren;
  return Ce(["", " ", " ", ""], function(props) {
    return !skipSvgChildren && "\n  > circle,\n  > ellipse,\n  > line,\n  > path,\n  > polygon,\n  > polyline,\n  > rect {\n    " + unfocusStyles(props) + "\n  }";
  }, function(props) {
    return unfocusStyles(props, {
      forceOutline,
      justBorder
    });
  }, !forceOutline && "\n  ::-moz-focus-inner {\n    border: 0;\n  }\n  ");
};
var adjustPad = function adjustPad2(props, value) {
  return parseMetricToNum((props.theme.global.edgeSize[value] || value) + "px") + parseMetricToNum(props.theme.global.control.border.width + "px") + "px";
};
var getInputPadBySide = function getInputPadBySide2(props, side) {
  if (typeof props.theme.global.input.padding !== "object") {
    var _adjustedPad = adjustPad(props, props.theme.global.input.padding);
    return _adjustedPad;
  }
  var orientation;
  if (side === "left" || side === "right")
    orientation = "horizontal";
  else if (side === "top" || side === "bottom")
    orientation = "vertical";
  else
    orientation = void 0;
  var pad = props.theme.global.input.padding[side] || props.theme.global.input.padding[orientation];
  var adjustedPad = adjustPad(props, pad);
  return adjustedPad;
};
var placeholderColor = Ce(["color:", ";"], function(props) {
  return normalizeColor(props.theme.global.colors.placeholder, props.theme);
});
var placeholderStyle = Ce(["&::-webkit-input-placeholder{", ";}&::-moz-placeholder{", ";}&:-ms-input-placeholder{", ";}"], placeholderColor, placeholderColor, placeholderColor);
var inputSizeStyle = function inputSizeStyle2(props) {
  var data = props.theme.text[props.size];
  if (!data) {
    return Ce(["font-size:", ";"], props.size);
  }
  return Ce(["font-size:", ";line-height:", ";"], data.size, data.height);
};
var inputStyle = Ce(["box-sizing:border-box;", " font-family:inherit;border:none;-webkit-appearance:none;background:transparent;color:inherit;width:100%;", " ", " ", " margin:0;", " &:focus{", ";}", " ", "::-webkit-search-decoration{-webkit-appearance:none;}&::-moz-focus-inner{border:none;outline:none;}&:-moz-placeholder,&::-moz-placeholder{opacity:1;}", ""], function(props) {
  var _props$theme$text$pro;
  return "font-size: " + (props.theme.global.input.font.size ? ((_props$theme$text$pro = props.theme.text[props.theme.global.input.font.size]) == null ? void 0 : _props$theme$text$pro.size) || props.theme.global.input.font.size : "inherit") + ";";
}, function(props) {
  return props.theme.global.input.font.height && "line-height: " + props.theme.global.input.font.height + ";";
}, function(props) {
  return props.theme.global.input.padding && typeof props.theme.global.input.padding !== "object" ? "padding: " + (parseMetricToNum(props.theme.global.edgeSize[props.theme.global.input.padding] || props.theme.global.input.padding) - parseMetricToNum(props.theme.global.control.border.width)) + "px;" : edgeStyle("padding", props.theme.global.input.padding, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return (props.theme.global.input.weight || props.theme.global.input.font.weight) && Ce(["font-weight:", ";"], props.theme.global.input.weight || props.theme.global.input.font.weight);
}, function(props) {
  return props.size && inputSizeStyle(props);
}, function(props) {
  return (!props.plain || props.focusIndicator) && focusStyle();
}, controlBorderStyle, placeholderStyle, function(props) {
  return props.theme.global.input.extend;
});
var overflowStyle = function overflowStyle2(overflowProp) {
  if (typeof overflowProp === "string") {
    return Ce(["overflow:", ";"], overflowProp);
  }
  return Ce(["", " ", ";"], overflowProp.horizontal && "overflow-x: " + overflowProp.horizontal + ";", overflowProp.vertical && "overflow-y: " + overflowProp.vertical + ";");
};
var ALIGN_SELF_MAP = {
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var genericStyles = Ce(["", " ", " ", ""], function(props) {
  return props.alignSelf && "align-self: " + ALIGN_SELF_MAP[props.alignSelf] + ";";
}, function(props) {
  return props.gridArea && "grid-area: " + props.gridArea + ";";
}, function(props) {
  return props.margin && props.theme.global && edgeStyle("margin", props.margin, props.responsive, props.theme.global.edgeSize.responsiveBreakpoint, props.theme);
});
var disabledStyle = function disabledStyle2(componentStyle) {
  return Ce(["opacity:", ";cursor:default;"], function(props) {
    return componentStyle || props.theme.global.control.disabled.opacity;
  });
};
var sizeStyle = function sizeStyle2(name, value, theme) {
  return Ce(["", ":", ";"], name, theme.global.size[value] || value);
};
var plainInputStyle = Ce(["outline:none;border:none;"]);
var kindPartStyles = function kindPartStyles2(obj, theme, colorValue) {
  var styles = [];
  if (obj.padding || obj.pad) {
    var pad = obj.padding || obj.pad;
    if (pad.vertical || pad.horizontal)
      styles.push("padding: " + (theme.global.edgeSize[pad.vertical] || pad.vertical || 0) + " " + (theme.global.edgeSize[pad.horizontal] || pad.horizontal || 0) + ";");
    else
      styles.push("padding: " + (theme.global.edgeSize[pad] || pad || 0) + ";");
  }
  if (obj.background)
    styles.push(backgroundStyle(colorValue || obj.background, theme, obj.color || (Object.prototype.hasOwnProperty.call(obj, "color") && obj.color === void 0 ? false : void 0)));
  else if (obj.color)
    styles.push("color: " + normalizeColor(obj.color, theme) + ";");
  if (obj.border) {
    if (obj.border.width)
      styles.push(Ce(["border-style:solid;border-width:", ";"], obj.border.width));
    if (obj.border.color)
      styles.push(Ce(["border-color:", ";"], normalizeColor(!obj.background && colorValue || obj.border.color || "border", theme)));
    if (obj.border.radius)
      styles.push(Ce(["border-radius:", ";"], obj.border.radius));
  } else if (obj.border === false)
    styles.push("border: none;");
  if (colorValue && !obj.border && !obj.background)
    styles.push("color: " + normalizeColor(colorValue, theme) + ";");
  if (obj.font) {
    if (obj.font.size) {
      styles.push("font-size: " + (theme.text[obj.font.size].size || obj.font.size) + ";");
    }
    if (obj.font.height) {
      styles.push("line-height: " + obj.font.height + ";");
    }
    if (obj.font.weight) {
      styles.push("font-weight: " + obj.font.weight + ";");
    }
  }
  if (obj.opacity) {
    var opacity = obj.opacity === true ? theme.global.opacity.medium : theme.global.opacity[obj.opacity] || obj.opacity;
    styles.push("opacity: " + opacity + ";");
  }
  if (obj.extend)
    styles.push(obj.extend);
  return styles;
};
var ROUND_MAP = {
  full: "100%"
};
var roundStyle = function roundStyle2(data, responsive, theme) {
  var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
  var styles = [];
  if (typeof data === "object") {
    var size = ROUND_MAP[data.size] || theme.global.edgeSize[data.size || "medium"] || data.size;
    var responsiveSize = responsive && breakpoint && breakpoint.edgeSize[data.size] && (breakpoint.edgeSize[data.size] || data.size);
    if (data.corner === "top") {
      styles.push(Ce(["border-top-left-radius:", ";border-top-right-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-top-left-radius: " + responsiveSize + ";\n          border-top-right-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner === "bottom") {
      styles.push(Ce(["border-bottom-left-radius:", ";border-bottom-right-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-bottom-left-radius: " + responsiveSize + ";\n          border-bottom-right-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner === "left") {
      styles.push(Ce(["border-top-left-radius:", ";border-bottom-left-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-top-left-radius: " + responsiveSize + ";\n          border-bottom-left-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner === "right") {
      styles.push(Ce(["border-top-right-radius:", ";border-bottom-right-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-top-right-radius: " + responsiveSize + ";\n          border-bottom-right-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner) {
      styles.push(Ce(["border-", "-radius:", ";"], data.corner, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-" + data.corner + "-radius: " + responsiveSize + ";\n        "));
      }
    } else {
      styles.push(Ce(["border-radius:", ";"], size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-radius: " + responsiveSize + ";\n        "));
      }
    }
  } else {
    var _size2 = data === true ? "medium" : data;
    styles.push(Ce(["border-radius:", ";"], ROUND_MAP[_size2] || theme.global.edgeSize[_size2] || _size2));
    var _responsiveSize = breakpoint && breakpoint.edgeSize[_size2];
    if (_responsiveSize) {
      styles.push(breakpointStyle(breakpoint, "\n        border-radius: " + _responsiveSize + ";\n      "));
    }
  }
  return styles;
};
var TEXT_ALIGN_MAP = {
  center: "center",
  end: "right",
  justify: "justify",
  start: "left"
};
var textAlignStyle = Ce(["text-align:", ";"], function(props) {
  return TEXT_ALIGN_MAP[props.textAlign];
});
var ALIGN_ITEMS_MAP = {
  baseline: "baseline",
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var alignStyle = Ce(["align-items:", ";"], function(props) {
  var _ALIGN_ITEMS_MAP$prop;
  return (_ALIGN_ITEMS_MAP$prop = ALIGN_ITEMS_MAP[props.align]) != null ? _ALIGN_ITEMS_MAP$prop : props.align;
});
var ALIGN_CONTENT_MAP = {
  around: "space-around",
  baseline: "baseline",
  between: "space-between",
  center: "center",
  evenly: "space-evenly",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var alignContentStyle = Ce(["align-content:", ";"], function(props) {
  var _ALIGN_CONTENT_MAP$pr;
  return (_ALIGN_CONTENT_MAP$pr = ALIGN_CONTENT_MAP[props.alignContent]) != null ? _ALIGN_CONTENT_MAP$pr : props.alignContent;
});
var getSize = function getSize2(theme, size) {
  return theme.global.size[size] || size;
};
var widthObjectStyle = function widthObjectStyle2(width, theme) {
  var result = [];
  if (width.max)
    result.push(Ce(["max-width:", ";"], getSize(theme, width.max)));
  if (width.min)
    result.push(Ce(["min-width:", ";"], getSize(theme, width.min)));
  if (width.width)
    result.push(Ce(["width:", ";"], getSize(theme, width.width)));
  return result;
};
var widthStringStyle = function widthStringStyle2(width, theme) {
  return Ce(["width:", ";"], getSize(theme, width));
};
var widthStyle = function widthStyle2(width, theme) {
  return typeof width === "object" ? widthObjectStyle(width, theme) : widthStringStyle(width, theme);
};
var heightObjectStyle = function heightObjectStyle2(height, theme) {
  var result = [];
  if (height.max)
    result.push(Ce(["max-height:", ";"], getSize(theme, height.max)));
  if (height.min)
    result.push(Ce(["min-height:", ";"], getSize(theme, height.min)));
  if (height.width)
    result.push(Ce(["height:", ";"], getSize(theme, height.height)));
  return result;
};
var heightStringStyle = function heightStringStyle2(height, theme) {
  return Ce(["height:", ";"], getSize(theme, height));
};
var heightStyle = function heightStyle2(height, theme) {
  return typeof height === "object" ? heightObjectStyle(height, theme) : heightStringStyle(height, theme);
};

// node_modules/grommet/es6/utils/object.js
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var isObject = function isObject2(item) {
  return item && typeof item === "object" && !Array.isArray(item);
};
var deepFreeze = function deepFreeze2(obj) {
  Object.keys(obj).forEach(function(key) {
    return key && isObject(obj[key]) && Object.freeze(obj[key]);
  });
  return Object.freeze(obj);
};
var deepMerge = function deepMerge2(target) {
  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }
  if (!sources.length) {
    return target;
  }
  var output = _extends2({}, target);
  sources.forEach(function(source) {
    if (isObject(source)) {
      Object.keys(source).forEach(function(key) {
        if (isObject(source[key])) {
          if (!output[key]) {
            output[key] = _extends2({}, source[key]);
          } else {
            output[key] = deepMerge2(output[key], source[key]);
          }
        } else {
          output[key] = source[key];
        }
      });
    }
  });
  return output;
};
var removeUndefined = function removeUndefined2(obj) {
  var result = {};
  Object.keys(obj).forEach(function(key) {
    if (obj[key] !== void 0) {
      result[key] = obj[key];
    }
  });
  return result;
};

// node_modules/grommet/es6/utils/pagination.js
var import_react = __toESM(require_react());
var _excluded = ["data", "page", "step"];
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var normalizeShow = function normalizeShow2(showProp, step) {
  var page;
  if (typeof showProp === "number")
    page = Math.ceil((showProp + 1) / step);
  else if (typeof showProp === "object" && "page" in showProp)
    page = showProp.page;
  return page;
};
var usePagination = function usePagination2(_ref) {
  var data = _ref.data, page = _ref.page, step = _ref.step, rest = _objectWithoutPropertiesLoose(_ref, _excluded);
  var totalPages = data ? Math.ceil(data.length / step) : 0;
  var _useState = (0, import_react.useState)(Math.min(page, totalPages) || 1), activePage = _useState[0], setActivePage = _useState[1];
  if (activePage > totalPages && (data == null ? void 0 : data.length) > 0)
    setActivePage(Math.max(totalPages, 1));
  var itemsBeginIndex = step * (activePage - 1);
  var itemsEndIndex = itemsBeginIndex + step;
  var currentItems = (0, import_react.useMemo)(function() {
    if (Array.isArray(data))
      return data.slice(itemsBeginIndex, itemsEndIndex);
    return [];
  }, [data, itemsBeginIndex, itemsEndIndex]);
  var paginationProps = _extends3({
    numberItems: data && data.length,
    onChange: function onChange(event) {
      return setActivePage(event.page);
    },
    page: activePage,
    step
  }, rest);
  return [currentItems, paginationProps];
};

// node_modules/grommet/es6/utils/PortalContext.js
var import_react2 = __toESM(require_react());
var PortalContext = import_react2.default.createContext(void 0);

// node_modules/grommet/es6/utils/refs.js
var import_react4 = __toESM(require_react());

// node_modules/grommet/es6/utils/use-isomorphic-layout-effect.js
var import_react3 = __toESM(require_react());
var useLayoutEffect = typeof window !== "undefined" ? import_react3.useLayoutEffect : import_react3.useEffect;

// node_modules/grommet/es6/utils/refs.js
var updateRef = function updateRef2(ref, innerRef) {
  if (!ref)
    return;
  if (typeof ref === "function") {
    ref(innerRef.current);
  } else {
    ref.current = innerRef.current;
  }
};
var useForwardedRef = function useForwardedRef2(ref) {
  var innerRef = (0, import_react4.useRef)(null);
  updateRef(ref, innerRef);
  useLayoutEffect(function() {
    return updateRef(ref, innerRef);
  });
  (0, import_react4.useEffect)(function() {
    return updateRef(ref, innerRef);
  });
  return innerRef;
};

// node_modules/grommet/es6/themes/base.js
var import_Actions = __toESM(require_Actions());
var import_ClosedCaption = __toESM(require_ClosedCaption());
var import_Expand = __toESM(require_Expand());
var import_FormClose = __toESM(require_FormClose());
var import_FormDown = __toESM(require_FormDown());
var import_FormNext = __toESM(require_FormNext());
var import_FormPrevious = __toESM(require_FormPrevious());
var import_FormUp = __toESM(require_FormUp());
var import_Next = __toESM(require_Next());
var import_Pause = __toESM(require_Pause());
var import_Play = __toESM(require_Play());
var import_Previous = __toESM(require_Previous());
var import_StatusCriticalSmall = __toESM(require_StatusCriticalSmall());
var import_StatusGoodSmall = __toESM(require_StatusGoodSmall());
var import_StatusWarningSmall = __toESM(require_StatusWarningSmall());
var import_StatusUnknownSmall = __toESM(require_StatusUnknownSmall());
var import_Subtract = __toESM(require_Subtract());
var import_Volume = __toESM(require_Volume());
var import_VolumeLow = __toESM(require_VolumeLow());
var import_base = __toESM(require_base());
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
var brandColor = "#7D4CDB";
var accentColors = ["#6FFFB0", "#FD6FFF", "#81FCED", "#FFCA58"];
var neutralColors = ["#00873D", "#3D138D", "#00739D", "#A2423D"];
var statusColors = {
  critical: "#FF4040",
  error: "#FF4040",
  warning: "#FFAA15",
  ok: "#00C781",
  unknown: "#CCCCCC",
  disabled: "#CCCCCC"
};
var darkColors = ["#333333", "#555555", "#777777", "#999999", "#999999", "#999999"];
var lightColors = ["#F8F8F8", "#F2F2F2", "#EDEDED", "#DADADA", "#DADADA", "#DADADA"];
var focusColor = accentColors[0];
var colors = {
  active: "rgba(221, 221, 221, 0.5)",
  "background-back": {
    dark: "#33333308",
    light: "#EDEDED"
  },
  "background-front": {
    dark: "#444444",
    light: "#FFFFFF"
  },
  "background-contrast": {
    light: "#33333310",
    dark: "#FFFFFF18"
  },
  "active-background": "background-contrast",
  "active-text": "text-strong",
  black: "#000000",
  border: {
    dark: "rgba(255, 255, 255, 0.33)",
    light: "rgba(0, 0, 0, 0.33)"
  },
  brand: brandColor,
  control: {
    dark: "accent-1",
    light: "brand"
  },
  focus: focusColor,
  "graph-0": "accent-1",
  "graph-1": "neutral-1",
  "graph-2": "neutral-2",
  "graph-3": "neutral-3",
  "graph-4": "neutral-4",
  placeholder: "#AAAAAA",
  selected: "brand",
  text: {
    dark: "#f8f8f8",
    light: "#444444"
  },
  "text-strong": {
    dark: "#FFFFFF",
    light: "#000000"
  },
  "text-weak": {
    dark: "#CCCCCC",
    light: "#555555"
  },
  "text-xweak": {
    dark: "#BBBBBB",
    light: "#666666"
  },
  icon: {
    dark: "#f8f8f8",
    light: "#666666"
  },
  "selected-background": "brand",
  "selected-text": "text-strong",
  white: "#FFFFFF"
};
var colorArray = function colorArray2(array, prefix) {
  return array.forEach(function(color, index) {
    colors[prefix + "-" + (index + 1)] = color;
  });
};
colorArray(accentColors, "accent");
colorArray(darkColors, "dark");
colorArray(lightColors, "light");
colorArray(neutralColors, "neutral");
Object.keys(statusColors).forEach(function(color) {
  colors["status-" + color] = statusColors[color];
});
var generate = function generate2(baseSpacing, scale) {
  if (baseSpacing === void 0) {
    baseSpacing = 24;
  }
  if (scale === void 0) {
    scale = 6;
  }
  var baseFontSize = baseSpacing * 0.75;
  var fontScale = baseSpacing / scale;
  var fontSizing = function fontSizing2(factor) {
    return {
      size: baseFontSize + factor * fontScale + "px",
      height: baseSpacing + factor * fontScale + "px",
      maxWidth: baseSpacing * (baseFontSize + factor * fontScale) + "px"
    };
  };
  var borderWidth = 2;
  var controlBorderWidth = 1;
  var result = deepMerge(import_base.base, {
    global: {
      active: {
        background: {
          color: "active",
          opacity: "medium"
        },
        color: {
          dark: "white",
          light: "black"
        }
      },
      animation: {
        duration: "1s",
        jiggle: {
          duration: "0.1s"
        }
      },
      borderSize: {
        xsmall: "1px",
        small: "2px",
        medium: baseSpacing / 6 + "px",
        large: baseSpacing / 2 + "px",
        xlarge: baseSpacing + "px"
      },
      breakpoints: {
        small: {
          value: baseSpacing * 32,
          borderSize: {
            xsmall: "1px",
            small: "2px",
            medium: baseSpacing / 6 + "px",
            large: baseSpacing / 4 + "px",
            xlarge: baseSpacing / 2 + "px"
          },
          edgeSize: {
            none: "0px",
            hair: "1px",
            xxsmall: "2px",
            xsmall: baseSpacing / 8 + "px",
            small: baseSpacing / 4 + "px",
            medium: baseSpacing / 2 + "px",
            large: baseSpacing + "px",
            xlarge: baseSpacing * 2 + "px"
          },
          size: {
            xxsmall: baseSpacing + "px",
            xsmall: baseSpacing * 2 + "px",
            small: baseSpacing * 4 + "px",
            medium: baseSpacing * 8 + "px",
            large: baseSpacing * 16 + "px",
            xlarge: baseSpacing * 32 + "px",
            full: "100%"
          }
        },
        medium: {
          value: baseSpacing * 64
        },
        large: {}
      },
      deviceBreakpoints: {
        phone: "small",
        tablet: "medium",
        computer: "large"
      },
      colors,
      control: {
        border: {
          width: controlBorderWidth + "px",
          radius: "4px",
          color: "border"
        },
        disabled: {
          opacity: 0.3
        }
      },
      debounceDelay: 300,
      drop: {
        background: {
          dark: "black",
          light: "white"
        },
        border: {
          radius: "0px"
        },
        shadowSize: "small",
        zIndex: "20"
      },
      edgeSize: {
        none: "0px",
        hair: "1px",
        xxsmall: baseSpacing / 8 + "px",
        xsmall: baseSpacing / 4 + "px",
        small: baseSpacing / 2 + "px",
        medium: baseSpacing + "px",
        large: baseSpacing * 2 + "px",
        xlarge: baseSpacing * 4 + "px",
        responsiveBreakpoint: "small"
      },
      elevation: {
        light: {
          none: "none",
          xsmall: "0px 1px 2px rgba(0, 0, 0, 0.20)",
          small: "0px 2px 4px rgba(0, 0, 0, 0.20)",
          medium: "0px 4px 8px rgba(0, 0, 0, 0.20)",
          large: "0px 8px 16px rgba(0, 0, 0, 0.20)",
          xlarge: "0px 12px 24px rgba(0, 0, 0, 0.20)"
        },
        dark: {
          none: "none",
          xsmall: "0px 2px 2px rgba(255, 255, 255, 0.40)",
          small: "0px 4px 4px rgba(255, 255, 255, 0.40)",
          medium: "0px 6px 8px rgba(255, 255, 255, 0.40)",
          large: "0px 8px 16px rgba(255, 255, 255, 0.40)",
          xlarge: "0px 12px 24px rgba(255, 255, 255, 0.40)"
        }
      },
      focus: {
        border: {
          color: "focus"
        },
        shadow: {
          color: "focus",
          size: "2px"
        }
      },
      font: _extends4({}, fontSizing(0)),
      hover: {
        background: {
          color: "active",
          opacity: "medium"
        },
        color: {
          dark: "white",
          light: "black"
        }
      },
      input: {
        padding: {
          horizontal: parseMetricToNum(baseSpacing / 2 + "px") - parseMetricToNum(controlBorderWidth + "px") + "px",
          vertical: parseMetricToNum(baseSpacing / 2 + "px") - parseMetricToNum(controlBorderWidth + "px") + "px"
        },
        font: {
          weight: 600
        }
      },
      opacity: {
        strong: 0.8,
        medium: 0.4,
        weak: 0.1
      },
      selected: {
        background: "selected",
        color: "white"
      },
      spacing: baseSpacing + "px",
      size: {
        xxsmall: baseSpacing * 2 + "px",
        xsmall: baseSpacing * 4 + "px",
        small: baseSpacing * 8 + "px",
        medium: baseSpacing * 16 + "px",
        large: baseSpacing * 32 + "px",
        xlarge: baseSpacing * 48 + "px",
        xxlarge: baseSpacing * 64 + "px",
        full: "100%"
      }
    },
    accordion: {
      panel: {},
      border: {
        side: "bottom",
        color: "border"
      },
      heading: {
        level: "4"
      },
      hover: {
        color: {
          dark: "light-4",
          light: "dark-3"
        },
        heading: {
          color: {
            dark: "light-4",
            light: "dark-3"
          }
        }
      },
      icons: {
        collapse: import_FormUp.FormUp,
        expand: import_FormDown.FormDown
      }
    },
    anchor: {
      textDecoration: "none",
      fontWeight: 600,
      color: {
        dark: "accent-1",
        light: "brand"
      },
      hover: {
        textDecoration: "underline"
      }
    },
    avatar: {
      size: {
        xsmall: baseSpacing * 0.75 + "px",
        small: baseSpacing + "px",
        medium: baseSpacing * 2 + "px",
        large: baseSpacing * 3 + "px",
        xlarge: baseSpacing * 4 + "px",
        "2xl": baseSpacing * 5 + "px",
        "3xl": baseSpacing * 6 + "px",
        "4xl": baseSpacing * 7 + "px",
        "5xl": baseSpacing * 8 + "px"
      },
      text: {
        size: {
          xsmall: "small",
          small: "medium",
          medium: "large",
          large: "xlarge",
          xlarge: "xxlarge",
          "2xl": "3xl",
          "3xl": "4xl",
          "4xl": "5xl",
          "5xl": "6xl"
        }
      }
    },
    box: {
      responsiveBreakpoint: "small"
    },
    button: {
      badge: {
        container: {
          background: "brand"
        },
        size: {
          medium: baseSpacing + "px"
        },
        text: {
          size: {
            medium: "small"
          }
        }
      },
      gap: "small",
      size: {
        small: {
          border: {
            radius: baseSpacing * 0.75 + "px"
          },
          pad: {
            vertical: baseSpacing / 4 - borderWidth + "px",
            horizontal: baseSpacing - borderWidth * 2 + "px"
          }
        },
        medium: {
          border: {
            radius: baseSpacing * 0.75 + "px"
          },
          pad: {
            vertical: baseSpacing / 4 - borderWidth + "px",
            horizontal: baseSpacing - borderWidth + "px"
          }
        },
        large: {
          border: {
            radius: baseSpacing + "px"
          },
          pad: {
            vertical: baseSpacing / 4 + borderWidth + "px",
            horizontal: baseSpacing + borderWidth * 4 + "px"
          }
        }
      },
      border: {
        width: borderWidth + "px",
        radius: baseSpacing * 0.75 + "px"
      },
      active: {
        background: "active-background",
        color: "active-text"
      },
      disabled: {
        opacity: 0.3
      },
      padding: {
        vertical: baseSpacing / 4 - borderWidth + "px",
        horizontal: baseSpacing - borderWidth + "px"
      },
      transition: {
        timing: "ease-in-out",
        duration: 0.1,
        properties: ["color", "background-color", "border-color", "box-shadow"]
      }
    },
    calendar: {
      small: {
        fontSize: baseFontSize - fontScale + "px",
        lineHeight: 1.375,
        daySize: baseSpacing * 8 / 7 + "px",
        slideDuration: "0.2s"
      },
      medium: {
        fontSize: baseFontSize + "px",
        lineHeight: 1.45,
        daySize: baseSpacing * 16 / 7 + "px",
        slideDuration: "0.5s"
      },
      large: {
        fontSize: baseFontSize + 3 * fontScale + "px",
        lineHeight: 1.11,
        daySize: baseSpacing * 32 / 7 + "px",
        slideDuration: "0.8s"
      },
      icons: {
        previous: import_Previous.Previous,
        next: import_Next.Next,
        small: {
          previous: import_FormPrevious.FormPrevious,
          next: import_FormNext.FormNext
        }
      },
      heading: {
        level: "4"
      }
    },
    card: {
      container: {
        round: "small",
        elevation: "small"
      },
      header: {},
      body: {},
      footer: {}
    },
    carousel: {
      icons: {
        current: import_Subtract.Subtract,
        next: import_Next.Next,
        previous: import_Previous.Previous
      },
      animation: {
        duration: 1e3
      },
      disabled: {
        icons: {}
      }
    },
    chart: {
      color: "graph-0"
    },
    checkBox: {
      border: {
        color: {
          dark: "rgba(255, 255, 255, 0.5)",
          light: "rgba(0, 0, 0, 0.15)"
        },
        width: "2px"
      },
      check: {
        radius: "4px",
        thickness: "4px"
      },
      label: {
        align: "center"
      },
      hover: {
        border: {
          color: {
            dark: "white",
            light: "black"
          }
        }
      },
      icon: {},
      icons: {},
      size: baseSpacing + "px",
      toggle: {
        color: {
          dark: "#d9d9d9",
          light: "#d9d9d9"
        },
        knob: {},
        radius: baseSpacing + "px",
        size: baseSpacing * 2 + "px"
      }
    },
    checkBoxGroup: {},
    clock: {
      analog: {
        hour: {
          color: {
            dark: "light-2",
            light: "dark-3"
          },
          width: baseSpacing / 3 + "px",
          size: baseSpacing + "px",
          shape: "round"
        },
        minute: {
          color: {
            dark: "light-4",
            light: "dark-3"
          },
          width: baseSpacing / 6 + "px",
          size: Math.round(baseSpacing / 2) + "px",
          shape: "round"
        },
        second: {
          color: {
            dark: "accent-1",
            light: "accent-1"
          },
          width: baseSpacing / 8 + "px",
          size: Math.round(baseSpacing / 2.666) + "px",
          shape: "round"
        },
        size: {
          xsmall: baseSpacing * 2 + "px",
          small: baseSpacing * 3 + "px",
          medium: baseSpacing * 4 + "px",
          large: baseSpacing * 6 + "px",
          xlarge: baseSpacing * 9 + "px",
          xxlarge: baseSpacing * 12 + "px",
          huge: baseSpacing * 12 + "px"
        }
      },
      digital: {
        text: {
          xsmall: {
            size: baseFontSize - 2 * fontScale + "px",
            height: 1.5
          },
          small: {
            size: baseFontSize - fontScale + "px",
            height: 1.43
          },
          medium: {
            size: baseFontSize + "px",
            height: 1.375
          },
          large: {
            size: baseFontSize + fontScale + "px",
            height: 1.167
          },
          xlarge: {
            size: baseFontSize + 2 * fontScale + "px",
            height: 1.1875
          },
          xxlarge: {
            size: baseFontSize + 4 * fontScale + "px",
            height: 1.125
          }
        }
      }
    },
    collapsible: {
      minSpeed: 200,
      baseline: 500
    },
    dateInput: {},
    dataTable: {
      pinned: {
        header: {
          background: {
            opacity: "strong"
          }
        },
        footer: {
          background: {
            opacity: "strong"
          }
        }
      },
      container: {
        gap: "xsmall"
      },
      groupHeader: {
        background: {
          dark: "dark-2",
          light: "light-2"
        },
        border: {
          side: "bottom",
          size: "xsmall"
        },
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        }
      },
      groupEnd: {
        border: {
          side: "bottom",
          size: "xsmall"
        }
      },
      header: {
        gap: "small",
        units: {
          color: "text-xweak",
          margin: {
            left: "xsmall"
          }
        }
      },
      icons: {
        ascending: import_FormDown.FormDown,
        contract: import_FormUp.FormUp,
        descending: import_FormUp.FormUp,
        expand: import_FormDown.FormDown
      },
      primary: {
        weight: "bold"
      },
      resize: {
        border: {
          color: "border",
          side: "end"
        }
      }
    },
    diagram: {
      line: {
        color: "graph-0"
      }
    },
    fileInput: {
      border: {
        side: "all",
        size: "small",
        style: "dashed"
      },
      dragOver: {
        border: {
          color: "control"
        }
      },
      hover: {
        border: {
          color: "brand"
        }
      },
      icons: {
        remove: import_FormClose.FormClose
      },
      label: {
        margin: "small"
      },
      message: {
        margin: "small"
      }
    },
    formField: {
      border: {
        color: "border",
        error: {
          color: {
            dark: "white",
            light: "status-critical"
          }
        },
        position: "inner",
        side: "bottom"
      },
      content: {
        pad: "small"
      },
      disabled: {
        background: {
          color: "status-disabled",
          opacity: "medium"
        }
      },
      error: {
        color: "status-critical",
        margin: {
          vertical: "xsmall",
          horizontal: "small"
        }
      },
      help: {
        color: "dark-3",
        margin: {
          start: "small"
        }
      },
      info: {
        color: "text-xweak",
        margin: {
          vertical: "xsmall",
          horizontal: "small"
        }
      },
      label: {
        margin: {
          vertical: "xsmall",
          horizontal: "small"
        }
      },
      margin: {
        bottom: "small"
      }
    },
    grommet: {},
    heading: {
      font: {},
      level: {
        1: {
          font: {},
          small: _extends4({}, fontSizing(4)),
          medium: _extends4({}, fontSizing(8)),
          large: _extends4({}, fontSizing(16)),
          xlarge: _extends4({}, fontSizing(24))
        },
        2: {
          font: {},
          small: _extends4({}, fontSizing(2)),
          medium: _extends4({}, fontSizing(4)),
          large: _extends4({}, fontSizing(8)),
          xlarge: _extends4({}, fontSizing(12))
        },
        3: {
          font: {},
          small: _extends4({}, fontSizing(1)),
          medium: _extends4({}, fontSizing(2)),
          large: _extends4({}, fontSizing(4)),
          xlarge: _extends4({}, fontSizing(6))
        },
        4: {
          font: {},
          small: _extends4({}, fontSizing(0)),
          medium: _extends4({}, fontSizing(0)),
          large: _extends4({}, fontSizing(0)),
          xlarge: _extends4({}, fontSizing(0))
        },
        5: {
          font: {},
          small: _extends4({}, fontSizing(-0.5)),
          medium: _extends4({}, fontSizing(-0.5)),
          large: _extends4({}, fontSizing(-0.5)),
          xlarge: _extends4({}, fontSizing(-0.5))
        },
        6: {
          font: {},
          small: _extends4({}, fontSizing(-1)),
          medium: _extends4({}, fontSizing(-1)),
          large: _extends4({}, fontSizing(-1)),
          xlarge: _extends4({}, fontSizing(-1))
        }
      },
      responsiveBreakpoint: "small",
      weight: 600
    },
    layer: {
      background: {
        dark: "black",
        light: "white"
      },
      border: {
        radius: "4px"
      },
      container: {
        zIndex: "20"
      },
      overlay: {
        background: "rgba(0, 0, 0, 0.5)"
      },
      responsiveBreakpoint: "small",
      zIndex: "20"
    },
    list: {
      container: {
        gap: "xsmall"
      },
      item: {
        border: "horizontal",
        pad: {
          horizontal: "medium",
          vertical: "small"
        }
      },
      icons: {
        down: import_FormDown.FormDown,
        up: import_FormUp.FormUp
      }
    },
    maskedInput: {},
    menu: {
      drop: {
        align: {
          top: "top",
          left: "left"
        }
      },
      icons: {
        down: import_FormDown.FormDown
      }
    },
    meter: {
      color: "graph-0"
    },
    nameValueList: {
      gap: {
        column: "large",
        row: "small"
      },
      pair: {
        column: {
          gap: {
            column: "large",
            row: "medium"
          }
        }
      },
      name: {
        width: "small"
      },
      value: {
        width: "medium"
      }
    },
    nameValuePair: {
      column: {
        gap: "xxsmall"
      },
      name: {
        color: "text",
        weight: "bold"
      },
      value: {
        color: "text"
      }
    },
    notification: {
      container: {
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        },
        background: {
          color: "background-front"
        }
      },
      toast: {
        container: {
          elevation: "medium",
          round: "xsmall",
          width: "medium"
        },
        layer: {
          position: "top",
          margin: "medium"
        },
        time: 8e3
      },
      iconContainer: {
        pad: {
          right: "small"
        }
      },
      textContainer: {
        gap: "medium"
      },
      title: {
        weight: "bold"
      },
      message: {
        margin: "none"
      },
      close: {
        icon: import_FormClose.FormClose
      },
      critical: {
        icon: import_StatusCriticalSmall.StatusCriticalSmall,
        color: "status-critical"
      },
      warning: {
        icon: import_StatusWarningSmall.StatusWarningSmall,
        color: "status-warning"
      },
      normal: {
        icon: import_StatusGoodSmall.StatusGoodSmall,
        color: "status-ok"
      },
      unknown: {
        icon: import_StatusUnknownSmall.StatusUnknownSmall,
        color: "status-unknown"
      },
      undefined: {
        icon: import_StatusUnknownSmall.StatusUnknownSmall,
        color: "status-unknown"
      }
    },
    pagination: {
      button: {
        active: {
          background: {
            color: "active-background"
          }
        },
        color: "text-strong",
        hover: {
          background: {
            color: "background-contrast"
          },
          color: void 0
        },
        size: {
          small: {
            border: {
              radius: baseSpacing / 8 + "px",
              width: "2px"
            },
            pad: {
              vertical: "4px",
              horizontal: "4px"
            },
            font: _extends4({}, fontSizing(-1)),
            height: baseSpacing * 1.25 + "px",
            width: baseSpacing * 1.25 + "px"
          },
          medium: {
            border: {
              radius: baseSpacing / 6 + "px",
              width: "2px"
            },
            pad: {
              vertical: "4px",
              horizontal: "4px"
            },
            font: _extends4({}, fontSizing(0)),
            height: baseSpacing * 1.5 + "px",
            width: baseSpacing * 1.5 + "px"
          },
          large: {
            border: {
              radius: baseSpacing / 4 + "px",
              width: "2px"
            },
            pad: {
              vertical: "4px",
              horizontal: "4px"
            },
            font: _extends4({}, fontSizing(1)),
            height: baseSpacing * 2 + "px",
            width: baseSpacing * 2 + "px"
          }
        }
      },
      controls: {
        align: "center",
        direction: "row",
        gap: "xxsmall",
        margin: "none",
        pad: "none"
      },
      icons: {
        next: import_Next.Next,
        previous: import_Previous.Previous
      }
    },
    paragraph: {
      font: {},
      small: _extends4({}, fontSizing(-1)),
      medium: _extends4({}, fontSizing(0)),
      large: _extends4({}, fontSizing(1)),
      xlarge: _extends4({}, fontSizing(2)),
      xxlarge: _extends4({}, fontSizing(4))
    },
    spinner: {
      container: {
        animation: "rotateRight",
        color: "brand",
        pad: "small",
        round: "full",
        size: "small"
      },
      size: {
        xsmall: baseSpacing * 0.75 + "px",
        small: baseSpacing + "px",
        medium: baseSpacing * 2 + "px",
        large: baseSpacing * 3 + "px",
        xlarge: baseSpacing * 4 + "px"
      }
    },
    radioButton: {
      border: {
        color: {
          dark: "rgba(255, 255, 255, 0.5)",
          light: "rgba(0, 0, 0, 0.15)"
        },
        width: "2px"
      },
      check: {
        radius: "100%"
      },
      hover: {
        border: {
          color: {
            dark: "white",
            light: "black"
          }
        }
      },
      icon: {},
      icons: {},
      gap: "small",
      size: baseSpacing + "px",
      font: {},
      container: {}
    },
    radioButtonGroup: {},
    rangeInput: {
      disabled: {
        opacity: 0.3
      },
      track: {
        height: "4px",
        color: "border"
      },
      thumb: {}
    },
    rangeSelector: {
      background: {
        invert: {
          color: "light-4"
        }
      }
    },
    select: {
      clear: {
        container: {
          pad: "small",
          background: "background-contrast"
        },
        text: {
          color: "text-weak"
        }
      },
      container: {},
      control: {},
      icons: {
        margin: {
          horizontal: "small"
        },
        down: import_FormDown.FormDown
      },
      options: {
        container: {
          align: "start",
          pad: "small"
        },
        text: {
          margin: "none"
        }
      },
      step: 20
    },
    skipLinks: {
      position: "top",
      container: {
        elevation: "large",
        round: "small",
        pad: "medium"
      },
      label: {
        margin: {
          bottom: "medium"
        },
        size: "medium"
      }
    },
    tab: {
      active: {
        color: "text"
      },
      border: {
        side: "bottom",
        size: "small",
        color: {
          dark: "accent-1",
          light: "brand"
        },
        active: {
          color: {
            dark: "white",
            light: "black"
          }
        },
        disabled: {},
        hover: {
          color: {
            dark: "white",
            light: "black"
          }
        }
      },
      color: "control",
      hover: {
        color: {
          dark: "white",
          light: "black"
        }
      },
      margin: {
        vertical: "xxsmall",
        horizontal: "small"
      },
      pad: {
        bottom: "xsmall"
      }
    },
    tabs: {
      header: {},
      panel: {}
    },
    table: {
      header: {
        align: "start",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        },
        border: "bottom"
      },
      body: {
        align: "start",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        }
      },
      footer: {
        align: "start",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        },
        border: "top"
      }
    },
    tag: {
      border: true,
      round: "large",
      pad: {
        horizontal: "small",
        vertical: "xsmall"
      },
      remove: {
        margin: {
          right: "xsmall"
        }
      },
      separator: " : ",
      size: {
        xsmall: {
          pad: {
            horizontal: baseSpacing / 3 + "px",
            vertical: "xxsmall"
          },
          icon: {
            size: baseSpacing * 0.75 + "px"
          }
        },
        small: {
          pad: {
            horizontal: baseSpacing * 0.4 + "px",
            vertical: "xxsmall"
          },
          icon: {
            size: baseSpacing * 0.75 + "px"
          }
        },
        large: {
          pad: {
            horizontal: baseSpacing / 3 * 2 + "px",
            vertical: "xsmall"
          },
          icon: {
            size: baseSpacing * 1.25 + "px"
          }
        },
        xlarge: {
          pad: {
            horizontal: baseSpacing * 0.75 + "px",
            vertical: "xsmall"
          },
          icon: {
            size: baseSpacing * 1.5 + "px"
          }
        }
      },
      value: {
        weight: 600
      }
    },
    text: {
      font: {},
      xsmall: _extends4({}, fontSizing(-1.5)),
      small: _extends4({}, fontSizing(-1)),
      medium: _extends4({}, fontSizing(0)),
      large: _extends4({}, fontSizing(1)),
      xlarge: _extends4({}, fontSizing(2)),
      xxlarge: _extends4({}, fontSizing(4)),
      "2xl": _extends4({}, fontSizing(4)),
      "3xl": _extends4({}, fontSizing(6)),
      "4xl": _extends4({}, fontSizing(9)),
      "5xl": _extends4({}, fontSizing(13)),
      "6xl": _extends4({}, fontSizing(18))
    },
    textArea: {},
    textInput: {},
    tip: {
      content: {
        background: "background-contrast",
        elevation: "small",
        margin: "xsmall",
        pad: {
          vertical: "xsmall",
          horizontal: "small"
        },
        round: "small"
      },
      drop: {
        align: {
          top: "bottom"
        },
        background: "none",
        elevation: "none",
        margin: "none"
      }
    },
    video: {
      captions: {
        background: "rgba(0, 0, 0, 0.7)"
      },
      icons: {
        closedCaption: import_ClosedCaption.ClosedCaption,
        configure: import_Actions.Actions,
        fullScreen: import_Expand.Expand,
        pause: import_Pause.Pause,
        play: import_Play.Play,
        reduceVolume: import_VolumeLow.VolumeLow,
        volume: import_Volume.Volume
      },
      scrubber: {
        color: "light-4"
      }
    },
    worldMap: {
      color: "light-3",
      continent: {
        active: "8px",
        base: "6px"
      },
      hover: {
        color: "light-4"
      },
      place: {
        active: "20px",
        base: "8px"
      }
    }
  });
  return deepFreeze(result);
};
var base = generate(24);

// node_modules/grommet/es6/default-props.js
var defaultProps2 = {
  theme: base
};
var extendDefaultTheme = function extendDefaultTheme2(theme) {
  defaultProps2.theme = deepMerge(base, theme);
};

// node_modules/grommet/es6/components/Keyboard/Keyboard.js
var import_react5 = __toESM(require_react());

// node_modules/grommet/es6/components/Keyboard/propTypes.js
var import_prop_types3 = __toESM(require_prop_types());
var PropType2 = {};
if (true) {
  PropType2 = {
    target: import_prop_types3.default.oneOf(["component", "document"]),
    onBackspace: import_prop_types3.default.func,
    onComma: import_prop_types3.default.func,
    onDown: import_prop_types3.default.func,
    onEnter: import_prop_types3.default.func,
    onEsc: import_prop_types3.default.func,
    onKeyDown: import_prop_types3.default.func,
    onLeft: import_prop_types3.default.func,
    onRight: import_prop_types3.default.func,
    onShift: import_prop_types3.default.func,
    onSpace: import_prop_types3.default.func,
    onTab: import_prop_types3.default.func,
    onUp: import_prop_types3.default.func
  };
}
var KeyboardPropTypes = PropType2;

// node_modules/grommet/es6/components/Keyboard/Keyboard.js
var _excluded2 = ["capture", "target", "children", "onKeyDown"];
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var KEYS = {
  8: "onBackspace",
  9: "onTab",
  13: "onEnter",
  27: "onEsc",
  32: "onSpace",
  37: "onLeft",
  38: "onUp",
  39: "onRight",
  40: "onDown",
  188: "onComma",
  16: "onShift"
};
var Keyboard = function Keyboard2(_ref) {
  var capture = _ref.capture, target = _ref.target, children2 = _ref.children, onKeyDown = _ref.onKeyDown, restProps = _objectWithoutPropertiesLoose2(_ref, _excluded2);
  var onKeyDownHandler = (0, import_react5.useCallback)(function(event) {
    var key = event.keyCode ? event.keyCode : event.which;
    var callbackName = KEYS[key];
    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      rest[_key - 1] = arguments[_key];
    }
    if (callbackName && restProps[callbackName]) {
      restProps[callbackName].apply(restProps, [event].concat(rest));
    }
    if (onKeyDown) {
      onKeyDown.apply(void 0, [event].concat(rest));
    }
  }, [onKeyDown, restProps]);
  (0, import_react5.useEffect)(function() {
    if (target === "document") {
      document.addEventListener("keydown", onKeyDownHandler, capture);
    }
    return function() {
      if (target === "document") {
        document.removeEventListener("keydown", onKeyDownHandler, capture);
      }
    };
  }, [capture, onKeyDownHandler, target]);
  return target === "document" ? children2 : (0, import_react5.cloneElement)(import_react5.Children.only(children2), {
    onKeyDown: onKeyDownHandler
  });
};
Keyboard.propTypes = KeyboardPropTypes;

// node_modules/grommet/es6/components/Box/StyledBox.js
init_styled_components_browser_esm();
var _FLEX_MAP;
function _extends5() {
  _extends5 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var BASIS_MAP = {
  auto: "auto",
  full: "100%",
  "1/2": "50%",
  "1/4": "25%",
  "2/4": "50%",
  "3/4": "75%",
  "1/3": "33.33%",
  "2/3": "66.66%"
};
var basisStyle = Ce(["flex-basis:", ";"], function(props) {
  return BASIS_MAP[props.basis] || props.theme.global.size[props.basis] || props.basis;
});
var directionStyle = function directionStyle2(direction, theme) {
  var styles = [Ce(["min-width:0;min-height:0;flex-direction:", ";"], direction === "row-responsive" ? "row" : direction)];
  if (direction === "row-responsive" && theme.box.responsiveBreakpoint) {
    var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
    if (breakpoint) {
      styles.push(breakpointStyle(breakpoint, "\n        flex-direction: column;\n        flex-basis: auto;\n        justify-content: flex-start;\n        align-items: stretch;\n      "));
    }
  }
  return styles;
};
var elevationStyle = function elevationStyle2(elevation) {
  return Ce(["box-shadow:", ";"], function(props) {
    return props.theme.global.elevation[props.theme.dark ? "dark" : "light"][elevation];
  });
};
var FLEX_MAP = (_FLEX_MAP = {}, _FLEX_MAP[true] = "1 1", _FLEX_MAP[false] = "0 0", _FLEX_MAP.grow = "1 0", _FLEX_MAP.shrink = "0 1", _FLEX_MAP);
var flexGrowShrinkProp = function flexGrowShrinkProp2(flex) {
  if (typeof flex === "boolean" || typeof flex === "string") {
    return FLEX_MAP[flex];
  }
  return (flex.grow ? flex.grow : 0) + " " + (flex.shrink ? flex.shrink : 0);
};
var flexStyle = Ce(["flex:", ";"], function(props) {
  return "" + flexGrowShrinkProp(props.flex) + (props.flex !== true && !props.basis ? " auto" : "");
});
var JUSTIFY_MAP = {
  around: "space-around",
  between: "space-between",
  center: "center",
  end: "flex-end",
  evenly: "space-evenly",
  start: "flex-start"
};
var justifyStyle = Ce(["justify-content:", ";"], function(props) {
  return JUSTIFY_MAP[props.justify];
});
var WRAP_MAP = {
  "true": "wrap",
  reverse: "wrap-reverse"
};
var wrapStyle = Ce(["flex-wrap:", ";"], function(props) {
  return WRAP_MAP[props.wrapProp];
});
var animationItemStyle = function animationItemStyle2(item, theme) {
  if (typeof item === "string") {
    return animationObjectStyle({
      type: item
    }, theme);
  }
  if (Array.isArray(item)) {
    return item.reduce(function(style, a2, index) {
      return Ce(["", "", " ", ""], style, index > 0 ? "," : "", animationItemStyle2(a2, theme));
    }, "");
  }
  if (typeof item === "object") {
    return animationObjectStyle(item, theme);
  }
  return "";
};
var animationAncilaries = function animationAncilaries2(animation) {
  if (animation.type === "flipIn" || animation.type === "flipOut") {
    return "perspective: 1000px; transform-style: preserve-3d;";
  }
  return "";
};
var animationObjectInitialStyle = function animationObjectInitialStyle2(animation) {
  var bounds2 = animationBounds(animation.type, animation.size);
  if (bounds2) {
    return bounds2[0] + " " + animationAncilaries(animation);
  }
  return "";
};
var animationInitialStyle = function animationInitialStyle2(item) {
  if (typeof item === "string") {
    return animationObjectInitialStyle({
      type: item
    });
  }
  if (Array.isArray(item)) {
    return item.map(function(a2) {
      return typeof a2 === "string" ? animationObjectInitialStyle({
        type: a2
      }) : animationObjectInitialStyle(a2);
    }).join("");
  }
  if (typeof item === "object") {
    return animationObjectInitialStyle(item);
  }
  return "";
};
var animationStyle = Ce(["", ";"], function(props) {
  return Ce(["", " animation:", ";"], animationInitialStyle(props.animation), animationItemStyle(props.animation, props.theme));
});
var interactiveStyle = Ce(["cursor:pointer;&:hover{", " ", "}"], function(props) {
  var _props$kindProp;
  return ((_props$kindProp = props.kindProp) == null ? void 0 : _props$kindProp.hover) && getHoverIndicatorStyle(props.kindProp.hover, props.theme);
}, function(props) {
  return props.hoverIndicator && getHoverIndicatorStyle(props.hoverIndicator, props.theme);
});
var StyledBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledBox",
  componentId: "sc-13pk1d4-0"
})(["display:flex;box-sizing:border-box;", ";", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", ""], function(props) {
  return !props.basis && "max-width: 100%;";
}, genericStyles, function(props) {
  return props.align && alignStyle;
}, function(props) {
  return props.alignContent && alignContentStyle;
}, function(props) {
  return props.background && backgroundStyle(props.background, props.theme);
}, function(props) {
  return props.border && (Array.isArray(props.border) ? props.border.map(function(border) {
    return borderStyle(border, props.responsive, props.theme);
  }) : borderStyle(props.border, props.responsive, props.theme));
}, function(props) {
  return props.directionProp && directionStyle(props.directionProp, props.theme);
}, function(props) {
  return props.heightProp && heightStyle(props.heightProp, props.theme);
}, function(props) {
  return props.widthProp && widthStyle(props.widthProp, props.theme);
}, function(props) {
  return props.flex !== void 0 && flexStyle;
}, function(props) {
  return props.basis && basisStyle;
}, function(props) {
  return props.fillProp && fillStyle(props.fillProp);
}, function(props) {
  return props.justify && justifyStyle;
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.round && roundStyle(props.round, props.responsive, props.theme);
}, function(props) {
  return props.wrapProp && wrapStyle;
}, function(props) {
  return props.overflowProp && overflowStyle(props.overflowProp);
}, function(props) {
  return props.elevationProp && elevationStyle(props.elevationProp);
}, function(props) {
  return props.animation && animationStyle;
}, function(props) {
  return props.onClick && interactiveStyle;
}, function(props) {
  return props.onClick && props.focus && props.focusIndicator !== false && focusStyle();
}, function(props) {
  return props.theme.box && props.theme.box.extend;
}, function(props) {
  return props.kindProp && props.kindProp.extend;
});
var gapStyle = function gapStyle2(directionProp, gap, responsive, border, theme) {
  var metric = theme.global.edgeSize[gap] || gap;
  var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
  var responsiveMetric = responsive && breakpoint && breakpoint.edgeSize[gap];
  var styles = [];
  if (directionProp === "column" || directionProp === "column-reverse") {
    styles.push("height: " + metric + ";");
    if (responsiveMetric) {
      styles.push(breakpointStyle(breakpoint, "height: " + responsiveMetric + ";"));
    }
  } else {
    styles.push("width: " + metric + ";");
    if (responsiveMetric) {
      if (directionProp === "row" || directionProp === "row-reverse") {
        styles.push(breakpointStyle(breakpoint, "width: " + responsiveMetric + ";"));
      } else if (directionProp === "row-responsive") {
        styles.push(breakpointStyle(breakpoint, "\n          width: auto;\n          height: " + responsiveMetric + ";\n        "));
      }
    }
  }
  if (border === "between" || border && border.side === "between") {
    var borderSize = border.size || "xsmall";
    var borderMetric = theme.global.borderSize[borderSize] || borderSize;
    var borderOffset = parseMetricToNum(metric) / 2 - parseMetricToNum(borderMetric) / 2 + "px";
    var responsiveBorderMetric = responsive && breakpoint && (breakpoint.borderSize[borderSize] || borderSize);
    var responsiveBorderOffset = responsiveBorderMetric && parseMetricToNum(responsiveMetric) / 2 - parseMetricToNum(responsiveBorderMetric) / 2 + "px";
    if (directionProp === "column" || directionProp === "column-reverse") {
      var adjustedBorder = typeof border === "string" ? "top" : _extends5({}, border, {
        side: "top"
      });
      styles.push(Ce(["position:relative;&:after{content:'';position:absolute;width:100%;top:", ";", "}"], borderOffset, borderStyle(adjustedBorder, responsive, theme)));
      if (responsiveBorderOffset) {
        styles.push(breakpointStyle(breakpoint, "\n            &:after {\n              content: '';\n              top: " + responsiveBorderOffset + ";\n            }"));
      }
    } else {
      var _adjustedBorder = typeof border === "string" ? "left" : _extends5({}, border, {
        side: "left"
      });
      styles.push(Ce(["position:relative;&:after{content:'';position:absolute;height:100%;left:", ";", "}"], borderOffset, borderStyle(_adjustedBorder, directionProp !== "row-responsive" && responsive, theme)));
      if (responsiveBorderOffset) {
        if (directionProp === "row" || directionProp === "row-reverse") {
          styles.push(breakpointStyle(breakpoint, "\n              &:after {\n                content: '';\n                left: " + responsiveBorderOffset + ";\n              }"));
        } else if (directionProp === "row-responsive") {
          var adjustedBorder2 = typeof border === "string" ? "top" : _extends5({}, border, {
            side: "top"
          });
          styles.push(breakpointStyle(breakpoint, "\n              &:after {\n                content: '';\n                height: auto;\n                left: unset;\n                width: 100%;\n                top: " + responsiveBorderOffset + ";\n                border-left: none;\n                " + responsiveBorderStyle(adjustedBorder2, theme) + "\n              }"));
        }
      }
    }
  }
  return styles;
};
StyledBox.defaultProps = {};
Object.setPrototypeOf(StyledBox.defaultProps, defaultProps2);
var StyledBoxGap = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledBox__StyledBoxGap",
  componentId: "sc-13pk1d4-1"
})(["flex:0 0 auto;align-self:stretch;", ";"], function(props) {
  return props.gap && gapStyle(props.directionProp, props.gap, props.responsive, props.border, props.theme);
});
StyledBoxGap.defaultProps = {};
Object.setPrototypeOf(StyledBoxGap.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Box/propTypes.js
var import_prop_types4 = __toESM(require_prop_types());
function _extends6() {
  _extends6 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
var OVERFLOW_VALUES2 = ["auto", "hidden", "scroll", "visible"];
var ANIMATION_TYPE = import_prop_types4.default.oneOf(["fadeIn", "fadeOut", "jiggle", "pulse", "rotateLeft", "rotateRight", "slideUp", "slideDown", "slideLeft", "slideRight", "zoomIn", "zoomOut"]);
var ANIMATION_SHAPE = import_prop_types4.default.shape({
  type: ANIMATION_TYPE,
  delay: import_prop_types4.default.number,
  duration: import_prop_types4.default.number,
  size: import_prop_types4.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"])
});
var BORDER_SHAPE = import_prop_types4.default.shape({
  color: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.shape({
    dark: import_prop_types4.default.string,
    light: import_prop_types4.default.string
  })]),
  side: import_prop_types4.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]),
  size: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types4.default.string]),
  style: import_prop_types4.default.oneOf(["solid", "dashed", "dotted", "double", "groove", "ridge", "inset", "outset", "hidden"])
});
var overflowPropType = import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(OVERFLOW_VALUES2), import_prop_types4.default.shape({
  horizontal: import_prop_types4.default.oneOf(OVERFLOW_VALUES2),
  vertical: import_prop_types4.default.oneOf(OVERFLOW_VALUES2)
}), import_prop_types4.default.string]);
var PropType3 = {};
if (true) {
  PropType3 = _extends6({}, genericProps, {
    align: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["baseline", "center", "end", "start", "stretch"]), import_prop_types4.default.string]),
    alignContent: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["around", "baseline", "between", "center", "evenly", "end", "start", "stretch"]), import_prop_types4.default.string]),
    animation: import_prop_types4.default.oneOfType([ANIMATION_TYPE, ANIMATION_SHAPE, import_prop_types4.default.arrayOf(import_prop_types4.default.oneOfType([ANIMATION_TYPE, ANIMATION_SHAPE]))]),
    background: backgroundDoc,
    basis: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "full", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "auto"]), import_prop_types4.default.string]),
    border: import_prop_types4.default.oneOfType([import_prop_types4.default.bool, import_prop_types4.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]), BORDER_SHAPE, import_prop_types4.default.arrayOf(BORDER_SHAPE)]),
    direction: import_prop_types4.default.oneOf(["row", "column", "row-responsive", "row-reverse", "column-reverse"]),
    elevation: elevationPropType,
    flex: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["grow", "shrink"]), import_prop_types4.default.bool, import_prop_types4.default.shape({
      grow: import_prop_types4.default.number,
      shrink: import_prop_types4.default.number
    })]),
    fill: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["horizontal", "vertical"]), import_prop_types4.default.bool]),
    focusIndicator: import_prop_types4.default.bool,
    gap: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types4.default.string]),
    height: heightPropType,
    hoverIndicator: hoverIndicatorPropType,
    justify: import_prop_types4.default.oneOf(["around", "between", "center", "end", "evenly", "start", "stretch"]),
    onClick: import_prop_types4.default.func,
    overflow: overflowPropType,
    pad: padPropType,
    responsive: import_prop_types4.default.bool,
    round: roundPropType,
    tag: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.func]),
    as: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.func]),
    width: widthPropType,
    wrap: import_prop_types4.default.oneOfType([import_prop_types4.default.bool, import_prop_types4.default.oneOf(["reverse"])])
  });
}
var BoxPropTypes = PropType3;

// node_modules/grommet/es6/components/Box/Box.js
var _excluded3 = ["a11yTitle", "background", "border", "children", "direction", "elevation", "fill", "gap", "kind", "onBlur", "onClick", "onFocus", "overflow", "responsive", "tag", "as", "wrap", "width", "height", "tabIndex"];
function _extends7() {
  _extends7 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Box = (0, import_react6.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, background = _ref.background, border = _ref.border, children2 = _ref.children, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "column" : _ref$direction, elevation = _ref.elevation, fill = _ref.fill, gap = _ref.gap, kind = _ref.kind, _onBlur = _ref.onBlur, onClick = _ref.onClick, _onFocus = _ref.onFocus, overflow = _ref.overflow, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, tag = _ref.tag, as = _ref.as, wrap = _ref.wrap, width = _ref.width, height = _ref.height, tabIndex = _ref.tabIndex, rest = _objectWithoutPropertiesLoose3(_ref, _excluded3);
  var theme = (0, import_react6.useContext)(Ge) || defaultProps2.theme;
  var focusable = (0, import_react6.useMemo)(function() {
    return onClick && !(tabIndex < 0);
  }, [onClick, tabIndex]);
  var _useState = (0, import_react6.useState)(), focus = _useState[0], setFocus = _useState[1];
  var clickProps = (0, import_react6.useMemo)(function() {
    if (focusable) {
      return {
        onClick,
        onFocus: function onFocus(event) {
          setFocus(true);
          if (_onFocus)
            _onFocus(event);
        },
        onBlur: function onBlur(event) {
          setFocus(false);
          if (_onBlur)
            _onBlur(event);
        }
      };
    }
    var result = {};
    if (_onBlur)
      result.onBlur = _onBlur;
    if (onClick)
      result.onClick = onClick;
    if (_onFocus)
      result.onFocus = _onFocus;
    return result;
  }, [focusable, onClick, _onFocus, _onBlur]);
  var adjustedTabIndex = (0, import_react6.useMemo)(function() {
    if (tabIndex !== void 0)
      return tabIndex;
    if (focusable)
      return 0;
    return void 0;
  }, [focusable, tabIndex]);
  if ((border === "between" || border && border.side === "between") && !gap) {
    console.warn("Box must have a gap to use border between");
  }
  var contents = children2;
  if (gap && gap !== "none") {
    var boxAs = !as && tag ? tag : as;
    contents = [];
    var firstIndex;
    import_react6.Children.forEach(children2, function(child, index) {
      if (child) {
        if (firstIndex === void 0) {
          firstIndex = index;
        } else {
          contents.push(import_react6.default.createElement(StyledBoxGap, {
            key: "gap-" + index,
            as: boxAs === "span" ? boxAs : "div",
            gap,
            directionProp: direction,
            responsive,
            border
          }));
        }
      }
      contents.push(child);
    });
  }
  var nextTheme = (0, import_react6.useMemo)(function() {
    var result;
    if (background || theme.darkChanged) {
      var dark2 = backgroundIsDark(background, theme);
      var darkChanged = dark2 !== void 0 && dark2 !== theme.dark;
      if (darkChanged || theme.darkChanged) {
        result = _extends7({}, theme);
        result.dark = dark2 === void 0 ? theme.dark : dark2;
        result.background = background;
      } else if (background) {
        result = _extends7({}, theme);
        result.background = background;
      }
    }
    return result || theme;
  }, [background, theme]);
  var content = import_react6.default.createElement(StyledBox, _extends7({
    as: !as && tag ? tag : as,
    "aria-label": a11yTitle,
    background,
    border,
    ref,
    directionProp: direction,
    elevationProp: elevation,
    fillProp: fill,
    focus,
    kindProp: kind,
    overflowProp: overflow,
    wrapProp: wrap,
    widthProp: width,
    heightProp: height,
    responsive,
    tabIndex: adjustedTabIndex
  }, clickProps, rest), import_react6.default.createElement(Ge.Provider, {
    value: nextTheme
  }, contents));
  if (onClick) {
    content = import_react6.default.createElement(Keyboard, {
      onEnter: onClick
    }, content);
  }
  return content;
});
Box.displayName = "Box";
Box.propTypes = BoxPropTypes;

// node_modules/grommet/es6/components/Accordion/AccordionContext.js
var import_react7 = __toESM(require_react());
var AccordionContext = (0, import_react7.createContext)({});

// node_modules/grommet/es6/components/Accordion/Accordion.js
var _excluded4 = ["activeIndex", "animate", "children", "multiple", "onActive"];
function _extends8() {
  _extends8 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var activeAsArray = function activeAsArray2(active) {
  return typeof active === "number" ? [active] : active;
};
var Accordion = (0, import_react8.forwardRef)(function(_ref, ref) {
  var activeIndex = _ref.activeIndex, _ref$animate = _ref.animate, animate = _ref$animate === void 0 ? true : _ref$animate, children2 = _ref.children, multiple = _ref.multiple, onActive = _ref.onActive, rest = _objectWithoutPropertiesLoose4(_ref, _excluded4);
  var _useState = (0, import_react8.useState)([]), activeIndexes = _useState[0], setActiveIndexes = _useState[1];
  var _useState2 = (0, import_react8.useState)(), stateActiveIndex = _useState2[0], setStateActiveIndex = _useState2[1];
  var derivedActiveIndexes = activeAsArray(activeIndex) || [];
  if ((typeof activeIndex !== "undefined" || activeIndex !== stateActiveIndex) && derivedActiveIndexes.join() !== activeIndexes.join()) {
    setActiveIndexes(derivedActiveIndexes);
    setStateActiveIndex(activeIndex);
  }
  var getAccordionContext = (0, import_react8.useCallback)(function(index) {
    var _onPanelChange = function onPanelChange(nextIndex) {
      var nextActiveIndexes = [].concat(activeIndexes || []);
      var nextActiveIndex = nextActiveIndexes.indexOf(nextIndex);
      if (nextActiveIndex > -1) {
        nextActiveIndexes.splice(nextActiveIndex, 1);
      } else if (multiple) {
        nextActiveIndexes.push(nextIndex);
      } else {
        nextActiveIndexes = [nextIndex];
      }
      setActiveIndexes(nextActiveIndexes);
      if (onActive) {
        onActive(nextActiveIndexes);
      }
    };
    return {
      active: activeIndexes.indexOf(index) > -1,
      animate,
      onPanelChange: function onPanelChange() {
        return _onPanelChange(index);
      }
    };
  }, [activeIndexes, animate, multiple, onActive]);
  return import_react8.default.createElement(Box, _extends8({
    ref,
    role: "tablist"
  }, rest), import_react8.Children.toArray(children2).filter(function(child) {
    return child;
  }).map(function(child, index) {
    return import_react8.default.createElement(AccordionContext.Provider, {
      key: index,
      value: getAccordionContext(index)
    }, child);
  }));
});
Accordion.propTypes = AccordionPropTypes;

// node_modules/grommet/es6/components/AccordionPanel/AccordionPanel.js
var import_react21 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Button/Button.js
var import_react18 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Button/propTypes.js
var import_prop_types5 = __toESM(require_prop_types());
function _extends9() {
  _extends9 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends9.apply(this, arguments);
}
var PropType4 = {};
if (true) {
  PropType4 = _extends9({}, genericProps, {
    children: import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object, import_prop_types5.default.node]),
    active: import_prop_types5.default.bool,
    as: import_prop_types5.default.oneOfType([import_prop_types5.default.string, import_prop_types5.default.func]),
    badge: import_prop_types5.default.oneOfType([import_prop_types5.default.bool, import_prop_types5.default.element, import_prop_types5.default.number, import_prop_types5.default.shape({
      background: backgroundPropType,
      max: import_prop_types5.default.number,
      value: import_prop_types5.default.oneOfType([import_prop_types5.default.bool, import_prop_types5.default.number])
    })]),
    color: colorPropType,
    disabled: import_prop_types5.default.bool,
    fill: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["horizontal", "vertical"]), import_prop_types5.default.bool]),
    focusIndicator: import_prop_types5.default.bool,
    gap: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types5.default.string]),
    hoverIndicator: hoverIndicatorPropType,
    href: import_prop_types5.default.string,
    icon: import_prop_types5.default.element,
    justify: import_prop_types5.default.oneOf(["around", "between", "center", "end", "evenly", "start", "stretch"]),
    label: import_prop_types5.default.node,
    onClick: import_prop_types5.default.func,
    plain: import_prop_types5.default.bool,
    primary: import_prop_types5.default.bool,
    reverse: import_prop_types5.default.bool,
    secondary: import_prop_types5.default.bool,
    size: import_prop_types5.default.oneOf(["small", "medium", "large"]),
    target: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["_self", "_blank", "_parent", "_top"]), import_prop_types5.default.string]),
    tip: import_prop_types5.default.oneOfType([import_prop_types5.default.shape({
      content: import_prop_types5.default.oneOfType([import_prop_types5.default.node, import_prop_types5.default.string]),
      dropProps: import_prop_types5.default.shape({}),
      plain: import_prop_types5.default.bool
    }), import_prop_types5.default.string]),
    type: import_prop_types5.default.oneOf(["button", "reset", "submit"])
  });
}
var ButtonPropTypes = PropType4;

// node_modules/grommet/es6/components/Tip/Tip.js
var import_react14 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Drop/Drop.js
var import_react13 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Drop/DropContainer.js
var import_react11 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/FocusedContainer.js
var import_react10 = __toESM(require_react());

// node_modules/grommet/es6/contexts/RootsContext.js
var import_react9 = __toESM(require_react());
var RootsContext = import_react9.default.createContext([]);

// node_modules/grommet/es6/components/FocusedContainer.js
var _excluded5 = ["hidden", "restrictScroll", "children", "trapFocus"];
function _extends10() {
  _extends10 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var FocusedContainer = function FocusedContainer2(_ref) {
  var _ref$hidden = _ref.hidden, hidden = _ref$hidden === void 0 ? false : _ref$hidden, _ref$restrictScroll = _ref.restrictScroll, restrictScroll = _ref$restrictScroll === void 0 ? false : _ref$restrictScroll, children2 = _ref.children, trapFocus = _ref.trapFocus, rest = _objectWithoutPropertiesLoose5(_ref, _excluded5);
  var _useState = (0, import_react10.useState)(""), bodyOverflowStyle = _useState[0], setBodyOverflowStyle = _useState[1];
  var ref = (0, import_react10.useRef)(null);
  var roots = (0, import_react10.useContext)(RootsContext);
  var _useState2 = (0, import_react10.useState)(roots), nextRoots = _useState2[0], setNextRoots = _useState2[1];
  (0, import_react10.useEffect)(function() {
    if (ref.current)
      setNextRoots([].concat(roots, [ref.current]));
  }, [roots]);
  (0, import_react10.useEffect)(function() {
    if (bodyOverflowStyle !== "hidden" && !hidden && restrictScroll && trapFocus) {
      setBodyOverflowStyle(document.body.style.overflow);
      document.body.style.overflow = "hidden";
    }
    return function() {
      if (bodyOverflowStyle !== "hidden" && !hidden && restrictScroll && trapFocus) {
        document.body.style.overflow = bodyOverflowStyle;
      }
    };
  }, [bodyOverflowStyle, hidden, trapFocus, restrictScroll]);
  (0, import_react10.useEffect)(function() {
    var timer = setTimeout(function() {
      if (!hidden && trapFocus && roots && roots[0]) {
        roots.forEach(makeNodeUnfocusable);
      }
    }, 0);
    return function() {
      if (roots && roots[0])
        makeNodeFocusable(roots[roots.length - 1]);
      clearTimeout(timer);
    };
  }, [hidden, roots, trapFocus]);
  return import_react10.default.createElement(RootsContext.Provider, {
    value: nextRoots
  }, import_react10.default.createElement("div", _extends10({
    ref,
    "aria-hidden": hidden
  }, rest), children2));
};

// node_modules/grommet/es6/components/Drop/StyledDrop.js
init_styled_components_browser_esm();
function getTransformOriginStyle(align) {
  var vertical12 = "top";
  if (align.bottom) {
    vertical12 = "bottom";
  }
  var horizontal12 = "left";
  if (align.right) {
    horizontal12 = "right";
  }
  return vertical12 + " " + horizontal12;
}
var dropKeyFrames = Ue(["0%{opacity:0.5;transform:scale(0.8);}100%{opacity:1;transform:scale(1);}"]);
var marginStyle = function marginStyle2(theme, align, data, responsive, marginProp2) {
  var margin = theme.global.edgeSize[data] || data;
  var adjustedMargin = {};
  var customCSS = typeof margin === "string" && margin.split(" ").length > 1;
  if (theme.global.drop.intelligentMargin === true && !customCSS && typeof margin === "string") {
    if (align.top === "bottom")
      adjustedMargin.top = margin;
    else if (align.bottom === "top")
      adjustedMargin.bottom = margin;
    if (align.right === "left")
      adjustedMargin.left = "-" + margin;
    else if (align.left === "right")
      adjustedMargin.left = margin;
    if (!Object.keys(adjustedMargin))
      adjustedMargin = "none";
  } else {
    return edgeStyle("margin", marginProp2 || theme.global.drop.margin, responsive, theme.global.edgeSize.responsiveBreakpoint, theme);
  }
  return edgeStyle("margin", adjustedMargin, responsive, theme.global.edgeSize.responsiveBreakpoint, theme);
};
var StyledDrop = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledDrop",
  componentId: "sc-16s5rx8-0"
})(["", " ", " position:fixed;z-index:", ";outline:none;", " ", " opacity:0;transform-origin:", ";animation:", " 0.1s forwards;animation-delay:0.01s;@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){display:flex;align-items:stretch;}", ""], baseStyle, function(props) {
  return !props.plain && (props.round && roundStyle(props.round, true, props.theme) || "border-radius: " + props.theme.global.drop.border.radius + ";");
}, function(props) {
  return props.theme.global.drop.zIndex;
}, function(props) {
  return !props.plain && backgroundStyle(props.background || props.theme.global.drop.background, props.theme);
}, function(props) {
  return !props.plain && (props.margin || props.theme.global.drop.margin) && props.theme.global && marginStyle(props.theme, props.alignProp, props.theme.global.drop.margin, props.responsive, props.margin);
}, function(props) {
  return getTransformOriginStyle(props.alignProp);
}, dropKeyFrames, function(props) {
  return props.theme.global.drop && props.theme.global.drop.extend;
});
StyledDrop.defaultProps = {};
Object.setPrototypeOf(StyledDrop.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Drop/DropContainer.js
var _excluded6 = ["align", "background", "onAlign", "children", "dropTarget", "elevation", "onClickOutside", "onEsc", "onKeyDown", "overflow", "plain", "responsive", "restrictFocus", "stretch", "trapFocus"];
function _extends11() {
  _extends11 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var preventLayerClose = function preventLayerClose2(event) {
  var key = event.keyCode ? event.keyCode : event.which;
  if (key === 27) {
    event.stopPropagation();
  }
};
var defaultAlign = {
  top: "top",
  left: "left"
};
var defaultPortalContext = [];
var DropContainer = (0, import_react11.forwardRef)(function(_ref, ref) {
  var _ref$align = _ref.align, align = _ref$align === void 0 ? defaultAlign : _ref$align, background = _ref.background, onAlign = _ref.onAlign, children2 = _ref.children, dropTarget = _ref.dropTarget, elevation = _ref.elevation, onClickOutside = _ref.onClickOutside, onEsc = _ref.onEsc, onKeyDown = _ref.onKeyDown, _ref$overflow = _ref.overflow, overflow = _ref$overflow === void 0 ? "auto" : _ref$overflow, plain = _ref.plain, responsive = _ref.responsive, restrictFocus = _ref.restrictFocus, _ref$stretch = _ref.stretch, stretch = _ref$stretch === void 0 ? "width" : _ref$stretch, trapFocus = _ref.trapFocus, rest = _objectWithoutPropertiesLoose6(_ref, _excluded6);
  var theme = (0, import_react11.useContext)(Ge) || defaultProps2.theme;
  var portalContext = (0, import_react11.useContext)(PortalContext) || defaultPortalContext;
  var portalId = (0, import_react11.useMemo)(function() {
    return portalContext.length;
  }, [portalContext]);
  var nextPortalContext = (0, import_react11.useMemo)(function() {
    return [].concat(portalContext, [portalId]);
  }, [portalContext, portalId]);
  var dropRef = (0, import_react11.useRef)();
  (0, import_react11.useEffect)(function() {
    var notifyAlign = function notifyAlign2() {
      var styleCurrent = (ref || dropRef).current.style;
      var alignControl = styleCurrent.top !== "" ? "top" : "bottom";
      onAlign(alignControl);
    };
    var place = function place2(preserveHeight) {
      var windowWidth = window.innerWidth;
      var windowHeight = window.innerHeight;
      var target = dropTarget;
      var container = (ref || dropRef).current;
      if (container && target) {
        container.style.left = "";
        container.style.top = "";
        container.style.bottom = "";
        container.style.width = "";
        if (!preserveHeight) {
          container.style.maxHeight = "";
        }
        var targetRect = target.getBoundingClientRect();
        var containerRect = container.getBoundingClientRect();
        var width;
        if (stretch) {
          width = Math.min(stretch === "align" ? Math.min(targetRect.width, containerRect.width) : Math.max(targetRect.width, containerRect.width), windowWidth);
        } else {
          width = Math.min(containerRect.width, windowWidth);
        }
        var left;
        if (align.left) {
          if (align.left === "left") {
            left = targetRect.left;
          } else if (align.left === "right") {
            left = targetRect.left + targetRect.width;
          }
        } else if (align.right) {
          if (align.right === "left") {
            left = targetRect.left - width;
          } else if (align.right === "right") {
            left = targetRect.left + targetRect.width - width;
          }
        } else {
          left = targetRect.left + targetRect.width / 2 - width / 2;
        }
        if (left + width > windowWidth) {
          left -= left + width - windowWidth;
        } else if (left < 0) {
          left = 0;
        }
        var top;
        var bottom;
        var maxHeight = containerRect.height;
        if (align.top) {
          if (align.top === "top") {
            top = targetRect.top;
          } else {
            top = targetRect.bottom;
          }
          var percentVisibleAreaBelow = 100 - targetRect.bottom / windowHeight * 100;
          if (windowHeight === top || percentVisibleAreaBelow <= 20) {
            top = "";
            if (align.top === "bottom") {
              bottom = targetRect.top;
            } else {
              bottom = targetRect.bottom;
            }
            maxHeight = bottom;
            container.style.maxHeight = maxHeight + "px";
          } else if (top > 0) {
            maxHeight = windowHeight - top;
            container.style.maxHeight = maxHeight + "px";
          } else {
            maxHeight = windowHeight - top;
          }
        } else if (align.bottom) {
          if (align.bottom === "bottom") {
            bottom = targetRect.bottom;
          } else {
            bottom = targetRect.top;
          }
          maxHeight = bottom;
          container.style.maxHeight = maxHeight + "px";
        } else {
          top = targetRect.top + targetRect.height / 2 - containerRect.height / 2;
          maxHeight = windowHeight - top;
        }
        if (responsive && (containerRect.height > maxHeight || maxHeight < windowHeight / 10)) {
          if (align.top && top > windowHeight / 2) {
            top = "";
            if (align.top === "bottom") {
              bottom = targetRect.top;
            } else {
              bottom = targetRect.bottom;
            }
            maxHeight = bottom;
          } else if (align.bottom && maxHeight < windowHeight / 2) {
            bottom = "";
            if (align.bottom === "bottom") {
              top = targetRect.top;
            } else {
              top = targetRect.bottom;
            }
            maxHeight = windowHeight - top;
          }
        }
        container.style.left = left + "px";
        if (stretch) {
          container.style.width = width + 0.1 + "px";
        }
        if (top !== "") {
          container.style.top = top + "px";
        }
        if (bottom !== "") {
          container.style.bottom = windowHeight - bottom + "px";
        }
        if (!preserveHeight) {
          if (theme.drop && theme.drop.maxHeight) {
            maxHeight = Math.min(maxHeight, parseMetricToNum(theme.drop.maxHeight));
          }
          container.style.maxHeight = maxHeight + "px";
        }
      }
      if (onAlign)
        notifyAlign();
    };
    var scrollParents;
    var addScrollListeners = function addScrollListeners2() {
      scrollParents = findScrollParents(dropTarget);
      scrollParents.forEach(function(scrollParent) {
        return scrollParent.addEventListener("scroll", place);
      });
    };
    var removeScrollListeners = function removeScrollListeners2() {
      scrollParents.forEach(function(scrollParent) {
        return scrollParent.removeEventListener("scroll", place);
      });
      scrollParents = [];
    };
    var onClickDocument = function onClickDocument2(event) {
      var clickedPortalId = null;
      var node = event.target;
      while (clickedPortalId === null && node !== document) {
        var attr = node.getAttribute("data-g-portal-id");
        if (attr !== null)
          clickedPortalId = parseInt(attr, 10);
        node = node.parentNode;
      }
      if (clickedPortalId === null || portalContext.indexOf(clickedPortalId) !== -1) {
        onClickOutside(event);
      }
    };
    var onResize = function onResize2() {
      removeScrollListeners();
      addScrollListeners();
      place(false);
    };
    addScrollListeners();
    window.addEventListener("resize", onResize);
    if (onClickOutside) {
      document.addEventListener("mousedown", onClickDocument);
    }
    place(false);
    return function() {
      removeScrollListeners();
      window.removeEventListener("resize", onResize);
      if (onClickOutside) {
        document.removeEventListener("mousedown", onClickDocument);
      }
    };
  }, [align, onAlign, dropTarget, onClickOutside, portalContext, portalId, ref, responsive, restrictFocus, stretch, theme.drop]);
  (0, import_react11.useEffect)(function() {
    if (restrictFocus) {
      (ref || dropRef).current.focus();
    }
  }, [ref, restrictFocus]);
  var content = import_react11.default.createElement(StyledDrop, _extends11({
    ref: ref || dropRef,
    as: Box,
    background,
    plain,
    elevation: !plain ? elevation || theme.global.drop.elevation || theme.global.drop.shadowSize || "small" : void 0,
    tabIndex: "-1",
    alignProp: align,
    overflow,
    "data-g-portal-id": portalId
  }, rest), children2);
  var themeContextValue = (0, import_react11.useMemo)(function() {
    var dark3;
    if (background || theme.global.drop.background) {
      dark3 = backgroundIsDark(background || theme.global.drop.background, theme);
    }
    return _extends11({}, theme, {
      dark: dark3
    });
  }, [background, theme]);
  var dark2 = themeContextValue.dark;
  if (dark2 !== void 0 && dark2 !== theme.dark) {
    content = import_react11.default.createElement(Ge.Provider, {
      value: themeContextValue
    }, content);
  }
  return import_react11.default.createElement(PortalContext.Provider, {
    value: nextPortalContext
  }, import_react11.default.createElement(FocusedContainer, {
    onKeyDown: onEsc && preventLayerClose,
    trapFocus
  }, import_react11.default.createElement(Keyboard, {
    capture: true,
    onEsc: onEsc ? function(event) {
      event.stopPropagation();
      onEsc(event);
    } : void 0,
    onKeyDown,
    target: "document"
  }, content)));
});

// node_modules/grommet/es6/contexts/ContainerTargetContext/ContainerTargetContext.js
var import_react12 = __toESM(require_react());
var ContainerTargetContext = import_react12.default.createContext(typeof document === "object" ? document.body : void 0);

// node_modules/grommet/es6/components/Drop/propTypes.js
var import_prop_types6 = __toESM(require_prop_types());
var dropOverflowPropTypes = import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(OVERFLOW_VALUES), import_prop_types6.default.shape({
  horizontal: import_prop_types6.default.oneOf(OVERFLOW_VALUES),
  vertical: import_prop_types6.default.oneOf(OVERFLOW_VALUES)
}), import_prop_types6.default.string]);
var PropType5 = {};
if (true) {
  PropType5 = {
    align: import_prop_types6.default.shape({
      top: import_prop_types6.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types6.default.oneOf(["top", "bottom"]),
      right: import_prop_types6.default.oneOf(["left", "right"]),
      left: import_prop_types6.default.oneOf(["left", "right"])
    }),
    background: backgroundDoc,
    elevation: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["none", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types6.default.string]),
    margin: marginProp,
    onClickOutside: import_prop_types6.default.func,
    onEsc: import_prop_types6.default.func,
    overflow: dropOverflowPropTypes,
    plain: import_prop_types6.default.bool,
    responsive: import_prop_types6.default.bool,
    restrictFocus: import_prop_types6.default.bool,
    round: roundPropType,
    stretch: import_prop_types6.default.oneOfType([import_prop_types6.default.bool, import_prop_types6.default.oneOf(["align"])]),
    target: import_prop_types6.default.object.isRequired,
    trapFocus: import_prop_types6.default.bool
  };
}
var DropPropTypes = PropType5;

// node_modules/grommet/es6/components/Drop/Drop.js
var _excluded7 = ["restrictFocus", "target", "trapFocus"];
function _extends12() {
  _extends12 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
function _objectWithoutPropertiesLoose7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Drop = (0, import_react13.forwardRef)(function(_ref, ref) {
  var restrictFocus = _ref.restrictFocus, dropTarget = _ref.target, _ref$trapFocus = _ref.trapFocus, trapFocus = _ref$trapFocus === void 0 ? true : _ref$trapFocus, rest = _objectWithoutPropertiesLoose7(_ref, _excluded7);
  var theme = (0, import_react13.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react13.useState)(), originalFocusedElement = _useState[0], setOriginalFocusedElement = _useState[1];
  (0, import_react13.useEffect)(function() {
    return setOriginalFocusedElement(document.activeElement);
  }, []);
  var _useState2 = (0, import_react13.useState)(), dropContainer = _useState2[0], setDropContainer = _useState2[1];
  var containerTarget = (0, import_react13.useContext)(ContainerTargetContext);
  (0, import_react13.useEffect)(function() {
    return setDropContainer(getNewContainer(containerTarget));
  }, [containerTarget]);
  (0, import_react13.useEffect)(function() {
    return function() {
      if (restrictFocus && originalFocusedElement) {
        if (originalFocusedElement.focus) {
          setFocusWithoutScroll(originalFocusedElement);
        } else if (originalFocusedElement.parentNode && originalFocusedElement.parentNode.focus) {
          setFocusWithoutScroll(originalFocusedElement.parentNode);
        }
      }
      if (dropContainer) {
        containerTarget.removeChild(dropContainer);
      }
    };
  }, [containerTarget, dropContainer, originalFocusedElement, restrictFocus]);
  return dropContainer ? (0, import_react_dom.createPortal)(import_react13.default.createElement(DropContainer, _extends12({
    ref,
    dir: theme && theme.dir,
    dropTarget,
    restrictFocus,
    trapFocus
  }, rest)), dropContainer) : null;
});
Drop.displayName = "Drop";
Drop.propTypes = DropPropTypes;

// node_modules/grommet/es6/components/Tip/propTypes.js
var import_prop_types7 = __toESM(require_prop_types());
var PropType6 = {};
if (true) {
  PropType6 = {
    content: import_prop_types7.default.node,
    dropProps: import_prop_types7.default.object,
    plain: import_prop_types7.default.bool
  };
}
var TipPropTypes = PropType6;

// node_modules/grommet/es6/components/Tip/Tip.js
function _extends13() {
  _extends13 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends13.apply(this, arguments);
}
var Tip = (0, import_react14.forwardRef)(function(_ref, tipRef) {
  var children2 = _ref.children, content = _ref.content, dropProps = _ref.dropProps, plain = _ref.plain;
  var theme = (0, import_react14.useContext)(Ge);
  var _useState = (0, import_react14.useState)(false), over = _useState[0], setOver = _useState[1];
  var _useState2 = (0, import_react14.useState)(), usingKeyboard = _useState2[0], setUsingKeyboard = _useState2[1];
  var onMouseDown = function onMouseDown2() {
    return setUsingKeyboard(false);
  };
  var onKeyDown = function onKeyDown2() {
    return setUsingKeyboard(true);
  };
  (0, import_react14.useEffect)(function() {
    document.addEventListener("mousedown", onMouseDown);
    document.addEventListener("keydown", onKeyDown);
    return function() {
      document.removeEventListener("mousedown", onMouseDown);
      document.removeEventListener("keydown", onKeyDown);
    };
  }, []);
  var componentRef = useForwardedRef(tipRef);
  var wrapInvalidElement = function wrapInvalidElement2() {
    return !import_react14.default.isValidElement(children2) ? import_react14.default.createElement("span", null, children2) : children2;
  };
  var child = import_react14.Children.count(children2) === 1 ? wrapInvalidElement() : import_react14.Children.only(children2);
  var clonedChild = (0, import_react14.cloneElement)(child, {
    onMouseEnter: function onMouseEnter() {
      return setOver(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setOver(false);
    },
    onFocus: function onFocus() {
      if (usingKeyboard)
        setOver(true);
    },
    onBlur: function onBlur() {
      if (usingKeyboard)
        setOver(false);
    },
    key: "tip-child",
    ref: function ref(node) {
      if (typeof componentRef === "function") {
        componentRef(node);
      } else if (componentRef) {
        componentRef.current = node;
      }
      var callerRef = child.ref;
      if (typeof callerRef === "function") {
        callerRef(node);
      } else if (callerRef) {
        callerRef.current = node;
      }
    }
  });
  return [clonedChild, over && import_react14.default.createElement(Drop, _extends13({
    target: componentRef.current,
    trapFocus: false,
    key: "tip-drop"
  }, theme.tip.drop, dropProps), plain ? content : import_react14.default.createElement(Box, theme.tip.content, content))];
});
Tip.displayName = "Tip";
Tip.propTypes = TipPropTypes;

// node_modules/grommet/es6/components/Button/Badge.js
var import_react17 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Stack/Stack.js
var import_react15 = __toESM(require_react());

// node_modules/grommet/es6/components/Stack/StyledStack.js
init_styled_components_browser_esm();
var fillStyle3 = Ce(["", " ", " flex-grow:1;display:flex;"], function(props) {
  return props.fillContainer === true || props.fillContainer === "horizontal" ? "\n        width: 100%;\n        max-width: none;\n      " : "";
}, function(props) {
  return props.fillContainer === true || props.fillContainer === "vertical" ? "height: 100%;" : "";
});
var StyledStack = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledStack",
  componentId: "sc-ajspsk-0"
})(["position:relative;", " ", " ", ""], genericStyles, function(props) {
  return props.fillContainer && fillStyle3;
}, function(props) {
  return props.theme.stack && props.theme.stack.extend;
});
StyledStack.defaultProps = {};
Object.setPrototypeOf(StyledStack.defaultProps, defaultProps2);
var styleMap = {
  fill: "\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  ",
  center: "\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  ",
  left: "\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n  ",
  right: "\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n  ",
  top: "\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n  ",
  bottom: "\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n  ",
  "top-left": "\n    top: 0;\n    left: 0;\n  ",
  "bottom-left": "\n    bottom: 0;\n    left: 0;\n  ",
  "top-right": "\n    top: 0;\n    right: 0;\n  ",
  "bottom-right": "\n    bottom: 0;\n    right: 0;\n  "
};
var StyledStackLayer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledStack__StyledStackLayer",
  componentId: "sc-ajspsk-1"
})(["position:", ";", " ", " ", " ", ""], function(props) {
  return props.guiding ? "relative" : "absolute";
}, function(props) {
  return props.guiding && "display: block;";
}, function(props) {
  return !props.guiding && styleMap[props.anchor || "fill"] + ";";
}, function(props) {
  return props.fillContainer && "\n    width: 100%;\n    height: 100%;\n  ";
}, function(props) {
  return !props.interactive && "pointer-events: none;";
});
StyledStackLayer.defaultProps = {};
Object.setPrototypeOf(StyledStackLayer.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Stack/propTypes.js
var import_prop_types8 = __toESM(require_prop_types());
function _extends14() {
  _extends14 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends14.apply(this, arguments);
}
var PropType7 = {};
if (true) {
  PropType7 = _extends14({}, genericProps, {
    anchor: import_prop_types8.default.oneOf(["center", "left", "right", "top", "bottom", "top-left", "bottom-left", "top-right", "bottom-right"]),
    fill: import_prop_types8.default.oneOfType([import_prop_types8.default.oneOf(["horizontal", "vertical"]), import_prop_types8.default.bool]),
    guidingChild: import_prop_types8.default.oneOfType([import_prop_types8.default.number, import_prop_types8.default.oneOf(["first", "last"])]),
    interactiveChild: import_prop_types8.default.oneOfType([import_prop_types8.default.number, import_prop_types8.default.oneOf(["first", "last"])])
  });
}
var StackPropTypes = PropType7;

// node_modules/grommet/es6/components/Stack/Stack.js
var _excluded8 = ["anchor", "children", "fill", "guidingChild", "interactiveChild"];
function _objectWithoutPropertiesLoose8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends15() {
  _extends15 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends15.apply(this, arguments);
}
var buildStyledChildren = function buildStyledChildren2(_ref) {
  var anchor = _ref.anchor, fill = _ref.fill, guidingIndex = _ref.guidingIndex, interactiveChild = _ref.interactiveChild, interactiveIndex = _ref.interactiveIndex;
  return function(child, index) {
    var interactive = interactiveChild === void 0 || interactiveIndex === index;
    var isGuidingIndex = index === guidingIndex;
    var props = isGuidingIndex ? {
      guiding: true,
      fillContainer: fill
    } : {
      anchor
    };
    return import_react15.default.createElement(StyledStackLayer, _extends15({
      key: index,
      interactive
    }, props), child);
  };
};
var Stack = (0, import_react15.forwardRef)(function(_ref2, ref) {
  var anchor = _ref2.anchor, children2 = _ref2.children, fill = _ref2.fill, guidingChild = _ref2.guidingChild, interactiveChild = _ref2.interactiveChild, rest = _objectWithoutPropertiesLoose8(_ref2, _excluded8);
  var prunedChildren = import_react15.Children.toArray(children2).filter(function(c2) {
    return c2;
  });
  var toChildIndex = function toChildIndex2(child) {
    var index = child;
    if (index === "first" || !index)
      index = 0;
    else if (index === "last")
      index = prunedChildren.length - 1;
    return index;
  };
  var guidingIndex = toChildIndex(guidingChild);
  var interactiveIndex = interactiveChild && toChildIndex(interactiveChild);
  var styledChildren = prunedChildren.map(buildStyledChildren({
    anchor,
    fill,
    guidingIndex,
    interactiveChild,
    interactiveIndex
  }));
  return import_react15.default.createElement(StyledStack, _extends15({
    ref,
    fillContainer: fill
  }, rest), styledChildren);
});
Stack.displayName = "Stack";
Stack.propTypes = StackPropTypes;

// node_modules/grommet/es6/components/Text/Text.js
var import_react16 = __toESM(require_react());

// node_modules/grommet/es6/components/Text/StyledText.js
init_styled_components_browser_esm();
var sizeStyle3 = function sizeStyle4(props) {
  var size = props.size || "medium";
  var data = props.theme.text[size];
  if (data) {
    return Ce(["font-size:", ";line-height:", ";"], data.size, data.height);
  }
  return Ce(["font-size:", ";line-height:normal;"], size);
};
var truncateStyle = "\n  white-space: nowrap;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n";
var colorStyle = Ce(["color:", ";"], function(props) {
  return normalizeColor(props.colorProp, props.theme);
});
var weightStyle = Ce(["font-weight:", ";"], function(props) {
  return props.weight;
});
var wordBreakStyle = Ce(["word-break:", ";"], function(props) {
  return props.wordBreak;
});
var fontFamily = Ce(["font-family:", ";"], function(props) {
  return props.theme.text.font.family;
});
var StyledText = styled_components_browser_esm_default("span").withConfig({
  shouldForwardProp: function shouldForwardProp(prop, defaultValidatorFn) {
    return defaultValidatorFn(prop) && prop !== "size";
  }
}).withConfig({
  displayName: "StyledText",
  componentId: "sc-1sadyjn-0"
})(["", " ", " ", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return sizeStyle3(props);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.truncate && truncateStyle;
}, function(props) {
  return props.colorProp && colorStyle;
}, function(props) {
  return props.weight && weightStyle;
}, function(props) {
  return props.wordBreak && wordBreakStyle;
}, function(props) {
  return props.theme.text.font && props.theme.text.font.family && fontFamily;
}, function(props) {
  return props.theme.text && props.theme.text.extend;
});
StyledText.defaultProps = {};
Object.setPrototypeOf(StyledText.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Text/propTypes.js
var import_prop_types9 = __toESM(require_prop_types());
function _extends16() {
  _extends16 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends16.apply(this, arguments);
}
var PropType8 = {};
if (true) {
  PropType8 = _extends16({}, genericProps, {
    color: colorPropType,
    margin: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["none"].concat(MARGIN_SIZES)), import_prop_types9.default.shape({
      bottom: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      end: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      horizontal: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      left: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      right: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      start: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      top: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string]),
      vertical: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(MARGIN_SIZES), import_prop_types9.default.string])
    }), import_prop_types9.default.string]),
    size: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types9.default.string]),
    tag: import_prop_types9.default.oneOfType([import_prop_types9.default.string, import_prop_types9.default.func]),
    as: import_prop_types9.default.oneOfType([import_prop_types9.default.string, import_prop_types9.default.func, import_prop_types9.default.element]),
    textAlign: import_prop_types9.default.oneOf(["start", "center", "end", "justify"]),
    tip: import_prop_types9.default.oneOfType([import_prop_types9.default.shape({
      content: import_prop_types9.default.oneOfType([import_prop_types9.default.node, import_prop_types9.default.string]),
      dropProps: import_prop_types9.default.shape({}),
      plain: import_prop_types9.default.bool
    }), import_prop_types9.default.string]),
    truncate: import_prop_types9.default.oneOfType([import_prop_types9.default.bool, import_prop_types9.default.oneOf(["tip"])]),
    weight: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["normal", "bold", "bolder", "lighter"]), import_prop_types9.default.number]),
    wordBreak: import_prop_types9.default.oneOf(["normal", "break-all", "keep-all", "break-word"])
  });
}
var TextPropTypes = PropType8;

// node_modules/grommet/es6/components/Text/Text.js
var _excluded9 = ["children", "color", "tag", "as", "tip", "a11yTitle", "truncate"];
function _extends17() {
  _extends17 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends17.apply(this, arguments);
}
function _objectWithoutPropertiesLoose9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Text = (0, import_react16.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, color = _ref.color, tag = _ref.tag, as = _ref.as, tipProp = _ref.tip, _ref$a11yTitle = _ref.a11yTitle, a11yTitle = _ref$a11yTitle === void 0 ? typeof tipProp === "string" && tipProp || (tipProp == null ? void 0 : tipProp.content) || void 0 : _ref$a11yTitle, truncate = _ref.truncate, rest = _objectWithoutPropertiesLoose9(_ref, _excluded9);
  var textRef = useForwardedRef(ref);
  var _useState = (0, import_react16.useState)(false), textTruncated = _useState[0], setTextTruncated = _useState[1];
  useLayoutEffect(function() {
    var updateTip = function updateTip2() {
      setTextTruncated(false);
      if (truncate === "tip" && textRef.current && textRef.current.scrollWidth > textRef.current.offsetWidth) {
        setTextTruncated(true);
      }
    };
    window.addEventListener("resize", updateTip);
    updateTip();
    return function() {
      return window.removeEventListener("resize", updateTip);
    };
  }, [textRef, truncate]);
  var styledTextResult = import_react16.default.createElement(StyledText, _extends17({
    as: !as && tag ? tag : as,
    colorProp: color,
    "aria-label": a11yTitle,
    truncate
  }, rest, {
    ref: textRef
  }), children2);
  if (tipProp || textTruncated) {
    if (textTruncated) {
      return import_react16.default.createElement(Tip, _extends17({
        content: children2
      }, tipProp), styledTextResult);
    }
    if (truncate !== "tip") {
      return import_react16.default.createElement(Tip, tipProp, styledTextResult);
    }
  }
  return styledTextResult;
});
Text.displayName = "Text";
Text.defaultProps = {
  level: 1
};
Text.propTypes = TextPropTypes;

// node_modules/grommet/es6/components/Button/Badge.js
var StyledBadgeContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Badge__StyledBadgeContainer",
  componentId: "sc-1es4ws1-0"
})(["", ""], function(props) {
  return props.theme.button.badge.container.extend;
});
var Badge = function Badge2(_ref) {
  var children2 = _ref.children, content = _ref.content;
  var theme = (0, import_react17.useContext)(Ge);
  var contentRef = (0, import_react17.useRef)();
  var stackRef = (0, import_react17.useRef)();
  var defaultBadgeDimension = typeof content === "boolean" || content && content.value && typeof content.value === "boolean" ? parseMetricToNum(theme.button.badge.size.medium) / 2 + "px" : theme.button.badge.size.medium;
  var _useState = (0, import_react17.useState)(defaultBadgeDimension), height = _useState[0], setHeight = _useState[1];
  var _useState2 = (0, import_react17.useState)(height), width = _useState2[0], setWidth = _useState2[1];
  useLayoutEffect(function() {
    var onResize = function onResize2() {
      if (contentRef && contentRef.current) {
        if (typeof content === "number" || typeof content === "object" && content.value) {
          var _contentRef$current$g = contentRef.current.getBoundingClientRect(), contentHeight = _contentRef$current$g.height, contentWidth = _contentRef$current$g.width;
          if (contentHeight) {
            var verticalSpace = (parseMetricToNum(height) - contentHeight) * 2.5;
            setWidth(Math.max(parseMetricToNum(width), Math.ceil(contentWidth + verticalSpace)) + "px");
          }
        } else {
          setWidth(contentRef.current.getBoundingClientRect().width + "px");
          setHeight(contentRef.current.getBoundingClientRect().height + "px");
        }
      }
    };
    window.addEventListener("resize", onResize);
    onResize();
    return function() {
      window.removeEventListener("resize", onResize);
    };
  }, [content, height, width]);
  useLayoutEffect(function() {
    if (stackRef && stackRef.current) {
      var divisor = typeof content === "boolean" || content && content.value === true ? 3.5 : 2;
      var offset = {
        right: "-" + Math.round(parseMetricToNum(width) / divisor) + "px",
        top: "-" + Math.round(parseMetricToNum(height) / divisor) + "px"
      };
      stackRef.current.children[1].style.top = offset.top;
      stackRef.current.children[1].style.right = offset.right;
    }
  }, [content, height, width]);
  var value;
  if (typeof content === "number")
    value = content;
  else if (typeof content === "object")
    value = content.value;
  var badge;
  if (typeof value === "number" || typeof value === "boolean" || typeof content === "boolean") {
    if (typeof value === "number") {
      var max = content.max || 9;
      badge = import_react17.default.createElement(Text, {
        color: "text-strong",
        size: theme.button.badge.text.size.medium,
        weight: "normal",
        ref: contentRef
      }, value > max ? max + "+" : value);
    }
    badge = import_react17.default.createElement(StyledBadgeContainer, {
      align: "center",
      background: content.background || theme.button.badge.container.background,
      flex: false,
      height: {
        min: height
      },
      justify: "center",
      round: true,
      pad: !(typeof value === "boolean" || typeof content === "boolean") ? theme.button.badge.container.pad : void 0,
      width: {
        min: width
      }
    }, badge);
  } else
    badge = import_react17.default.createElement(Box, {
      ref: contentRef
    }, content);
  return import_react17.default.createElement(Stack, {
    ref: stackRef,
    anchor: "top-right"
  }, children2, badge);
};

// node_modules/grommet/es6/components/Button/StyledButton.js
init_styled_components_browser_esm();
var radiusStyle = function radiusStyle2(props) {
  var isIconOnly = props.hasIcon && !props.hasLabel;
  var size = props.sizeProp;
  if (!isIconOnly && size && props.theme.button.size && props.theme.button.size[size]) {
    return props.theme.button.size[size].border.radius;
  }
  return props.theme.button.border.radius;
};
var fontStyle = function fontStyle2(props) {
  var size = props.sizeProp || "medium";
  var data = props.theme.text[size];
  return Ce(["font-size:", ";line-height:", ";"], data.size, data.height);
};
var padStyle = function padStyle2(props) {
  var size = props.sizeProp;
  if (size && props.theme.button.size && props.theme.button.size[size]) {
    return Ce(["", " ", ""], props.theme.button.size[size].pad.vertical, props.theme.button.size[size].pad.horizontal);
  }
  return Ce(["", " ", ""], props.theme.button.padding.vertical, props.theme.button.padding.horizontal);
};
var basicStyle = function basicStyle2(props) {
  return Ce(["border:", " solid ", ";border-radius:", ";color:", ";padding:", ";", ""], props.theme.button.border.width, normalizeColor(props.colorValue || props.theme.button.border.color || "control", props.theme), radiusStyle(props), normalizeColor(props.theme.button.color || "text", props.theme), padStyle(props), fontStyle(props));
};
var primaryStyle = function primaryStyle2(props) {
  return Ce(["", " border-radius:", ";", ""], backgroundStyle(normalizeColor(props.colorValue || props.theme.button.primary && props.theme.button.primary.color || "control", props.theme), props.theme, props.theme.button.color), radiusStyle(props), props.theme.button.primary && props.theme.button.primary.extend);
};
function getHoverColor(props) {
  if (props.colorValue) {
    return normalizeColor(props.colorValue, props.theme);
  }
  if (props.active && props.primary && props.theme.button.primary && props.theme.button.primary.active && props.theme.button.primary.active.border && props.theme.button.primary.active.border.color) {
    return normalizeColor(props.theme.button.primary.active.border.color, props.theme);
  }
  return normalizeColor(props.theme.button.border.color || "control", props.theme);
}
var hoverStyle = Ce(["&:hover{", " ", ";}"], function(props) {
  return props.hoverIndicator && getHoverIndicatorStyle(props.hoverIndicator, props.theme);
}, function(props) {
  return !props.plain && Ce(["box-shadow:0px 0px 0px 2px ", ";"], getHoverColor(props));
});
var fillStyle4 = function fillStyle5(fillContainer) {
  if (fillContainer === "horizontal") {
    return "width: 100%;";
  }
  if (fillContainer === "vertical") {
    return "height: 100%;";
  }
  if (fillContainer) {
    return "\n      width: 100%;\n      height: 100%;\n      max-width: none;\n      flex: 1 0 auto;\n    ";
  }
  return void 0;
};
var plainStyle = function plainStyle2(props) {
  return Ce(["color:", ";outline:none;border:none;padding:0;text-align:inherit;"], normalizeColor(props.colorValue || "inherit", props.theme));
};
var activeButtonStyle = function activeButtonStyle2(props) {
  return Ce(["", " ", " ", ""], activeStyle, props.primary && props.theme.button.primary && props.theme.button.primary.active && props.theme.button.primary.active.border && props.theme.button.primary.active.border.color && "border: " + props.theme.button.border.width + " solid\n    " + normalizeColor(props.theme.button.primary.active.border.color, props.theme) + ";\n    ", props.primary && props.theme.button.primary && props.theme.button.primary.active && props.theme.button.primary.active.extend);
};
var disabledButtonStyle = function disabledButtonStyle2(props) {
  return Ce(["", " ", " ", " ", ""], disabledStyle(props.theme.button.disabled.opacity), !props.plain && props.theme.button.disabled.border && props.theme.button.disabled.border.color && "border: " + props.theme.button.border.width + " solid\n    " + normalizeColor(props.theme.button.disabled.border.color, props.theme) + ";", props.theme.button.disabled.color && (props.primary ? backgroundStyle(normalizeColor(props.theme.button.disabled.color, props.theme), props.theme, props.theme.button.color) : "color: " + normalizeColor(props.theme.button.disabled.color, props.theme) + ";"), props.theme.button.disabled && props.theme.button.disabled.extend);
};
var StyledButton = styled_components_browser_esm_default.button.withConfig({
  displayName: "StyledButton",
  componentId: "sc-323bzc-0"
})(["display:inline-block;box-sizing:border-box;cursor:pointer;font:inherit;text-decoration:none;margin:0;background:transparent;overflow:visible;text-transform:none;", " ", " ", " ", " ", " ", " ", " &:focus{", "}&:focus:not(:focus-visible){", "}", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.plain && plainStyle(props);
}, function(props) {
  return !props.plain && basicStyle(props);
}, function(props) {
  return props.primary && primaryStyle(props);
}, function(props) {
  return !props.disabled && !props.selected && !props.focus && hoverStyle;
}, function(props) {
  return !props.disabled && props.active && activeButtonStyle(props);
}, function(props) {
  return props.disabled && props.theme.button && props.theme.button.disabled && disabledButtonStyle(props);
}, function(props) {
  return (!props.plain || props.focusIndicator) && focusStyle();
}, unfocusStyle(), function(props) {
  return !props.plain && props.theme.button.transition && "\n    transition-property: " + props.theme.button.transition.properties.join(",") + ";\n    transition-duration: " + props.theme.button.transition.duration + "s;\n    transition-timing-function: " + props.theme.button.transition.timing + ";\n  ";
}, function(props) {
  return props.fillContainer && fillStyle4(props.fillContainer);
}, function(props) {
  return props.hasIcon && !props.hasLabel && "\n    line-height: 0;\n  ";
}, function(props) {
  return props.pad && props.hasIcon && !props.hasLabel && "\n    padding: " + props.theme.global.edgeSize.small + ";\n  ";
}, function(props) {
  return props.theme.button && props.theme.button.extend;
});
StyledButton.defaultProps = {};
Object.setPrototypeOf(StyledButton.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Button/StyledButtonKind.js
init_styled_components_browser_esm();
var radiusStyle3 = function radiusStyle4(props) {
  var size = props.sizeProp;
  var themeObj = typeof props.kind === "object" ? props.kind : props.theme.button;
  if (size && themeObj.size && themeObj.size[size])
    return Ce(["border-radius:", ";"], themeObj.size[size].border.radius);
  if (themeObj.border && themeObj.border.radius)
    return Ce(["border-radius:", ";"], themeObj.border.radius);
  return "";
};
var fontStyle3 = function fontStyle4(props) {
  var size = props.sizeProp || "medium";
  var data = props.theme.text[size];
  return Ce(["font-size:", ";line-height:", ";"], data.size, data.height);
};
var padFromTheme = function padFromTheme2(size, theme, themeObj) {
  if (size === void 0) {
    size = "medium";
  }
  if (size && themeObj.size && themeObj.size[size] && themeObj.size[size].pad) {
    return {
      vertical: themeObj.size[size].pad.vertical,
      horizontal: themeObj.size[size].pad.horizontal
    };
  }
  if (theme.button.padding) {
    return {
      vertical: theme.global.edgeSize[theme.button.padding.vertical] || theme.button.padding.vertical,
      horizontal: theme.global.edgeSize[theme.button.padding.horizontal] || theme.button.padding.horizontal
    };
  }
  return void 0;
};
var padStyle3 = function padStyle4(_ref) {
  var size = _ref.sizeProp, theme = _ref.theme, kind = _ref.kind;
  var themeObj = typeof kind === "object" ? kind : theme.button;
  var pad = padFromTheme(size, theme, themeObj);
  return pad ? Ce(["padding:", " ", ";"], pad.vertical, pad.horizontal) : "";
};
var basicStyle3 = function basicStyle4(props) {
  return Ce(["border:none;", ";", " ", " ", ""], radiusStyle3(props), padStyle3(props), fontStyle3(props), props.icon && "\n    > svg {\n      display: flex;\n      align-self: center;\n      vertical-align: middle;\n    }\n  ");
};
var getPath = function getPath2(theme, path) {
  var obj;
  if (path) {
    obj = theme;
    var parts2 = path.split(".");
    while (obj && parts2.length) {
      obj = obj[parts2.shift()];
    }
  }
  return obj;
};
var adjustPadStyle = function adjustPadStyle2(pad, width) {
  var offset = parseMetricToNum(width);
  return Ce(["padding:", "px ", "px;"], Math.max(parseMetricToNum(pad.vertical) - offset, 0), Math.max(parseMetricToNum(pad.horizontal) - offset, 0));
};
var kindStyle = function kindStyle2(_ref2) {
  var colorValue = _ref2.colorValue, kind = _ref2.kind, size = _ref2.sizeProp, themePaths = _ref2.themePaths, theme = _ref2.theme;
  var styles = [];
  var themeObj = typeof kind === "object" ? kind : theme.button;
  var pad = padFromTheme(size, theme, themeObj);
  themePaths.base.forEach(function(themePath) {
    var obj2 = getPath(themeObj, themePath);
    if (obj2) {
      styles.push(kindPartStyles(obj2, theme, colorValue));
      if (obj2.border && obj2.border.width && pad && !obj2.padding) {
        styles.push(adjustPadStyle(pad, obj2.border.width));
      }
    }
  });
  if (!themePaths.base.length && typeof kind === "object") {
    var obj = kind;
    if (obj) {
      styles.push(kindPartStyles(obj, theme, colorValue));
      if (obj.border && obj.border.width && pad && !obj.padding) {
        styles.push(adjustPadStyle(pad, obj.border.width));
      }
    }
  }
  themePaths.hover.forEach(function(themePath) {
    var obj2 = getPath(themeObj, themePath);
    if (obj2) {
      var partStyles = kindPartStyles(obj2, theme);
      var adjPadStyles = "";
      if (obj2.border && obj2.border.width && pad && !obj2.padding) {
        adjPadStyles = adjustPadStyle(pad, obj2.border.width);
      }
      if (partStyles.length > 0) {
        styles.push(Ce(["&:hover{", " ", "}"], partStyles, adjPadStyles));
      }
    }
  });
  return styles;
};
var hoverIndicatorStyle = function hoverIndicatorStyle2(_ref3) {
  var hoverIndicator = _ref3.hoverIndicator, theme = _ref3.theme;
  var themishObj = {};
  if (hoverIndicator === true || hoverIndicator === "background")
    themishObj.background = theme.global.hover.background;
  else if (hoverIndicator.color || hoverIndicator.background) {
    if (hoverIndicator.background)
      themishObj.background = hoverIndicator.background;
    if (hoverIndicator.color)
      themishObj.color = hoverIndicator.color;
  } else
    themishObj.background = hoverIndicator;
  var styles = kindPartStyles(themishObj, theme);
  if (styles.length > 0)
    return Ce(["&:hover{", "}"], styles);
  return "";
};
var fillStyle6 = function fillStyle7(fillContainer) {
  if (fillContainer === "horizontal") {
    return "width: 100%;";
  }
  if (fillContainer === "vertical") {
    return "height: 100%;";
  }
  if (fillContainer) {
    return "\n      width: 100%;\n      height: 100%;\n      max-width: none;\n      flex: 1 0 auto;\n    ";
  }
  return void 0;
};
var plainStyle3 = function plainStyle4(props) {
  return Ce(["outline:none;border:none;padding:0;text-align:inherit;color:inherit;", ""], props.icon && "\n    > svg {\n      display: flex;\n      align-self: center;\n      vertical-align: middle;\n    }\n  ");
};
var StyledButtonKind = styled_components_browser_esm_default.button.withConfig({
  shouldForwardProp: function shouldForwardProp2(prop, defaultValidatorFn) {
    return !["kind"].includes(prop) && defaultValidatorFn(prop);
  }
}).withConfig({
  displayName: "StyledButtonKind",
  componentId: "sc-1vhfpnt-0"
})(["display:inline-block;box-sizing:border-box;cursor:pointer;font:inherit;text-decoration:none;margin:0;background:transparent;overflow:visible;text-transform:none;", " ", " ", " ", " ", " ", " ", " ", " &:focus{", "}&:focus:not(:focus-visible){", "}", " ", " ", ""], genericStyles, function(props) {
  return props.plain && plainStyle3(props);
}, function(props) {
  return !props.disabled && props.active && activeStyle;
}, function(props) {
  return !props.plain && basicStyle3(props);
}, function(props) {
  return !props.plain && kindStyle(props);
}, function(props) {
  return !props.plain && props.align && "\n    text-align: " + props.align + ";\n    ";
}, function(props) {
  return !props.disabled && props.hoverIndicator && hoverIndicatorStyle(props);
}, function(props) {
  return props.disabled && disabledStyle(props.theme.button.disabled.opacity);
}, function(props) {
  return (!props.plain || props.focusIndicator) && focusStyle();
}, unfocusStyle(), function(props) {
  return !props.plain && props.theme.button.transition && "\n    transition-property: " + props.theme.button.transition.properties.join(",") + ";\n    transition-duration: " + props.theme.button.transition.duration + "s;\n    transition-timing-function: " + props.theme.button.transition.timing + ";\n  ";
}, function(props) {
  return props.fillContainer && fillStyle6(props.fillContainer);
}, function(props) {
  return props.theme.button && props.theme.button.extend;
});
StyledButtonKind.defaultProps = {};
Object.setPrototypeOf(StyledButtonKind.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Button/Button.js
var _excluded10 = ["active", "align", "aria-label", "badge", "color", "children", "disabled", "icon", "focusIndicator", "gap", "fill", "href", "justify", "kind", "label", "onBlur", "onClick", "onFocus", "onMouseOut", "onMouseOver", "plain", "primary", "reverse", "secondary", "selected", "size", "tip", "type", "a11yTitle", "as"];
function _extends18() {
  _extends18 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends18.apply(this, arguments);
}
function _objectWithoutPropertiesLoose10(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var getIconColor = function getIconColor2(paths, theme, colorProp, kind) {
  if (paths === void 0) {
    paths = [];
  }
  var result = [];
  var index = paths.length - 1;
  if (typeof kind === "object")
    index = 0;
  while (index >= 0 && !result[1]) {
    var obj = typeof kind === "object" && kind || theme.button;
    if (paths[index]) {
      var parts2 = paths[index].split(".");
      while (obj && parts2.length) {
        obj = obj[parts2.shift()];
      }
    }
    if (obj) {
      var background = colorProp && obj.background && obj.background.color ? colorProp : obj.background;
      var objColor = obj.color || (Object.prototype.hasOwnProperty.call(obj, "color") && obj.color === void 0 ? false : void 0);
      var color = colorProp && (!obj.background || !obj.background.color) && (!obj.border || !obj.border.color) ? colorProp : objColor;
      result = backgroundAndTextColors(background, color, theme);
    }
    index -= 1;
  }
  return result[1] || void 0;
};
var getPropertyColor = function getPropertyColor2(property, paths, theme, kind, primary) {
  if (paths === void 0) {
    paths = [];
  }
  var result;
  if (kind) {
    var obj = typeof kind === "object" && kind || theme.button;
    if (paths[0]) {
      var parts2 = paths[0].split(".");
      while (obj && parts2.length) {
        obj = obj[parts2.shift()];
      }
    }
    if (obj) {
      result = obj[property] || obj[property] && obj[property].color;
    }
  } else if (primary && theme && theme.button && theme.button.primary) {
    result = theme.button.primary[property] || theme.button.primary[property] && theme.button.primary[property].color;
  } else {
    result = theme && theme.button && theme.button[property] || theme && theme.button && theme.button[property] && theme.button[property].color;
  }
  return result;
};
var Button = (0, import_react18.forwardRef)(function(_ref, ref) {
  var active = _ref.active, _ref$align = _ref.align, align = _ref$align === void 0 ? "center" : _ref$align, ariaLabel = _ref["aria-label"], badgeProp = _ref.badge, color = _ref.color, children2 = _ref.children, disabled = _ref.disabled, icon = _ref.icon, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, gap = _ref.gap, fill = _ref.fill, href = _ref.href, justify = _ref.justify, kindArg = _ref.kind, label = _ref.label, _onBlur = _ref.onBlur, onClick = _ref.onClick, _onFocus = _ref.onFocus, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, plain = _ref.plain, primary = _ref.primary, reverse = _ref.reverse, secondary = _ref.secondary, selected = _ref.selected, size = _ref.size, tip = _ref.tip, _ref$type = _ref.type, type = _ref$type === void 0 ? "button" : _ref$type, _ref$a11yTitle = _ref.a11yTitle, a11yTitle = _ref$a11yTitle === void 0 ? typeof tip === "string" ? tip : void 0 : _ref$a11yTitle, as = _ref.as, rest = _objectWithoutPropertiesLoose10(_ref, _excluded10);
  var theme = (0, import_react18.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react18.useState)(), focus = _useState[0], setFocus = _useState[1];
  var _useState2 = (0, import_react18.useState)(false), hover = _useState2[0], setHover = _useState2[1];
  if ((icon || label) && children2) {
    console.warn("Button should not have children if icon or label is provided");
  }
  var kindObj = (0, import_react18.useMemo)(function() {
    return typeof kindArg === "object";
  }, [kindArg]);
  var kind = (0, import_react18.useMemo)(function() {
    if (theme.button["default"] || kindObj) {
      if (kindArg)
        return kindArg;
      if (primary)
        return "primary";
      if (secondary)
        return "secondary";
      return "default";
    }
    return void 0;
  }, [kindArg, kindObj, primary, secondary, theme]);
  var themePaths = (0, import_react18.useMemo)(function() {
    if (!kind || plain)
      return void 0;
    var result = {
      base: [],
      hover: []
    };
    if (!kindObj)
      result.base.push(kind);
    if (selected) {
      result.base.push("selected");
      if (!kindObj)
        result.base.push("selected." + kind);
    }
    if (disabled) {
      result.base.push("disabled");
      if (!kindObj)
        result.base.push("disabled." + kind);
    } else {
      if (active) {
        result.base.push("active");
        if (!kindObj)
          result.base.push("active." + kind);
      }
      result.hover.push("hover");
      if (!kindObj)
        result.hover.push("hover." + kind);
      if (active) {
        result.hover.push("hover.active");
        if (!kindObj) {
          result.hover.push("hover.active." + kind);
        }
      }
    }
    return result;
  }, [active, disabled, kind, kindObj, plain, selected]);
  var isDarkBackground = function isDarkBackground2() {
    var backgroundColor2 = normalizeBackground(normalizeColor(color || theme.button.primary && theme.button.primary.color || theme.global.colors.control || "brand", theme), theme);
    return colorIsDark(backgroundColor2, theme);
  };
  var onMouseOverButton = function onMouseOverButton2(event) {
    setHover(true);
    if (onMouseOver) {
      onMouseOver(event);
    }
  };
  var onMouseOutButton = function onMouseOutButton2(event) {
    setHover(false);
    if (onMouseOut) {
      onMouseOut(event);
    }
  };
  var buttonIcon = icon;
  if (icon && !icon.props.color) {
    if (kind) {
      if (!plain) {
        var iconColor = hover && getIconColor(themePaths.hover, theme) || getIconColor(themePaths.base, theme, color, kind);
        if (iconColor)
          buttonIcon = (0, import_react18.cloneElement)(icon, {
            color: iconColor
          });
      }
    } else if (primary) {
      buttonIcon = (0, import_react18.cloneElement)(icon, {
        color: theme.global.colors.text[isDarkBackground() ? "dark" : "light"]
      });
    }
  }
  var domTag = !as && href ? "a" : as;
  var first = reverse ? label : buttonIcon;
  var second = reverse ? buttonIcon : label;
  var contents;
  if (first && second) {
    contents = import_react18.default.createElement(Box, {
      direction: "row",
      align: "center",
      justify: justify || (align === "center" ? "center" : "between"),
      gap: gap || theme.button.gap,
      responsive: false
    }, first, second);
  } else if (typeof children2 === "function") {
    contents = children2({
      disabled,
      hover,
      focus
    });
  } else {
    contents = first || second || children2;
  }
  var background = getPropertyColor("background", themePaths && themePaths.base, theme, kind, primary);
  var border = getPropertyColor("border", themePaths && themePaths.base, theme, kind, primary);
  var innerBadge = !background && !border || !kind && icon && !label;
  if (badgeProp && innerBadge) {
    contents = import_react18.default.createElement(Badge, {
      content: badgeProp
    }, contents);
  }
  var styledButtonResult;
  if (kind) {
    styledButtonResult = import_react18.default.createElement(StyledButtonKind, _extends18({}, rest, {
      as: domTag,
      ref,
      active,
      align,
      "aria-label": ariaLabel || a11yTitle,
      badge: badgeProp,
      colorValue: color,
      disabled,
      hasIcon: !!icon,
      gap,
      hasLabel: !!label,
      icon,
      fillContainer: fill,
      focus,
      focusIndicator,
      href,
      kind,
      themePaths,
      onClick,
      onFocus: function onFocus(event) {
        setFocus(true);
        if (_onFocus)
          _onFocus(event);
      },
      onBlur: function onBlur(event) {
        setFocus(false);
        if (_onBlur)
          _onBlur(event);
      },
      onMouseOver: onMouseOverButton,
      onMouseOut: onMouseOutButton,
      plain: plain || import_react18.Children.count(children2) > 0,
      primary,
      sizeProp: size,
      type: !href ? type : void 0
    }), contents);
  } else {
    styledButtonResult = import_react18.default.createElement(StyledButton, _extends18({}, rest, {
      as: domTag,
      ref,
      "aria-label": ariaLabel || a11yTitle,
      colorValue: color,
      active,
      selected,
      disabled,
      hasIcon: !!icon,
      gap,
      hasLabel: !!label,
      fillContainer: fill,
      focus,
      focusIndicator,
      href,
      kind,
      themePaths,
      onClick,
      onFocus: function onFocus(event) {
        setFocus(true);
        if (_onFocus)
          _onFocus(event);
      },
      onBlur: function onBlur(event) {
        setFocus(false);
        if (_onBlur)
          _onBlur(event);
      },
      onMouseOver: onMouseOverButton,
      onMouseOut: onMouseOutButton,
      pad: !plain,
      plain: typeof plain !== "undefined" ? plain : import_react18.Children.count(children2) > 0 || icon && !label,
      primary,
      sizeProp: size,
      type: !href ? type : void 0
    }), contents);
  }
  if (tip) {
    if (typeof tip === "string") {
      styledButtonResult = import_react18.default.createElement(Tip, {
        content: tip
      }, styledButtonResult);
    } else {
      styledButtonResult = import_react18.default.createElement(Tip, tip, styledButtonResult);
    }
  }
  if (badgeProp && !innerBadge) {
    styledButtonResult = import_react18.default.createElement(Badge, {
      content: badgeProp
    }, styledButtonResult);
  }
  return styledButtonResult;
});
Button.displayName = "Button";
Button.propTypes = ButtonPropTypes;

// node_modules/grommet/es6/components/Collapsible/Collapsible.js
var import_react19 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Collapsible/propTypes.js
var import_prop_types10 = __toESM(require_prop_types());
var PropType9 = {};
if (true) {
  PropType9 = {
    open: import_prop_types10.default.bool,
    direction: import_prop_types10.default.oneOf(["horizontal", "vertical"])
  };
}
var CollapsiblePropTypes = PropType9;

// node_modules/grommet/es6/components/Collapsible/Collapsible.js
var AnimatedBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Collapsible__AnimatedBox",
  componentId: "sc-15kniua-0"
})(["", ""], function(props) {
  return props.shouldOpen ? "visibility: hidden;\n      position: absolute;\n      pointer-events: none;" : "transition: " + ("max-" + props.dimension + " " + props.speedProp + "ms, opacity " + props.speedProp + "ms") + ";\n      opacity: " + (props.open ? 1 : 0) + ";\n      overflow: " + (props.animate || !props.open ? "hidden" : "visible") + ";";
});
var Collapsible = (0, import_react19.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, direction = _ref.direction, openArg = _ref.open;
  var theme = (0, import_react19.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react19.useState)(openArg), open = _useState[0], setOpen = _useState[1];
  var _useState2 = (0, import_react19.useState)(false), animate = _useState2[0], setAnimate = _useState2[1];
  var _useState3 = (0, import_react19.useState)(theme.collapsible.minSpeed), speed = _useState3[0], setSpeed = _useState3[1];
  var dimension = (0, import_react19.useMemo)(function() {
    return direction === "horizontal" ? "width" : "height";
  }, [direction]);
  var containerRef = useForwardedRef(ref);
  var sizeRef = (0, import_react19.useRef)();
  var shouldOpen = !open && openArg;
  var shouldClose = open && !openArg;
  (0, import_react19.useEffect)(function() {
    if (openArg !== open) {
      setAnimate(true);
      setOpen(openArg);
    }
  }, [open, openArg]);
  useLayoutEffect(function() {
    var container = containerRef.current;
    if (!animate && shouldOpen) {
      var parentPrevPosition = container.parentNode.style.position;
      container.parentNode.style.position = "relative";
      var _container$getBoundin = container.getBoundingClientRect(), size = _container$getBoundin[dimension];
      container.parentNode.style.position = parentPrevPosition;
      sizeRef.current = size;
    }
    if (shouldOpen) {
      container.style["max-" + dimension] = 0;
    } else if (shouldClose) {
      var _container$getBoundin2 = container.getBoundingClientRect(), _size = _container$getBoundin2[dimension];
      container.style["max-" + dimension] = _size + "px";
    }
  }, [shouldOpen, shouldClose, containerRef, dimension, animate]);
  (0, import_react19.useEffect)(function() {
    if (shouldOpen || shouldClose) {
      var container = containerRef.current;
      var _theme$collapsible = theme.collapsible, minSpeed = _theme$collapsible.minSpeed, baseline = _theme$collapsible.baseline;
      var nextSpeed = Math.max(sizeRef.current / baseline * minSpeed, minSpeed);
      setSpeed(nextSpeed);
      requestAnimationFrame(function() {
        requestAnimationFrame(function() {
          container.style["max-" + dimension] = shouldOpen ? sizeRef.current + "px" : 0;
        });
      });
    }
  }, [shouldOpen, shouldClose, containerRef, dimension, theme]);
  (0, import_react19.useEffect)(function() {
    if (animate) {
      var container = containerRef.current;
      var timer = setTimeout(function() {
        setAnimate(false);
        container.removeAttribute("style");
      }, speed);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [animate, containerRef, speed, open]);
  return import_react19.default.createElement(AnimatedBox, {
    "aria-hidden": !open,
    ref: containerRef,
    open,
    animate,
    dimension,
    speedProp: speed,
    shouldOpen: !animate && shouldOpen
  }, shouldOpen || open || animate ? children2 : null);
});
Collapsible.displayName = "Collapsible";
Collapsible.propTypes = CollapsiblePropTypes;

// node_modules/grommet/es6/components/Heading/Heading.js
var import_react20 = __toESM(require_react());

// node_modules/grommet/es6/components/Heading/StyledHeading.js
init_styled_components_browser_esm();
var sizeStyle5 = function sizeStyle6(props) {
  var size = props.size || "medium";
  var headingTheme = props.theme.heading;
  var levelStyle = headingTheme.level[props.level];
  if (levelStyle) {
    var data = levelStyle[size];
    var styles = [Ce(["font-size:", ";line-height:", ";max-width:", ";font-weight:", ";"], data ? data.size : size, data ? data.height : "normal", props.fillProp && "none" || data && data.maxWidth || levelStyle.medium.maxWidth, levelStyle.font.weight || headingTheme.weight)];
    if (props.responsive && headingTheme.responsiveBreakpoint) {
      var breakpoint = props.theme.global.breakpoints[headingTheme.responsiveBreakpoint];
      if (breakpoint) {
        var responsiveData = headingTheme.level[props.level + 1] ? headingTheme.level[props.level + 1][size] : headingTheme.level[props.level][size];
        if (responsiveData) {
          styles.push(breakpointStyle(breakpoint, "\n            font-size: " + responsiveData.size + ";\n            line-height: " + responsiveData.height + ";\n            max-width: " + (props.fillProp && "none" || responsiveData.maxWidth) + ";\n          "));
        }
      }
    }
    return styles;
  }
  console.warn("Heading level " + props.level + " is not defined in your theme.");
  return "";
};
var fontFamily2 = function fontFamily3(props) {
  var _ref = props.theme.heading.level[props.level] || {}, font = _ref.font;
  if (font && font.family) {
    return Ce(["font-family:", ";"], font.family);
  }
  return props.theme.heading.font ? Ce(["font-family:", ";"], props.theme.heading.font.family) : "";
};
var truncateStyle2 = "\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n";
var colorStyle2 = Ce(["color:", ";"], function(props) {
  return normalizeColor(props.colorProp || props.theme.heading.color, props.theme);
});
var StyledHeading = styled_components_browser_esm_default.h1.withConfig({
  displayName: "StyledHeading",
  componentId: "sc-1rdh4aw-0"
})(["", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return fontFamily2(props);
}, function(props) {
  return sizeStyle5(props);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.truncate && truncateStyle2;
}, function(props) {
  return (props.colorProp || props.theme.heading.color) && colorStyle2;
}, function(props) {
  return props.theme.heading && props.theme.heading.extend;
});
StyledHeading.defaultProps = {};
Object.setPrototypeOf(StyledHeading.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Heading/propTypes.js
var import_prop_types11 = __toESM(require_prop_types());
function _extends19() {
  _extends19 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends19.apply(this, arguments);
}
var PropType10 = {};
if (true) {
  PropType10 = _extends19({}, genericProps, {
    color: colorPropType,
    fill: import_prop_types11.default.bool,
    level: import_prop_types11.default.oneOf([1, 2, 3, 4, 5, 6, "1", "2", "3", "4", "5", "6"]),
    responsive: import_prop_types11.default.bool,
    size: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types11.default.string]),
    textAlign: import_prop_types11.default.oneOf(["start", "center", "end", "justify"]),
    truncate: import_prop_types11.default.bool
  });
}
var HeadingPropTypes = PropType10;

// node_modules/grommet/es6/components/Heading/Heading.js
var _excluded11 = ["color", "fill", "level"];
function _extends20() {
  _extends20 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends20.apply(this, arguments);
}
function _objectWithoutPropertiesLoose11(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Heading = (0, import_react20.forwardRef)(function(_ref, ref) {
  var color = _ref.color, fill = _ref.fill, level = _ref.level, rest = _objectWithoutPropertiesLoose11(_ref, _excluded11);
  return import_react20.default.createElement(StyledHeading, _extends20({
    as: "h" + level,
    colorProp: color,
    fillProp: fill,
    level: +level
  }, rest, {
    ref
  }));
});
Heading.displayName = "Heading";
Heading.defaultProps = {
  level: 1,
  responsive: true
};
Heading.propTypes = HeadingPropTypes;

// node_modules/grommet/es6/components/AccordionPanel/propTypes.js
var import_prop_types12 = __toESM(require_prop_types());
var PropType11 = {};
if (true) {
  PropType11 = {
    label: import_prop_types12.default.oneOfType([import_prop_types12.default.string, import_prop_types12.default.node]),
    header: import_prop_types12.default.node
  };
}
var AccordionPanelPropTypes = PropType11;

// node_modules/grommet/es6/components/AccordionPanel/AccordionPanel.js
var _excluded12 = ["children", "header", "label", "onClick", "onMouseOut", "onMouseOver", "onFocus", "onBlur"];
function _extends21() {
  _extends21 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends21.apply(this, arguments);
}
function _objectWithoutPropertiesLoose12(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var AccordionPanel = (0, import_react21.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, header = _ref.header, label = _ref.label, onClick = _ref.onClick, _onMouseOut = _ref.onMouseOut, _onMouseOver = _ref.onMouseOver, _onFocus = _ref.onFocus, _onBlur = _ref.onBlur, rest = _objectWithoutPropertiesLoose12(_ref, _excluded12);
  var theme = (0, import_react21.useContext)(Ge) || defaultProps2.theme;
  var _useContext = (0, import_react21.useContext)(AccordionContext), active = _useContext.active, animate = _useContext.animate, onPanelChange = _useContext.onPanelChange;
  var _useState = (0, import_react21.useState)(void 0), hover = _useState[0], setHover = _useState[1];
  var _useState2 = (0, import_react21.useState)(), focus = _useState2[0], setFocus = _useState2[1];
  var iconColor = (0, import_react21.useMemo)(function() {
    return normalizeColor(theme.accordion.icons.color || "control", theme);
  }, [theme]);
  var AccordionIcon = (0, import_react21.useMemo)(function() {
    return active ? theme.accordion.icons.collapse : theme.accordion.icons.expand;
  }, [active, theme.accordion.icons]);
  var defaultHoverColor = JSON.stringify({
    dark: "light-4",
    light: "dark-3"
  });
  if (JSON.stringify(theme.accordion.hover.color) !== defaultHoverColor)
    console.warn("The theme style for accordion.hover.color is deprecated, \n        use accordion.hover.heading.color instead.");
  var headingColor = theme.accordion.hover && JSON.stringify(theme.accordion.hover.heading.color) !== defaultHoverColor ? theme.accordion.hover.heading.color : theme.accordion.hover.color;
  var contentBorder = theme.accordion.border;
  var panelBorder = theme.accordion.panel.border;
  var abutMargin;
  if (panelBorder)
    abutMargin = {
      bottom: "-" + parseMetricToNum(theme.global.borderSize[panelBorder.size] || panelBorder.size || theme.global.borderSize.xsmall) + "px"
    };
  return import_react21.default.createElement(Box, {
    ref,
    flex: false,
    onClick,
    border: panelBorder,
    margin: abutMargin
  }, import_react21.default.createElement(Button, {
    role: "tab",
    "aria-selected": active,
    "aria-expanded": active,
    plain: theme.button["default"] ? true : void 0,
    onClick: onPanelChange,
    onMouseOver: function onMouseOver(event) {
      setHover(headingColor);
      if (_onMouseOver)
        _onMouseOver(event);
    },
    onMouseOut: function onMouseOut(event) {
      setHover(void 0);
      if (_onMouseOut)
        _onMouseOut(event);
    },
    onFocus: function onFocus(event) {
      setHover(headingColor);
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setHover(void 0);
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    style: focus ? {
      zIndex: 1
    } : void 0
  }, header || import_react21.default.createElement(Box, _extends21({
    align: "center",
    direction: "row",
    justify: "between"
  }, rest), typeof label === "string" ? import_react21.default.createElement(Box, {
    pad: {
      horizontal: "xsmall"
    }
  }, import_react21.default.createElement(Heading, {
    level: theme.accordion.heading && theme.accordion.heading.level || 4,
    margin: theme.accordion.heading && theme.accordion.heading.margin || void 0,
    color: hover
  }, label)) : label, AccordionIcon && import_react21.default.createElement(Box, {
    pad: {
      horizontal: "small"
    },
    width: {
      min: "fit-content"
    }
  }, import_react21.default.createElement(AccordionIcon, {
    color: iconColor
  })))), import_react21.default.createElement(Box, {
    border: contentBorder
  }, animate ? import_react21.default.createElement(Collapsible, {
    open: active
  }, children2) : active && children2));
});
AccordionPanel.displayName = "AccordionPanel";
AccordionPanel.propTypes = AccordionPanelPropTypes;

// node_modules/grommet/es6/components/Anchor/Anchor.js
var import_react22 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Anchor/StyledAnchor.js
init_styled_components_browser_esm();
var disabledStyle3 = "\n  opacity: 0.3;\n  cursor: default;\n  text-decoration: none;\n";
var sizeStyle7 = function sizeStyle8(props) {
  if (props.size) {
    var size = props.size || "medium";
    var data = props.theme.text[size];
    return Ce(["font-size:", ";line-height:", ";"], data ? data.size : size, data ? data.height : "normal");
  }
  return Ce(["font-size:inherit;line-height:inherit;"]);
};
var StyledAnchor = styled_components_browser_esm_default.a.withConfig({
  shouldForwardProp: function shouldForwardProp3(prop, defaultValidatorFn) {
    return !["as", "colorProp", "focus", "hasIcon", "hasLabel", "reverse"].includes(prop) && defaultValidatorFn(prop);
  }
}).withConfig({
  displayName: "StyledAnchor",
  componentId: "sc-1rp7lwl-0"
})(["box-sizing:border-box;", " color:", ";", " text-decoration:", ";cursor:pointer;", " ", " ", " ", " ", " ", ""], function(props) {
  return sizeStyle7(props);
}, function(props) {
  return normalizeColor(props.colorProp || props.theme.anchor.color, props.theme);
}, function(props) {
  return props.weight ? "font-weight: " + props.weight + ";" : props.theme.anchor.fontWeight && "font-weight: " + props.theme.anchor.fontWeight + ";";
}, function(props) {
  return props.hasIcon ? "none" : props.theme.anchor.textDecoration;
}, genericStyles, function(props) {
  return !props.disabled && props.theme.anchor.hover && Ce(["&:hover{", " ", " ", "}"], props.theme.anchor.hover.textDecoration && "text-decoration: " + props.theme.anchor.hover.textDecoration + ";", props.theme.anchor.hover.fontWeight && "font-weight: " + props.theme.anchor.hover.fontWeight + ";", props.theme.anchor.hover.extend);
}, function(props) {
  return props.hasIcon && !props.hasLabel && "\n    padding: " + props.theme.global.edgeSize.small + ";\n  ";
}, function(props) {
  return props.disabled && disabledStyle3;
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return props.theme.anchor.extend;
});
StyledAnchor.defaultProps = {};
Object.setPrototypeOf(StyledAnchor.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Anchor/propTypes.js
var import_prop_types13 = __toESM(require_prop_types());
function _extends22() {
  _extends22 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends22.apply(this, arguments);
}
var PropType12 = {};
if (true) {
  PropType12 = _extends22({}, genericProps, {
    a11yTitle: import_prop_types13.default.string,
    as: import_prop_types13.default.oneOfType([import_prop_types13.default.string, import_prop_types13.default.func, import_prop_types13.default.elementType]),
    color: colorPropType,
    disabled: import_prop_types13.default.bool,
    gap: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types13.default.string]),
    href: import_prop_types13.default.string,
    icon: import_prop_types13.default.element,
    label: import_prop_types13.default.node,
    onClick: import_prop_types13.default.func,
    reverse: import_prop_types13.default.bool,
    size: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge"]), import_prop_types13.default.string]),
    weight: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["normal", "bold"]), import_prop_types13.default.string, import_prop_types13.default.number])
  });
}
var AnchorPropTypes = PropType12;

// node_modules/grommet/es6/components/Anchor/Anchor.js
var _excluded13 = ["a11yTitle", "aria-label", "children", "color", "disabled", "gap", "href", "icon", "label", "onBlur", "onClick", "onFocus", "reverse"];
function _extends23() {
  _extends23 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends23.apply(this, arguments);
}
function _objectWithoutPropertiesLoose13(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Anchor = (0, import_react22.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], children2 = _ref.children, color = _ref.color, disabled = _ref.disabled, _ref$gap = _ref.gap, gap = _ref$gap === void 0 ? "small" : _ref$gap, href = _ref.href, icon = _ref.icon, label = _ref.label, _onBlur = _ref.onBlur, onClick = _ref.onClick, _onFocus = _ref.onFocus, reverse = _ref.reverse, rest = _objectWithoutPropertiesLoose13(_ref, _excluded13);
  var theme = (0, import_react22.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react22.useState)(), focus = _useState[0], setFocus = _useState[1];
  (0, import_react22.useEffect)(function() {
    if ((icon || label) && children2) {
      console.warn("Anchor should not have children if icon or label is provided");
    }
  }, [children2, icon, label]);
  var coloredIcon = icon;
  if (icon && !icon.props.color) {
    coloredIcon = (0, import_react22.cloneElement)(icon, {
      color: normalizeColor(color || theme.anchor.color, theme)
    });
  }
  var first = reverse ? label : coloredIcon;
  var second = reverse ? coloredIcon : label;
  return import_react22.default.createElement(StyledAnchor, _extends23({}, rest, {
    ref,
    "aria-label": ariaLabel || a11yTitle,
    colorProp: color,
    disabled,
    hasIcon: !!icon,
    focus,
    hasLabel: label,
    reverse,
    href: !disabled ? href : void 0,
    onClick: !disabled ? onClick : void 0,
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    }
  }), first && second ? import_react22.default.createElement(Box, {
    as: "span",
    direction: "row",
    align: "center",
    gap,
    responsive: false,
    style: {
      display: "inline-flex"
    }
  }, first, second) : first || second || children2);
});
Anchor.displayName = "Anchor";
Anchor.propTypes = AnchorPropTypes;

// node_modules/grommet/es6/components/Avatar/Avatar.js
var import_react23 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Avatar/StyledAvatar.js
init_styled_components_browser_esm();
var StyledAvatarText = styled_components_browser_esm_default(Text).withConfig({
  displayName: "StyledAvatar__StyledAvatarText",
  componentId: "sc-1suyamb-0"
})(["", " ", ""], function(props) {
  return props.theme.avatar && props.theme.avatar.text && props.theme.avatar.text.fontWeight && "font-weight: " + props.theme.avatar.text.fontWeight + ";";
}, function(props) {
  return props.theme.avatar.text && props.theme.avatar.text.extend;
});
StyledAvatarText.defaultProps = {};
Object.setPrototypeOf(StyledAvatarText.defaultProps, defaultProps2);
var StyledAvatar = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledAvatar",
  componentId: "sc-1suyamb-1"
})(["", ""], function(props) {
  return props.theme.avatar && props.theme.avatar.extend;
});
StyledAvatar.defaultProps = {};
Object.setPrototypeOf(StyledAvatar.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Avatar/propTypes.js
var import_prop_types14 = __toESM(require_prop_types());
var PropType13 = {};
if (true) {
  PropType13 = {
    size: import_prop_types14.default.oneOfType([import_prop_types14.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "2xl", "3xl", "4xl", "5xl"]), import_prop_types14.default.string]),
    src: import_prop_types14.default.string
  };
}
var AvatarPropTypes = PropType13;

// node_modules/grommet/es6/components/Avatar/Avatar.js
var _excluded14 = ["align", "children", "height", "justify", "round", "size", "src", "width"];
function _extends24() {
  _extends24 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends24.apply(this, arguments);
}
function _objectWithoutPropertiesLoose14(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Avatar = function Avatar2(_ref) {
  var _ref$align = _ref.align, align = _ref$align === void 0 ? "center" : _ref$align, children2 = _ref.children, height = _ref.height, _ref$justify = _ref.justify, justify = _ref$justify === void 0 ? "center" : _ref$justify, _ref$round = _ref.round, round3 = _ref$round === void 0 ? "full" : _ref$round, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, src = _ref.src, width = _ref.width, rest = _objectWithoutPropertiesLoose14(_ref, _excluded14);
  var theme = (0, import_react23.useContext)(Ge) || defaultProps2.theme;
  var avatarSize = theme.avatar.size[size] || size;
  var avatarTextSize = theme.avatar.text.size[size] || "large";
  var avatarProps = (0, import_react23.useMemo)(function() {
    return {
      align,
      height: avatarSize,
      justify,
      overflow: "hidden",
      round: round3,
      width: avatarSize
    };
  }, [align, avatarSize, justify, round3]);
  var AvatarChildren = (0, import_react23.useCallback)(function() {
    return import_react23.default.createElement(StyledAvatar, _extends24({}, avatarProps, rest), children2);
  }, [avatarProps, children2, rest]);
  if (height || width) {
    console.warn("Avatar should use `size` instead of `height` or `width` props");
  }
  if (typeof src === "string") {
    return import_react23.default.createElement(StyledAvatar, _extends24({}, avatarProps, rest, {
      background: "url(" + src + ")"
    }));
  }
  if (typeof children2 === "string") {
    return import_react23.default.createElement(StyledAvatar, _extends24({}, avatarProps, rest), import_react23.default.createElement(StyledAvatarText, {
      alignSelf: "center",
      size: avatarTextSize
    }, children2));
  }
  return import_react23.default.createElement(AvatarChildren, null);
};
Avatar.propTypes = AvatarPropTypes;

// node_modules/grommet/es6/components/Calendar/Calendar.js
var import_react26 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js
var import_react24 = __toESM(require_react());

// node_modules/grommet/es6/contexts/AnnounceContext/propTypes.js
var import_prop_types15 = __toESM(require_prop_types());
var PropType14 = {};
if (true) {
  PropType14 = {
    children: import_prop_types15.default.func
  };
}
var AnnounceContextPropTypes = PropType14;

// node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js
var createAnnouncer = function createAnnouncer2() {
  var announcer = document.createElement("div");
  announcer.id = "grommet-announcer";
  announcer.style.left = "-100%";
  announcer.style.right = "100%";
  announcer.style.position = "fixed";
  announcer.style["z-index"] = "-1";
  document.body.insertBefore(announcer, document.body.firstChild);
  return announcer;
};
var AnnounceContext = import_react24.default.createContext(function(message, mode, timeout) {
  if (mode === void 0) {
    mode = "polite";
  }
  if (timeout === void 0) {
    timeout = 500;
  }
  var announcer = document.body.querySelector("#grommet-announcer[aria-live]") || createAnnouncer();
  announcer.setAttribute("aria-live", "off");
  announcer.innerHTML = message;
  announcer.setAttribute("aria-live", mode);
  setTimeout(function() {
    announcer.innerHTML = "";
  }, timeout);
});
AnnounceContext.propTypes = AnnounceContextPropTypes;

// node_modules/grommet/es6/contexts/MessageContext/MessageContext.js
var import_react25 = __toESM(require_react());

// node_modules/grommet/es6/languages/default.json
var calendar = {
  previousMove: "Moved to {date}",
  previous: "Go to {date}",
  nextMove: "Moved to {date}",
  next: "Go to {date}"
};
var carousel = {
  previous: "Go to slide {slide}",
  next: "Go to slide {slide}",
  jump: "Jump to slide {slide}"
};
var dateInput = {
  openCalendar: "Press space to open calendar",
  enterCalendar: "Calendar is open, use arrow keys and enter to select a date.",
  exitCalendar: "Exited calendar dialog"
};
var fileInput = {
  browse: "browse",
  dropPrompt: "Drop file here or",
  dropPromptMultiple: "Drop files here or",
  files: "files",
  maxSizeSingle: "The file is too large. Select a file no larger than {maxSize}.",
  maxSizeMultiple: {
    singular: "One file is too large. Select files which are no larger than {maxSize}.",
    plural: "{numOfFiles} files are too large. Select files which are no larger than {maxSize}."
  },
  remove: "remove",
  removeAll: "remove all",
  maxFile: "Attach a maximum of {max} files only."
};
var form = {
  invalid: "invalid",
  required: "required"
};
var menu = {
  openMenu: "Open Menu",
  closeMenu: "Close Menu"
};
var rangeSelector = {
  lower: "Lower Bounds",
  upper: "Upper Bounds"
};
var select = {
  multiple: "multiple",
  selected: "; Selected: {currentSelectedValue}"
};
var skipLinks = {
  skipTo: "Skip To:"
};
var tabs = {
  tabContents: "Tab Contents"
};
var textInput = {
  enterSelect: "(Press Enter to Select)",
  suggestionsCount: "suggestions available",
  suggestionsExist: "This input has suggestions use arrow keys to navigate",
  suggestionIsOpen: "Suggestions drop is open, continue to use arrow keys to navigate"
};
var video = {
  closeMenu: "close menu",
  fullScreen: "full screen",
  progressMeter: "video progress",
  scrubber: "scrubber",
  openMenu: "open menu",
  pauseButton: "pause",
  playButton: "play",
  volumeDown: "volume down",
  volumeUp: "volume up"
};
var default_default = {
  calendar,
  carousel,
  dateInput,
  fileInput,
  form,
  menu,
  rangeSelector,
  select,
  skipLinks,
  tabs,
  textInput,
  video
};

// node_modules/grommet/es6/contexts/MessageContext/MessageContext.js
var _format = function format(options, messages) {
  var _options$id;
  var idParts = ((_options$id = options.id) == null ? void 0 : _options$id.split(".")) || [];
  var baseId = idParts[(idParts == null ? void 0 : idParts.length) - 1];
  var messageObj = messages;
  idParts.forEach(function(idPart) {
    if (typeof messageObj === "object") {
      messageObj = messageObj[idPart];
    }
  });
  var message = (options.messages ? options.messages[baseId] : void 0) || messageObj || options.defaultMessage;
  var values = options.values;
  var newMessage = message;
  var tokens = message == null ? void 0 : message.match(/\{(.+?)\}/g);
  tokens == null ? void 0 : tokens.forEach(function(token) {
    var names = token.substr(1, token.length - 2);
    var value = values[names];
    newMessage = newMessage.replace(token, value);
  });
  return values ? newMessage : message;
};
var defaultValue = {
  messages: default_default,
  format: function format2(options) {
    return _format(options, default_default);
  }
};
var MessageContext = import_react25.default.createContext(defaultValue);

// node_modules/grommet/es6/components/Calendar/StyledCalendar.js
init_styled_components_browser_esm();
var sizeStyle9 = function sizeStyle10(props) {
  var data = props.theme.calendar[props.sizeProp];
  var width = props.fillContainer ? "100%" : props.theme.global.size[props.sizeProp];
  return Ce(["font-size:", ";line-height:", ";width:", ";", ""], data.fontSize, data.lineHeight, width, function(p2) {
    return p2.fillContainer && "height: 100%;";
  });
};
var StyledCalendar = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar",
  componentId: "sc-1y4xhmp-0"
})(["", " ", " ", ""], genericStyles, function(props) {
  return sizeStyle9(props);
}, function(props) {
  return props.theme.calendar && props.theme.calendar.extend;
});
StyledCalendar.defaultProps = {};
Object.setPrototypeOf(StyledCalendar.defaultProps, defaultProps2);
var weeksContainerSizeStyle = function weeksContainerSizeStyle2(props) {
  var height = props.fillContainer ? "100%" : parseMetricToNum(props.theme.calendar[props.sizeProp].daySize) * 6 + "px";
  return "\n    height: " + height + ";\n\n  ";
};
var StyledWeeksContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledWeeksContainer",
  componentId: "sc-1y4xhmp-1"
})(["overflow:hidden;", " ", ";"], function(props) {
  return weeksContainerSizeStyle(props);
}, function(props) {
  return props.focus && !props.plain && focusStyle();
});
StyledWeeksContainer.defaultProps = {};
Object.setPrototypeOf(StyledWeeksContainer.defaultProps, defaultProps2);
var slideStyle = function slideStyle2(props) {
  var _props$slide = props.slide, direction = _props$slide.direction, weeks = _props$slide.weeks, sizeProp = props.sizeProp, theme = props.theme;
  var _theme$calendar$sizeP = theme.calendar[sizeProp], daySize = _theme$calendar$sizeP.daySize, slideDuration = _theme$calendar$sizeP.slideDuration;
  var amount = parseMetricToNum(daySize) * weeks;
  var translateYFrom = direction === "down" ? "-" + amount + "px" : "0";
  var translateYTo = direction === "up" ? "-" + amount + "px" : "0";
  var slideTransition = Ce(["0%{transform:translateY(", ");}100%{transform:translateY(", ");}"], translateYFrom, translateYTo);
  return Ce(["animation:", " ", " forwards;"], Ue(["", ""], slideTransition), slideDuration);
};
var weeksSizeStyle = function weeksSizeStyle2() {
  return Ce(["display:flex;flex-direction:column;height:100%;"]);
};
var StyledWeeks = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledWeeks",
  componentId: "sc-1y4xhmp-2"
})(["position:relative;", " ", ";"], function(props) {
  return props.fillContainer && weeksSizeStyle();
}, function(props) {
  return props.slide && slideStyle(props);
});
StyledWeeks.defaultProps = {};
Object.setPrototypeOf(StyledWeeks.defaultProps, defaultProps2);
var StyledWeek = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledWeek",
  componentId: "sc-1y4xhmp-3"
})(["display:flex;justify-content:space-between;", ""], function(props) {
  return props.fillContainer && "flex: 1;";
});
StyledWeek.defaultProps = {};
Object.setPrototypeOf(StyledWeek.defaultProps, defaultProps2);
var StyledDayContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledDayContainer",
  componentId: "sc-1y4xhmp-4"
})(["flex:0 1 auto;", ""], function(props) {
  return props.fillContainer && "width: 14.3%;";
});
StyledDayContainer.defaultProps = {};
Object.setPrototypeOf(StyledDayContainer.defaultProps, defaultProps2);
var daySizeStyle = function daySizeStyle2(props) {
  var data = props.theme.calendar[props.sizeProp];
  return Ce(["width:", ";height:", ";"], props.fillContainer ? "100%" : data.daySize, props.fillContainer ? "100%" : data.daySize);
};
var StyledDay = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledDay",
  componentId: "sc-1y4xhmp-5"
})(["display:flex;justify-content:center;align-items:center;", " ", " ", " ", " ", " ", ""], function(props) {
  return daySizeStyle(props);
}, function(props) {
  return props.isSelected && backgroundStyle("control", props.theme) || props.inRange && backgroundStyle({
    color: "control",
    opacity: "weak"
  }, props.theme);
}, function(props) {
  return props.otherMonth && "opacity: 0.5;";
}, function(props) {
  return props.isSelected && "font-weight: bold;";
}, function(props) {
  return props.disabledProp && props.theme.button["default"] && kindPartStyles(props.theme.button.disabled, props.theme);
}, function(props) {
  return props.theme.calendar && props.theme.calendar.day && props.theme.calendar.day.extend;
});
StyledDay.defaultProps = {};
Object.setPrototypeOf(StyledDay.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Calendar/utils.js
var DAY_MILLISECONDS = 24 * 60 * 60 * 1e3;
var addDays = function addDays2(date, days) {
  var result = new Date(date.getTime() + DAY_MILLISECONDS * days);
  var hourDelta = result.getHours() - date.getHours();
  if (hourDelta === 23) {
    hourDelta -= 24;
  } else if (hourDelta === -23) {
    hourDelta += 24;
  }
  result.setHours(result.getHours() - hourDelta);
  return result;
};
var subtractDays = function subtractDays2(date, days) {
  return addDays(date, -days);
};
var addMonths = function addMonths2(date, months) {
  var result = new Date(date);
  var years = Math.floor((date.getMonth() + months) / 12);
  result.setFullYear(date.getFullYear() + years);
  var targetMonth = (date.getMonth() + months) % 12;
  result.setMonth(targetMonth < 0 ? 12 + targetMonth : targetMonth);
  return result;
};
var subtractMonths = function subtractMonths2(date, months) {
  return addMonths(date, -months);
};
var startOfMonth = function startOfMonth2(date) {
  var result = new Date(date);
  result.setDate(1);
  return result;
};
var endOfMonth = function endOfMonth2(date) {
  var result = addMonths(date, 1);
  result.setDate(0);
  return result;
};
var sameDay = function sameDay2(date1, date2) {
  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();
};
var sameDayOrAfter = function sameDayOrAfter2(date1, date2) {
  return date1.getFullYear() > date2.getFullYear() || date1.getFullYear() === date2.getFullYear() && (date1.getMonth() > date2.getMonth() || date1.getMonth() === date2.getMonth() && date1.getDate() >= date2.getDate());
};
var sameDayOrBefore = function sameDayOrBefore2(date1, date2) {
  return date1.getFullYear() < date2.getFullYear() || date1.getFullYear() === date2.getFullYear() && (date1.getMonth() < date2.getMonth() || date1.getMonth() === date2.getMonth() && date1.getDate() <= date2.getDate());
};
var daysApart = function daysApart2(date1, date2) {
  return Math.floor((date1.getTime() - date2.getTime()) / DAY_MILLISECONDS);
};
var formatToLocalYYYYMMDD = function formatToLocalYYYYMMDD2(date) {
  var adjustedDate = new Date(date);
  return new Date(adjustedDate.getTime() - adjustedDate.getTimezoneOffset() * 6e4).toISOString().split("T")[0];
};
var betweenDates = function betweenDates2(date, dates) {
  var result;
  if (dates) {
    var _dates$map = dates.map(function(d2) {
      return d2 ? new Date(d2) : void 0;
    }), from = _dates$map[0], to = _dates$map[1];
    if (from && sameDay(date, from) || to && sameDay(date, to)) {
      result = 2;
    } else if (from && sameDayOrAfter(date, from) && to && sameDayOrBefore(date, to)) {
      result = 1;
    }
  } else {
    result = 1;
  }
  return result;
};
var withinDates = function withinDates2(date, dates) {
  var result;
  if (dates) {
    if (Array.isArray(dates)) {
      dates.some(function(d2) {
        if (typeof d2 === "string") {
          if (sameDay(date, new Date(d2))) {
            result = 2;
          }
        } else {
          result = betweenDates(date, d2);
        }
        return result;
      });
    } else if (sameDay(date, new Date(dates))) {
      result = 2;
    }
  }
  return result;
};
var getTimestamp = function getTimestamp2(date) {
  return /T.*/.test(date) ? new Date(date).toISOString().split("T")[1] : false;
};
var normalizeForTimezone = function normalizeForTimezone2(value, timestamp) {
  var adjustedDate;
  var hourDelta;
  var valueOffset = 0;
  if (timestamp && typeof timestamp === "string") {
    hourDelta = parseInt(timestamp == null ? void 0 : timestamp.split(":")[0], 10);
    valueOffset = hourDelta * 60 * 60 * 1e3;
  }
  var localOffset = new Date().getTimezoneOffset() * 60 * 1e3;
  adjustedDate = value && (Array.isArray(value) ? value : [value]).map(function(v2) {
    return new Date(new Date(v2).getTime() - valueOffset + localOffset).toISOString();
  });
  if (typeof value === "string") {
    var _adjustedDate = adjustedDate;
    adjustedDate = _adjustedDate[0];
  }
  return adjustedDate;
};
var formatDateToPropStructure = function formatDateToPropStructure2(date, timestamp) {
  var adjustedDate;
  if (date) {
    if (timestamp)
      adjustedDate = formatToLocalYYYYMMDD(date).split("T")[0] + "T" + timestamp;
    else if (timestamp === false) {
      var _formatToLocalYYYYMMD = formatToLocalYYYYMMDD(date).split("T");
      adjustedDate = _formatToLocalYYYYMMD[0];
    } else
      adjustedDate = date;
  }
  return adjustedDate;
};

// node_modules/grommet/es6/components/Calendar/propTypes.js
var import_prop_types16 = __toESM(require_prop_types());
function _extends25() {
  _extends25 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends25.apply(this, arguments);
}
var PropType15 = {};
if (true) {
  PropType15 = _extends25({}, genericProps, {
    activeDate: import_prop_types16.default.oneOf(["start", "end"]),
    animate: import_prop_types16.default.bool,
    bounds: import_prop_types16.default.arrayOf(import_prop_types16.default.string),
    children: import_prop_types16.default.func,
    date: import_prop_types16.default.oneOfType([import_prop_types16.default.string, import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.string, import_prop_types16.default.arrayOf(import_prop_types16.default.string)]))]),
    dates: import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.string, import_prop_types16.default.arrayOf(import_prop_types16.default.string)])),
    disabled: import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.string, import_prop_types16.default.arrayOf(import_prop_types16.default.string)])),
    daysOfWeek: import_prop_types16.default.bool,
    fill: import_prop_types16.default.bool,
    firstDayOfWeek: import_prop_types16.default.oneOf([0, 1]),
    header: import_prop_types16.default.func,
    locale: import_prop_types16.default.string,
    messages: import_prop_types16.default.shape({
      previous: import_prop_types16.default.string,
      next: import_prop_types16.default.string
    }),
    onReference: import_prop_types16.default.func,
    onSelect: import_prop_types16.default.func,
    range: import_prop_types16.default.oneOfType([import_prop_types16.default.bool, import_prop_types16.default.oneOf(["array"])]),
    reference: import_prop_types16.default.string,
    showAdjacentDays: import_prop_types16.default.oneOfType([import_prop_types16.default.bool, import_prop_types16.default.oneOf(["trim"])]),
    size: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["small", "medium", "large"]), import_prop_types16.default.string])
  });
}
var CalendarPropTypes = PropType15;

// node_modules/grommet/es6/components/Calendar/Calendar.js
var _excluded15 = ["activeDate", "animate", "bounds", "children", "date", "dates", "daysOfWeek", "disabled", "initialFocus", "fill", "firstDayOfWeek", "header", "locale", "messages", "onReference", "onSelect", "range", "reference", "showAdjacentDays", "size", "timestamp"];
function _objectWithoutPropertiesLoose15(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends26() {
  _extends26 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends26.apply(this, arguments);
}
var headingPadMap = {
  small: "xsmall",
  medium: "small",
  large: "medium"
};
var activeDates = {
  start: "start",
  end: "end"
};
var timeStamp = /T.*/;
var formatSelectedDatesString = function formatSelectedDatesString2(date) {
  return "Currently selected\n  " + (date == null ? void 0 : date.map(function(item) {
    var dates;
    if (!Array.isArray(item)) {
      dates = formatToLocalYYYYMMDD(item) + " ";
    } else {
      var start = item[0] !== void 0 ? formatToLocalYYYYMMDD(item[0]) : "none";
      var end = item[1] !== void 0 ? formatToLocalYYYYMMDD(item[1]) : "none";
      dates = start + " through " + end;
    }
    return dates;
  }));
};
var getAccessibilityString = function getAccessibilityString2(date, dates) {
  if (date && !Array.isArray(date)) {
    return "Currently selected " + formatToLocalYYYYMMDD(date) + ";";
  }
  if (date && Array.isArray(date)) {
    return formatSelectedDatesString(date);
  }
  if (dates != null && dates.length) {
    return formatSelectedDatesString(dates);
  }
  return "No date selected";
};
var normalizeDate = function normalizeDate2(dateValue, timestamp) {
  if (typeof dateValue === "string") {
    return normalizeForTimezone(dateValue, timestamp);
  }
  if (Array.isArray(dateValue)) {
    if (Array.isArray(dateValue[0])) {
      var _dateValue$0$map = dateValue[0].map(function(day) {
        return normalizeForTimezone(day, timestamp) || void 0;
      }), from = _dateValue$0$map[0], to = _dateValue$0$map[1];
      return [[from, to]];
    }
    var dateArray = [];
    dateValue.forEach(function(d2) {
      if (Array.isArray(d2)) {
        var _d$map = d2.map(function(day) {
          return normalizeForTimezone(day, timestamp);
        }), _from = _d$map[0], _to = _d$map[1];
        dateArray.push([_from, _to]);
      } else {
        dateArray.push(normalizeForTimezone(d2, timestamp));
      }
    });
    return dateArray;
  }
  return void 0;
};
var normalizeReference = function normalizeReference2(reference, date, dates, timestamp) {
  var normalizedReference;
  if (reference) {
    normalizedReference = new Date(normalizeForTimezone(reference, timestamp));
  } else if (date) {
    if (typeof date === "string") {
      normalizedReference = new Date(date);
    } else if (Array.isArray(date)) {
      if (typeof date[0] === "string") {
        normalizedReference = new Date(date[0]);
      } else if (Array.isArray(date[0])) {
        normalizedReference = new Date(date[0][0] ? date[0][0] : date[0][1]);
      } else {
        normalizedReference = new Date();
        normalizedReference.setHours(0, 0, 0, 0);
      }
    }
  } else if (dates && dates.length > 0) {
    if (typeof dates[0] === "string") {
      normalizedReference = new Date(dates[0]);
    } else if (Array.isArray(dates[0])) {
      normalizedReference = new Date(dates[0][0] ? dates[0][0] : dates[0][1]);
    } else {
      normalizedReference = new Date();
      normalizedReference.setHours(0, 0, 0, 0);
    }
  } else {
    normalizedReference = new Date();
    normalizedReference.setHours(0, 0, 0, 0);
  }
  return normalizedReference;
};
var buildDisplayBounds = function buildDisplayBounds2(reference, firstDayOfWeek) {
  var start = new Date(reference);
  start.setDate(1);
  start = start.getDay() === 0 && firstDayOfWeek === 1 ? start = subtractDays(start, 6) : start = subtractDays(start, start.getDay() - firstDayOfWeek);
  var end = addDays(start, 7 * 5 + 7);
  return [start, end];
};
var millisecondsPerYear = 315576e5;
var CalendarDayButton = function CalendarDayButton2(props) {
  return import_react26.default.createElement(Button, _extends26({
    tabIndex: -1,
    plain: true
  }, props));
};
var CalendarDay = function CalendarDay2(_ref) {
  var children2 = _ref.children, fill = _ref.fill, size = _ref.size, isInRange = _ref.isInRange, isSelected = _ref.isSelected, otherMonth = _ref.otherMonth, _ref$buttonProps = _ref.buttonProps, buttonProps = _ref$buttonProps === void 0 ? {} : _ref$buttonProps;
  return import_react26.default.createElement(StyledDayContainer, {
    role: "gridcell",
    sizeProp: size,
    fillContainer: fill
  }, import_react26.default.createElement(CalendarDayButton, _extends26({
    fill
  }, buttonProps), import_react26.default.createElement(StyledDay, {
    disabledProp: buttonProps.disabled,
    inRange: isInRange,
    otherMonth,
    isSelected,
    sizeProp: size,
    fillContainer: fill
  }, children2)));
};
var CalendarCustomDay = function CalendarCustomDay2(_ref2) {
  var children2 = _ref2.children, fill = _ref2.fill, size = _ref2.size, buttonProps = _ref2.buttonProps;
  if (!buttonProps) {
    return import_react26.default.createElement(StyledDayContainer, {
      role: "gridcell",
      sizeProp: size,
      fillContainer: fill
    }, children2);
  }
  return import_react26.default.createElement(StyledDayContainer, {
    role: "gridcell",
    sizeProp: size,
    fillContainer: fill
  }, import_react26.default.createElement(CalendarDayButton, _extends26({
    fill
  }, buttonProps), children2));
};
var Calendar = (0, import_react26.forwardRef)(function(_ref3, ref) {
  var activeDateProp = _ref3.activeDate, _ref3$animate = _ref3.animate, animate = _ref3$animate === void 0 ? true : _ref3$animate, boundsProp = _ref3.bounds, children2 = _ref3.children, dateProp = _ref3.date, datesProp = _ref3.dates, daysOfWeek = _ref3.daysOfWeek, disabled = _ref3.disabled, initialFocus = _ref3.initialFocus, fill = _ref3.fill, _ref3$firstDayOfWeek = _ref3.firstDayOfWeek, firstDayOfWeek = _ref3$firstDayOfWeek === void 0 ? 0 : _ref3$firstDayOfWeek, header = _ref3.header, _ref3$locale = _ref3.locale, locale = _ref3$locale === void 0 ? "en-US" : _ref3$locale, messages = _ref3.messages, onReference = _ref3.onReference, onSelect = _ref3.onSelect, range = _ref3.range, referenceProp = _ref3.reference, _ref3$showAdjacentDay = _ref3.showAdjacentDays, showAdjacentDays = _ref3$showAdjacentDay === void 0 ? true : _ref3$showAdjacentDay, _ref3$size = _ref3.size, size = _ref3$size === void 0 ? "medium" : _ref3$size, timestampProp = _ref3.timestamp, rest = _objectWithoutPropertiesLoose15(_ref3, _excluded15);
  var theme = (0, import_react26.useContext)(Ge) || defaultProps2.theme;
  var announce = (0, import_react26.useContext)(AnnounceContext);
  var _useContext = (0, import_react26.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react26.useState)(false), mouseDown = _useState[0], setMouseDown = _useState[1];
  var onMouseDown = function onMouseDown2() {
    return setMouseDown(true);
  };
  var onMouseUp = function onMouseUp2() {
    return setMouseDown(false);
  };
  (0, import_react26.useEffect)(function() {
    document.addEventListener("mousedown", onMouseDown);
    document.addEventListener("mouseup", onMouseUp);
    return function() {
      document.removeEventListener("mousedown", onMouseDown);
      document.removeEventListener("mouseup", onMouseUp);
    };
  }, []);
  var _useState2 = (0, import_react26.useState)(dateProp && typeof dateProp === "string" && range ? activeDates.end : activeDates.start), activeDate = _useState2[0], setActiveDate = _useState2[1];
  (0, import_react26.useEffect)(function() {
    if (activeDateProp)
      setActiveDate(activeDateProp);
  }, [activeDateProp]);
  var timestamp = (0, import_react26.useMemo)(function() {
    return timestampProp;
  }, [timestampProp]);
  if (timestampProp === void 0) {
    if (Array.isArray(dateProp) && dateProp.length) {
      if (Array.isArray(dateProp[0])) {
        timestamp = getTimestamp(dateProp[0][0]);
      } else
        timestamp = getTimestamp(dateProp[0]);
    } else if (typeof dateProp === "string" && dateProp.length) {
      timestamp = getTimestamp(dateProp);
    } else if (Array.isArray(datesProp) && datesProp.length) {
      if (Array.isArray(datesProp[0])) {
        timestamp = getTimestamp(datesProp[0][0]);
      } else
        timestamp = getTimestamp(datesProp[0]);
    } else if (typeof datesProp === "string") {
      timestamp = getTimestamp(datesProp);
    } else if (typeof referenceProp === "string") {
      timestamp = getTimestamp(referenceProp);
    }
  }
  var normalizedDate = (0, import_react26.useMemo)(function() {
    return timestampProp === void 0 ? normalizeDate(dateProp, timestamp) : dateProp;
  }, [dateProp, timestamp, timestampProp]);
  var normalizedDates = (0, import_react26.useMemo)(function() {
    return timestampProp === void 0 ? normalizeDate(datesProp, timestamp) : datesProp;
  }, [datesProp, timestamp, timestampProp]);
  var _useState3 = (0, import_react26.useState)(normalizedDate), date = _useState3[0], setDate = _useState3[1];
  (0, import_react26.useEffect)(function() {
    setDate(normalizedDate);
  }, [normalizedDate]);
  var _useState4 = (0, import_react26.useState)(normalizedDates), dates = _useState4[0], setDates = _useState4[1];
  (0, import_react26.useEffect)(function() {
    setDates(normalizedDates);
  }, [normalizedDates]);
  var _useState5 = (0, import_react26.useState)(normalizeReference(referenceProp, normalizedDate, normalizedDates, timestamp)), reference = _useState5[0], setReference = _useState5[1];
  (0, import_react26.useEffect)(function() {
    return setReference(normalizeReference(referenceProp, normalizedDate, normalizedDates, timestamp));
  }, [referenceProp, normalizedDate, normalizedDates, timestamp]);
  var _useState6 = (0, import_react26.useState)(boundsProp), bounds2 = _useState6[0], setBounds = _useState6[1];
  (0, import_react26.useEffect)(function() {
    if (boundsProp)
      setBounds(boundsProp);
    else
      setBounds(void 0);
  }, [boundsProp]);
  var _useState7 = (0, import_react26.useState)(buildDisplayBounds(reference, firstDayOfWeek)), displayBounds = _useState7[0], setDisplayBounds = _useState7[1];
  var _useState8 = (0, import_react26.useState)(), targetDisplayBounds = _useState8[0], setTargetDisplayBounds = _useState8[1];
  var _useState9 = (0, import_react26.useState)(), slide = _useState9[0], setSlide = _useState9[1];
  var _useState10 = (0, import_react26.useState)(), animating = _useState10[0], setAnimating = _useState10[1];
  (0, import_react26.useEffect)(function() {
    var nextDisplayBounds = buildDisplayBounds(reference, firstDayOfWeek);
    if (nextDisplayBounds[0].getTime() !== displayBounds[0].getTime() && nextDisplayBounds[1].getTime() !== displayBounds[1].getTime()) {
      var diffBoundsAboveYear = false;
      if (nextDisplayBounds[0].getTime() < displayBounds[0].getTime()) {
        if (displayBounds[0].getTime() - nextDisplayBounds[0].getTime() > millisecondsPerYear) {
          diffBoundsAboveYear = true;
        }
      } else if (nextDisplayBounds[1].getTime() > displayBounds[1].getTime()) {
        if (nextDisplayBounds[1].getTime() - displayBounds[1].getTime() > millisecondsPerYear) {
          diffBoundsAboveYear = true;
        }
      }
      if (!animate || diffBoundsAboveYear) {
        setDisplayBounds(nextDisplayBounds);
      } else {
        setTargetDisplayBounds(nextDisplayBounds);
      }
    }
  }, [animate, firstDayOfWeek, reference, displayBounds]);
  (0, import_react26.useEffect)(function() {
    if (targetDisplayBounds) {
      if (targetDisplayBounds[0].getTime() < displayBounds[0].getTime()) {
        if (displayBounds[0].getTime() - targetDisplayBounds[0].getTime() < millisecondsPerYear) {
          setDisplayBounds([targetDisplayBounds[0], displayBounds[1]]);
          setSlide({
            direction: "down",
            weeks: daysApart(displayBounds[0], targetDisplayBounds[0]) / 7
          });
          setAnimating(true);
        }
      } else if (targetDisplayBounds[1].getTime() > displayBounds[1].getTime()) {
        if (targetDisplayBounds[1].getTime() - displayBounds[1].getTime() < millisecondsPerYear) {
          setDisplayBounds([displayBounds[0], targetDisplayBounds[1]]);
          setSlide({
            direction: "up",
            weeks: daysApart(targetDisplayBounds[1], displayBounds[1]) / 7
          });
          setAnimating(true);
        }
      }
      return void 0;
    }
    setSlide(void 0);
    return void 0;
  }, [animating, displayBounds, targetDisplayBounds]);
  (0, import_react26.useEffect)(function() {
    if (animating && targetDisplayBounds) {
      var timer = setTimeout(function() {
        setDisplayBounds(targetDisplayBounds);
        setTargetDisplayBounds(void 0);
        setSlide(void 0);
        setAnimating(false);
      }, 400);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [animating, targetDisplayBounds]);
  var previousMonth = (0, import_react26.useMemo)(function() {
    return endOfMonth(subtractMonths(startOfMonth(reference), 1));
  }, [reference]);
  var nextMonth = (0, import_react26.useMemo)(function() {
    return startOfMonth(addMonths(startOfMonth(reference), 1));
  }, [reference]);
  var daysRef = (0, import_react26.useRef)();
  var _useState11 = (0, import_react26.useState)(), focus = _useState11[0], setFocus = _useState11[1];
  var _useState12 = (0, import_react26.useState)(), active = _useState12[0], setActive = _useState12[1];
  (0, import_react26.useEffect)(function() {
    if (initialFocus === "days")
      daysRef.current.focus();
  }, [initialFocus]);
  var changeReference = (0, import_react26.useCallback)(function(nextReference) {
    if (betweenDates(nextReference, bounds2)) {
      setReference(nextReference);
      if (onReference)
        onReference(nextReference.toISOString());
    }
  }, [onReference, bounds2]);
  var selectDate = (0, import_react26.useCallback)(function(selectedDate) {
    var nextDates;
    var nextDate;
    var adjustedDate;
    if (!range) {
      nextDate = formatDateToPropStructure(selectedDate, timestamp);
      if (datesProp) {
        datesProp.forEach(function(d2) {
          if (!timeStamp.test(d2)) {
            adjustedDate = formatToLocalYYYYMMDD(nextDate);
            if (d2 === adjustedDate) {
              nextDate = void 0;
            } else {
              adjustedDate = void 0;
            }
          }
        });
      } else if (typeof dateProp === "string") {
        if (!timeStamp.test(dateProp)) {
          adjustedDate = formatToLocalYYYYMMDD(selectedDate);
          if (dateProp === adjustedDate) {
            nextDate = void 0;
          } else {
            adjustedDate = void 0;
          }
        }
      } else if (Array.isArray(dateProp)) {
        dateProp.forEach(function(d2) {
          if (!timeStamp.test(d2)) {
            adjustedDate = formatToLocalYYYYMMDD(nextDate);
            if (d2 === adjustedDate) {
              nextDate = void 0;
            } else {
              adjustedDate = void 0;
            }
          }
        });
      } else {
        adjustedDate = void 0;
      }
    } else if (!dates && !Array.isArray(date)) {
      if (date) {
        var priorDate = new Date(date);
        var selDate = new Date(selectedDate);
        if (activeDate === activeDates.start) {
          if (selDate.getTime() > priorDate.getTime()) {
            nextDates = [[selectedDate, void 0]];
          } else {
            nextDates = [[selectedDate, date]];
          }
          setActiveDate(activeDates.end);
          if (activeDateProp)
            setActiveDate(activeDateProp);
        } else if (activeDate === activeDates.end) {
          if (selDate.getTime() < priorDate.getTime()) {
            nextDates = [[selectedDate, void 0]];
            setActiveDate(activeDates.end);
          } else {
            nextDates = [[date, selectedDate]];
            setActiveDate(activeDates.start);
          }
          if (activeDateProp)
            setActiveDate(activeDateProp);
        }
      } else if (activeDate === activeDates.start) {
        nextDates = [[selectedDate, void 0]];
        setActiveDate(activeDates.end);
      } else if (activeDate === activeDates.end) {
        nextDates = [[void 0, selectedDate]];
      }
      if (activeDateProp)
        setActiveDate(activeDateProp);
    } else if (dates || date) {
      var handleSelection = function handleSelection2(dateValue) {
        var priorDates = dateValue[0].map(function(d2) {
          return new Date(d2);
        });
        var selDate2 = new Date(selectedDate);
        if (selDate2.getTime() === priorDates[0].getTime()) {
          nextDates = [[void 0, dateValue[0][1]]];
          setActiveDate(activeDates.start);
        } else if (selDate2.getTime() === priorDates[1].getTime()) {
          nextDates = [[dateValue[0][0], void 0]];
          setActiveDate(activeDates.end);
          if (activeDateProp)
            setActiveDate(activeDateProp);
        } else if (activeDate === activeDates.start) {
          if (selDate2.getTime() > priorDates[1].getTime()) {
            nextDates = [[selectedDate, void 0]];
          } else {
            nextDates = [[selectedDate, dateValue[0][1]]];
          }
          setActiveDate(activeDates.end);
          if (activeDateProp)
            setActiveDate(activeDateProp);
        } else if (activeDate === activeDates.end) {
          if (selDate2.getTime() < priorDates[0].getTime()) {
            nextDates = [[selectedDate, void 0]];
            setActiveDate(activeDates.end);
          } else {
            nextDates = [[dateValue[0][0], selectedDate]];
            setActiveDate(activeDates.start);
          }
          if (activeDateProp)
            setActiveDate(activeDateProp);
        }
        if (!nextDates[0][0] && !nextDates[0][1])
          nextDates = void 0;
      };
      if (dates) {
        handleSelection(dates);
      } else if (date && Array.isArray(date)) {
        handleSelection(date);
      }
    }
    setDates(nextDates);
    if (date && typeof date === "string") {
      setDate(normalizeForTimezone(nextDate, timestamp));
    } else if (date && Array.isArray(date)) {
      setDate(nextDates);
    }
    setActive(new Date(selectedDate));
    if (onSelect) {
      var adjustedDates;
      if (nextDates && Array.isArray(nextDates[0]) && (!nextDates[0][0] || !nextDates[0][1]) && range === true) {
        var _nextDates$0$filter = nextDates[0].filter(function(d2) {
          return d2;
        });
        adjustedDates = _nextDates$0$filter[0];
        adjustedDates = formatDateToPropStructure(adjustedDates, timestamp);
      } else if (nextDates) {
        adjustedDates = [[formatDateToPropStructure(nextDates[0][0], timestamp), formatDateToPropStructure(nextDates[0][1], timestamp)]];
      }
      onSelect(adjustedDates || adjustedDate || nextDate);
    }
  }, [activeDate, activeDateProp, date, dateProp, dates, datesProp, onSelect, range, timestamp]);
  var renderCalendarHeader = function renderCalendarHeader2() {
    var PreviousIcon = size === "small" ? theme.calendar.icons.small.previous : theme.calendar.icons.previous;
    var NextIcon = size === "small" ? theme.calendar.icons.small.next : theme.calendar.icons.next;
    return import_react26.default.createElement(Box, {
      direction: "row",
      justify: "between",
      align: "center"
    }, import_react26.default.createElement(Box, {
      flex: true,
      pad: {
        horizontal: headingPadMap[size] || "small"
      }
    }, import_react26.default.createElement(Heading, {
      level: size === "small" ? theme.calendar.heading && theme.calendar.heading.level || 4 : (theme.calendar.heading && theme.calendar.heading.level || 4) - 1,
      size,
      margin: "none"
    }, reference.toLocaleDateString(locale, {
      month: "long",
      year: "numeric"
    }))), import_react26.default.createElement(Box, {
      flex: false,
      direction: "row",
      align: "center"
    }, import_react26.default.createElement(Button, {
      a11yTitle: format3({
        id: "calendar.previous",
        messages,
        values: {
          date: previousMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }),
      icon: import_react26.default.createElement(PreviousIcon, {
        size: size !== "small" ? size : void 0
      }),
      disabled: !betweenDates(previousMonth, bounds2),
      onClick: function onClick() {
        changeReference(previousMonth);
        announce(format3({
          id: "calendar.previousMove",
          messages,
          values: {
            date: previousMonth.toLocaleDateString(locale, {
              month: "long",
              year: "numeric"
            })
          }
        }));
      }
    }), import_react26.default.createElement(Button, {
      a11yTitle: format3({
        id: "calendar.next",
        messages,
        values: {
          date: nextMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }),
      icon: import_react26.default.createElement(NextIcon, {
        size: size !== "small" ? size : void 0
      }),
      disabled: !betweenDates(nextMonth, bounds2),
      onClick: function onClick() {
        changeReference(nextMonth);
        announce(format3({
          id: "calendar.nextMove",
          messages,
          values: {
            date: nextMonth.toLocaleDateString(locale, {
              month: "long",
              year: "numeric"
            })
          }
        }));
      }
    })));
  };
  var renderDaysOfWeek = function renderDaysOfWeek2() {
    var day2 = new Date(displayBounds[0]);
    var days2 = [];
    while (days2.length < 7) {
      days2.push(import_react26.default.createElement(StyledDayContainer, {
        role: "gridcell",
        key: days2.length,
        sizeProp: size,
        fillContainer: fill
      }, import_react26.default.createElement(StyledDay, {
        otherMonth: true,
        sizeProp: size,
        fillContainer: fill
      }, day2.toLocaleDateString(locale, {
        weekday: "narrow"
      }))));
      day2 = addDays(day2, 1);
    }
    return import_react26.default.createElement(StyledWeek, {
      role: "row"
    }, days2);
  };
  var weeks = [];
  var day = new Date(displayBounds[0]);
  var days;
  var firstDayInMonth;
  var blankWeek = false;
  while (day.getTime() < displayBounds[1].getTime()) {
    if (day.getDay() === firstDayOfWeek) {
      if (days) {
        weeks.push(import_react26.default.createElement(StyledWeek, {
          role: "row",
          key: day.getTime(),
          fillContainer: fill
        }, days));
      }
      days = [];
    }
    var otherMonth = day.getMonth() !== reference.getMonth();
    if (!showAdjacentDays && otherMonth) {
      days.push(import_react26.default.createElement(StyledDayContainer, {
        key: day.getTime(),
        sizeProp: size,
        fillContainer: fill
      }, import_react26.default.createElement(StyledDay, {
        sizeProp: size,
        fillContainer: fill
      })));
      if (weeks.length === 5 && days.length < day.getDate()) {
        blankWeek = true;
      }
    } else if (showAdjacentDays === "trim" && otherMonth && weeks.length === 5 && days.length < day.getDate()) {
      blankWeek = true;
      days.push(import_react26.default.createElement(StyledDayContainer, {
        key: day.getTime(),
        sizeProp: size,
        fillContainer: fill
      }, import_react26.default.createElement(StyledDay, {
        sizeProp: size,
        fillContainer: fill
      })));
    } else {
      (function() {
        var dateString = day.toISOString();
        var selected = false;
        var inRange = false;
        var selectedState = withinDates(day, date || dates);
        if (selectedState === 2) {
          selected = true;
        } else if (selectedState === 1) {
          inRange = true;
        }
        var dayDisabled = withinDates(day, disabled) || bounds2 && !betweenDates(day, bounds2);
        if (!firstDayInMonth && !dayDisabled && day.getMonth() === reference.getMonth()) {
          firstDayInMonth = dateString;
        }
        if (!children2) {
          days.push(import_react26.default.createElement(CalendarDay, {
            key: day.getTime(),
            buttonProps: {
              a11yTitle: day.toDateString(),
              active: active && active.getTime() === day.getTime(),
              disabled: dayDisabled && !!dayDisabled,
              onClick: function onClick() {
                selectDate(dateString);
                announce("Selected " + formatToLocalYYYYMMDD(dateString), "assertive");
                daysRef.current.focus();
                setActive(new Date(dateString));
              },
              onMouseOver: function onMouseOver() {
                return setActive(new Date(dateString));
              },
              onMouseOut: function onMouseOut() {
                return setActive(void 0);
              }
            },
            isInRange: inRange,
            isSelected: selected,
            otherMonth: day.getMonth() !== reference.getMonth(),
            size,
            fill
          }, day.getDate()));
        } else {
          days.push(import_react26.default.createElement(CalendarCustomDay, {
            key: day.getTime(),
            buttonProps: onSelect ? {
              a11yTitle: day.toDateString(),
              active: active && active.getTime() === day.getTime(),
              disabled: dayDisabled && !!dayDisabled,
              onClick: function onClick() {
                selectDate(dateString);
                announce("Selected\n                          " + formatToLocalYYYYMMDD(dateString), "assertive");
                daysRef.current.focus();
                setActive(new Date(dateString));
              },
              onMouseOver: function onMouseOver() {
                return setActive(new Date(dateString));
              },
              onMouseOut: function onMouseOut() {
                return setActive(void 0);
              }
            } : null,
            size,
            fill
          }, children2({
            date: day,
            day: day.getDate(),
            isInRange: inRange,
            isSelected: selected
          })));
        }
      })();
    }
    day = addDays(day, 1);
  }
  weeks.push(import_react26.default.createElement(StyledWeek, {
    role: !blankWeek ? "row" : void 0,
    key: day.getTime(),
    fillContainer: fill
  }, days));
  return import_react26.default.createElement(StyledCalendar, _extends26({
    ref,
    sizeProp: size,
    fillContainer: fill
  }, rest), import_react26.default.createElement(Box, {
    fill
  }, header ? header({
    date: reference,
    locale,
    onPreviousMonth: function onPreviousMonth() {
      changeReference(previousMonth);
      announce(format3({
        id: "calendar.previous",
        messages,
        values: {
          date: previousMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }));
    },
    onNextMonth: function onNextMonth() {
      changeReference(nextMonth);
      announce(format3({
        id: "calendar.next",
        messages,
        values: {
          date: nextMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }));
    },
    previousInBound: betweenDates(previousMonth, bounds2),
    nextInBound: betweenDates(nextMonth, bounds2)
  }) : renderCalendarHeader(previousMonth, nextMonth), daysOfWeek && renderDaysOfWeek(), import_react26.default.createElement(Keyboard, {
    onEnter: function onEnter() {
      return active !== void 0 ? selectDate(active.toISOString()) : void 0;
    },
    onUp: function onUp(event) {
      event.preventDefault();
      event.stopPropagation();
      setActive(addDays(active, -7));
      if (!betweenDates(addDays(active, -7), displayBounds)) {
        changeReference(addDays(active, -7));
      }
    },
    onDown: function onDown(event) {
      event.preventDefault();
      event.stopPropagation();
      setActive(addDays(active, 7));
      if (!betweenDates(addDays(active, 7), displayBounds)) {
        changeReference(active);
      }
    },
    onLeft: function onLeft() {
      setActive(addDays(active, -1));
      if (!betweenDates(addDays(active, -1), displayBounds)) {
        changeReference(active);
      }
    },
    onRight: function onRight() {
      setActive(addDays(active, 1));
      if (!betweenDates(addDays(active, 2), displayBounds)) {
        changeReference(active);
      }
    }
  }, import_react26.default.createElement(StyledWeeksContainer, {
    tabIndex: 0,
    role: "grid",
    "aria-label": "\n                " + reference.toLocaleDateString(locale, {
      month: "long",
      year: "numeric"
    }) + ";\n                " + getAccessibilityString(date, dates) + "\n              ",
    ref: daysRef,
    sizeProp: size,
    fillContainer: fill,
    focus,
    onFocus: function onFocus() {
      setFocus(true);
      if (!mouseDown) {
        setActive(new Date(firstDayInMonth));
      }
    },
    onBlur: function onBlur() {
      setFocus(false);
      setActive(void 0);
    }
  }, import_react26.default.createElement(StyledWeeks, {
    slide,
    sizeProp: size,
    fillContainer: fill
  }, weeks)))));
});
Calendar.displayName = "Calendar";
Calendar.propTypes = CalendarPropTypes;

// node_modules/grommet/es6/components/Card/Card.js
var import_react27 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends27() {
  _extends27 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends27.apply(this, arguments);
}
var Card = (0, import_react27.forwardRef)(function(_ref, ref) {
  var _theme$card$hover;
  var rest = _extends27({}, _ref);
  var theme = (0, import_react27.useContext)(Ge) || defaultProps2.theme;
  return import_react27.default.createElement(Box, _extends27({
    overflow: "hidden",
    kind: _extends27({
      hover: (_theme$card$hover = theme.card.hover) == null ? void 0 : _theme$card$hover.container
    }, theme.card.container),
    ref
  }, theme.card.container, rest));
});
Card.displayName = "Card";

// node_modules/grommet/es6/components/CardBody/CardBody.js
var import_react28 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends28() {
  _extends28 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends28.apply(this, arguments);
}
var CardBody = function CardBody2(_ref) {
  var rest = _extends28({}, _ref);
  var theme = (0, import_react28.useContext)(Ge) || defaultProps2.theme;
  return import_react28.default.createElement(Box, _extends28({
    flex: true
  }, theme.card.body, rest));
};

// node_modules/grommet/es6/components/CardFooter/CardFooter.js
var import_react30 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Footer/Footer.js
var import_react29 = __toESM(require_react());
function _extends29() {
  _extends29 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends29.apply(this, arguments);
}
var Footer = function Footer2(_ref) {
  var rest = _extends29({}, _ref);
  return import_react29.default.createElement(Box, _extends29({
    as: "footer",
    align: "center",
    direction: "row",
    flex: false,
    gap: "medium",
    justify: "between"
  }, rest));
};

// node_modules/grommet/es6/components/CardFooter/CardFooter.js
function _extends30() {
  _extends30 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends30.apply(this, arguments);
}
var CardFooter = function CardFooter2(_ref) {
  var rest = _extends30({}, _ref);
  var theme = (0, import_react30.useContext)(Ge) || defaultProps2.theme;
  return import_react30.default.createElement(Footer, _extends30({}, theme.card.footer, rest));
};

// node_modules/grommet/es6/components/CardHeader/CardHeader.js
var import_react32 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Header/Header.js
var import_react31 = __toESM(require_react());
function _extends31() {
  _extends31 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends31.apply(this, arguments);
}
var Header = import_react31.default.forwardRef(function(_ref, ref) {
  var rest = _extends31({}, _ref);
  return import_react31.default.createElement(Box, _extends31({
    align: "center",
    as: "header",
    direction: "row",
    flex: false,
    justify: "between",
    gap: "medium"
  }, rest, {
    ref
  }));
});
Header.displayName = "Header";

// node_modules/grommet/es6/components/CardHeader/CardHeader.js
function _extends32() {
  _extends32 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends32.apply(this, arguments);
}
var CardHeader = function CardHeader2(_ref) {
  var rest = _extends32({}, _ref);
  var theme = (0, import_react32.useContext)(Ge) || defaultProps2.theme;
  return import_react32.default.createElement(Header, _extends32({}, theme.card.header, rest));
};

// node_modules/grommet/es6/components/Carousel/Carousel.js
var import_react36 = __toESM(require_react());

// node_modules/grommet/es6/contexts/ResponsiveContext/ResponsiveContext.js
var import_react33 = __toESM(require_react());

// node_modules/grommet/es6/contexts/ResponsiveContext/propTypes.js
var import_prop_types17 = __toESM(require_prop_types());
var PropType16 = {};
if (true) {
  PropType16 = {
    children: import_prop_types17.default.func
  };
}
var ResponsiveContextPropTypes = PropType16;

// node_modules/grommet/es6/contexts/ResponsiveContext/ResponsiveContext.js
var ResponsiveContext = import_react33.default.createContext(void 0);
ResponsiveContext.propTypes = ResponsiveContextPropTypes;

// node_modules/grommet/es6/contexts/ThemeContext/ThemeContext.js
var import_react34 = __toESM(require_react());
var import_prop_types19 = __toESM(require_prop_types());
init_styled_components_browser_esm();

// node_modules/grommet/es6/contexts/ThemeContext/propTypes.js
var import_prop_types18 = __toESM(require_prop_types());
var PropType17 = {};
if (true) {
  PropType17 = {
    value: import_prop_types18.default.shape({})
  };
}
var ThemeContextPropTypes = PropType17;

// node_modules/grommet/es6/contexts/ThemeContext/ThemeContext.js
Ge.Extend = function(_ref) {
  var children2 = _ref.children, value = _ref.value;
  return import_react34.default.createElement(Ge.Consumer, null, function(theme) {
    return import_react34.default.createElement(Ge.Provider, {
      value: deepMerge(theme, value)
    }, children2);
  });
};
Ge.Extend.propTypes = {
  children: import_prop_types19.default.node.isRequired,
  value: import_prop_types19.default.shape({}).isRequired
};
Ge.propTypes = ThemeContextPropTypes;

// node_modules/grommet/es6/components/Carousel/StyledCarousel.js
init_styled_components_browser_esm();
var StyledCarouselContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCarousel__StyledCarouselContainer",
  componentId: "sc-c2hjel-0"
})(["position:relative;overflow:hidden;"]);
var animationKeyframes = {
  slideRightPrevious: Ue(["0%{transform:translateX(0%)}100%{transform:translateX(100%)}"]),
  slideRightCurrent: Ue(["0%{transform:translateX(-100%)}100%{transform:translateX(0%)}"]),
  slideLeftPrevious: Ue(["0%{transform:translateX(0%)}100%{transform:translateX(-100%)}"]),
  slideLeftCurrent: Ue(["0%{transform:translateX(100%)}100%{transform:translateX(0%)}"])
};
var StyledCarouselChild = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCarousel__StyledCarouselChild",
  componentId: "sc-c2hjel-1"
})(["visibility:", ";position:", ";width:100%;height:100%;overflow:hidden;", ";animation-fill-mode:both;"], function(props) {
  return props.visibilityProp;
}, function(props) {
  return props.positionProp;
}, function(props) {
  return props.animationType ? Ce(["animation:", " ", "s ease-in-out;"], animationKeyframes[props.animationType], props.animationDuration / 1e3) : "";
});
var StyledControl = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCarousel__StyledControl",
  componentId: "sc-c2hjel-2"
})(["position:absolute;z-index:1;", " align-items:center;justify-content:center;"], function(props) {
  return props.offsetProp + ": 0;";
});

// node_modules/grommet/es6/components/Carousel/CarouselChild.js
var import_react35 = __toESM(require_react());

// node_modules/grommet/es6/components/Carousel/propTypes.js
var import_prop_types20 = __toESM(require_prop_types());
function _extends33() {
  _extends33 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends33.apply(this, arguments);
}
var CarouselPropType;
if (true) {
  CarouselPropType = _extends33({}, genericProps, {
    activeChild: import_prop_types20.default.number,
    initialChild: import_prop_types20.default.number,
    fill: import_prop_types20.default.bool,
    wrap: import_prop_types20.default.bool,
    controls: import_prop_types20.default.oneOfType([import_prop_types20.default.oneOf(["arrows", "selectors"]), import_prop_types20.default.bool]),
    onChild: import_prop_types20.default.func,
    width: widthPropType,
    height: heightPropType,
    play: import_prop_types20.default.number
  });
}
var CarouselPropTypes = CarouselPropType;
var CarouselChildPropType;
if (true) {
  CarouselChildPropType = {
    animationDuration: import_prop_types20.default.number.isRequired,
    fill: import_prop_types20.default.bool,
    index: import_prop_types20.default.number.isRequired,
    activeIndex: import_prop_types20.default.number.isRequired,
    priorActiveIndex: import_prop_types20.default.number,
    direction: import_prop_types20.default.oneOf(["left", "right"])
  };
}
var CarouselChildPropTypes = CarouselChildPropType;

// node_modules/grommet/es6/components/Carousel/CarouselChild.js
var CarouselChild = function CarouselChild2(_ref) {
  var animationDuration2 = _ref.animationDuration, fill = _ref.fill, index = _ref.index, activeIndex = _ref.activeIndex, priorActiveIndex = _ref.priorActiveIndex, direction = _ref.direction, children2 = _ref.children;
  var _useState = (0, import_react35.useState)(void 0), animation = _useState[0], setAnimation = _useState[1];
  var _useState2 = (0, import_react35.useState)(index === activeIndex ? "visible" : "hidden"), visibility = _useState2[0], setVisibility = _useState2[1];
  (0, import_react35.useEffect)(function() {
    var timer;
    if (index === activeIndex) {
      if (priorActiveIndex !== void 0) {
        setAnimation(direction === "left" ? "slideLeftCurrent" : "slideRightCurrent");
      }
      setVisibility("visible");
    } else if (index === priorActiveIndex) {
      setAnimation(direction === "left" ? "slideLeftPrevious" : "slideRightPrevious");
      timer = setTimeout(function() {
        return setVisibility("hidden");
      }, animationDuration2);
    }
    return function() {
      return clearTimeout(timer);
    };
  }, [activeIndex, priorActiveIndex, index, direction, animationDuration2]);
  var position = index === 0 ? "relative" : "absolute";
  return import_react35.default.createElement(StyledCarouselChild, {
    fill,
    visibilityProp: visibility,
    positionProp: position,
    animationType: animation,
    animationDuration: animationDuration2
  }, import_react35.default.createElement(Box, {
    fill
  }, children2));
};
CarouselChild.propTypes = CarouselChildPropTypes;
CarouselChild.defaultProps = {
  fill: false,
  play: void 0,
  priorActiveIndex: void 0
};

// node_modules/grommet/es6/components/Carousel/Carousel.js
var _excluded16 = ["activeChild", "initialChild", "onChild", "play", "children", "controls", "height", "fill", "width", "onFocus", "onBlur", "wrap"];
function _extends34() {
  _extends34 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends34.apply(this, arguments);
}
function _objectWithoutPropertiesLoose16(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Carousel = function Carousel2(_ref) {
  var activeChild = _ref.activeChild, initialChild = _ref.initialChild, onChild = _ref.onChild, play = _ref.play, children2 = _ref.children, controls = _ref.controls, height = _ref.height, fill = _ref.fill, width = _ref.width, onFocus = _ref.onFocus, onBlur = _ref.onBlur, wrap = _ref.wrap, rest = _objectWithoutPropertiesLoose16(_ref, _excluded16);
  var theme = (0, import_react36.useContext)(Ge) || defaultProps2.theme;
  var _useContext = (0, import_react36.useContext)(MessageContext), format3 = _useContext.format;
  var timerRef = (0, import_react36.useRef)();
  var animationDuration2 = (0, import_react36.useMemo)(function() {
    return play && play < theme.carousel.animation.duration ? play : theme.carousel.animation.duration;
  }, [play, theme.carousel.animation.duration]);
  var _useState = (0, import_react36.useState)({
    activeIndex: activeChild !== void 0 ? activeChild : initialChild
  }), indexes = _useState[0], setIndexes = _useState[1];
  var _useState2 = (0, import_react36.useState)(activeChild), activeChildState = _useState2[0], setActiveChildState = _useState2[1];
  var _useState3 = (0, import_react36.useState)(), direction = _useState3[0], setDirection = _useState3[1];
  var _useState4 = (0, import_react36.useState)(false), inTransition = _useState4[0], setInTransition = _useState4[1];
  var activeIndex = indexes.activeIndex, priorActiveIndex = indexes.priorActiveIndex;
  var lastIndex = import_react36.Children.count(children2) - 1;
  var onChildChange = (0, import_react36.useCallback)(function(index) {
    if (onChild) {
      onChild(index);
    }
  }, [onChild]);
  var onRight = (0, import_react36.useCallback)(function() {
    if (inTransition)
      return;
    clearInterval(timerRef.current);
    var nextActiveIndex = activeIndex < lastIndex ? activeIndex + 1 : 0;
    setIndexes({
      activeIndex: nextActiveIndex,
      priorActiveIndex: activeIndex
    });
    setInTransition(true);
    setDirection("left");
    onChildChange(nextActiveIndex);
  }, [activeIndex, inTransition, lastIndex, onChildChange]);
  var onLeft = (0, import_react36.useCallback)(function() {
    if (inTransition)
      return;
    clearInterval(timerRef.current);
    var nextActiveIndex = activeIndex === 0 ? lastIndex : activeIndex - 1;
    setIndexes({
      activeIndex: nextActiveIndex,
      priorActiveIndex: activeIndex
    });
    setInTransition(true);
    setDirection("right");
    onChildChange(nextActiveIndex);
  }, [activeIndex, inTransition, lastIndex, onChildChange]);
  var onSelect = (0, import_react36.useCallback)(function(index) {
    return function() {
      if (!inTransition && activeIndex !== index) {
        clearInterval(timerRef.current);
        setIndexes({
          activeIndex: index,
          priorActiveIndex: activeIndex
        });
        setInTransition(true);
        setDirection(index > activeIndex ? "left" : "right");
        onChildChange(index);
      }
    };
  }, [activeIndex, inTransition, onChildChange]);
  var onControlledNavigation = (0, import_react36.useCallback)(function() {
    if (inTransition || activeChild === activeChildState || activeChild === activeIndex || activeChild === void 0 || activeChild < 0 || activeChild > lastIndex)
      return;
    setDirection(activeChild > activeIndex ? "left" : "right");
    setInTransition(true);
    setIndexes({
      activeIndex: activeChild,
      priorActiveIndex: activeIndex
    });
    setActiveChildState(activeChild);
    onChildChange(activeChild);
  }, [activeChild, activeChildState, activeIndex, inTransition, lastIndex, onChildChange]);
  (0, import_react36.useEffect)(function() {
    var transitionTimer;
    if (inTransition) {
      transitionTimer = setTimeout(function() {
        setInTransition(false);
      }, animationDuration2);
    }
    return function() {
      return clearTimeout(transitionTimer);
    };
  }, [inTransition, setInTransition, animationDuration2]);
  (0, import_react36.useEffect)(function() {
    if (play && (wrap !== false || activeIndex < lastIndex)) {
      var timer = setInterval(function() {
        var nextActiveIndex = activeIndex < lastIndex ? activeIndex + 1 : 0;
        setIndexes({
          activeIndex: nextActiveIndex,
          priorActiveIndex: activeIndex
        });
        setInTransition(true);
        setDirection("left");
        onChildChange(nextActiveIndex);
      }, play);
      timerRef.current = timer;
      return function() {
        clearTimeout(timer);
      };
    }
    return function() {
    };
  }, [activeIndex, play, children2, lastIndex, onChildChange, wrap]);
  (0, import_react36.useEffect)(function() {
    onControlledNavigation(activeIndex, activeChild, activeChildState, inTransition);
  }, [onControlledNavigation, activeIndex, activeChild, activeChildState, inTransition]);
  var showArrows = controls && controls !== "selectors";
  var showSelectors = controls && controls !== "arrows";
  var CurrentIcon = theme.carousel.icons.current;
  var iconColor = normalizeColor(theme.carousel.icons.color || "control", theme);
  var selectors = [];
  var wrappedChildren = import_react36.Children.map(children2, function(child, index) {
    selectors.push(import_react36.default.createElement(Button, {
      a11yTitle: format3({
        id: "carousel.jump",
        values: {
          slide: index + 1
        }
      }),
      key: index,
      icon: import_react36.default.createElement(CurrentIcon, {
        color: activeIndex === index ? iconColor : void 0
      }),
      onClick: onSelect(index)
    }));
    return import_react36.default.createElement(CarouselChild, {
      animationDuration: animationDuration2,
      fill: fill || !!height || !!width,
      index,
      activeIndex,
      priorActiveIndex,
      direction
    }, child);
  });
  var NextIcon = theme.carousel.icons.next;
  var PreviousIcon = theme.carousel.icons.previous;
  var nextIconDisabled = !wrap && activeIndex >= lastIndex;
  var previousIconDisabled = !wrap && activeIndex <= 0;
  return import_react36.default.createElement(Keyboard, {
    onLeft,
    onRight
  }, import_react36.default.createElement(StyledCarouselContainer, _extends34({
    fill,
    height,
    width
  }, rest), showArrows && import_react36.default.createElement(StyledControl, {
    offsetProp: "left",
    fill: "vertical"
  }, import_react36.default.createElement(Button, {
    fill: "vertical",
    icon: import_react36.default.createElement(PreviousIcon, {
      color: normalizeColor(previousIconDisabled ? theme.carousel.disabled.icons.color : theme.carousel.icons.color, theme)
    }),
    a11yTitle: format3({
      id: "carousel.previous",
      values: {
        slide: activeIndex
      }
    }),
    plain: true,
    disabled: previousIconDisabled,
    onClick: onLeft,
    hoverIndicator: true
  })), wrappedChildren, showSelectors && import_react36.default.createElement(StyledControl, {
    offsetProp: "bottom",
    fill: "horizontal"
  }, import_react36.default.createElement(Box, {
    justify: "end",
    fill: !showArrows && "horizontal"
  }, import_react36.default.createElement(Box, {
    direction: "row",
    justify: "center"
  }, selectors))), showArrows && import_react36.default.createElement(StyledControl, {
    offsetProp: "right",
    fill: "vertical"
  }, import_react36.default.createElement(Button, {
    fill: "vertical",
    icon: import_react36.default.createElement(NextIcon, {
      color: normalizeColor(nextIconDisabled ? theme.carousel.disabled.icons.color : theme.carousel.icons.color, theme)
    }),
    a11yTitle: format3({
      id: "carousel.next",
      values: {
        slide: activeIndex + 2
      }
    }),
    plain: true,
    disabled: nextIconDisabled,
    onClick: onRight,
    hoverIndicator: true
  }))));
};
Carousel.defaultProps = {
  initialChild: 0,
  controls: true
};
Object.setPrototypeOf(Carousel.defaultProps, defaultProps2);
Carousel.displayName = "Carousel";
Carousel.propTypes = CarouselPropTypes;

// node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js
var import_react39 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/CheckBox/CheckBox.js
var import_react38 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Form/FormContext.js
var import_react37 = __toESM(require_react());
var useFormInput = function useFormInput2(_ref) {
  var valueProp = _ref.value, initialValue = _ref.initialValue;
  var _useState = (0, import_react37.useState)(valueProp !== void 0 ? valueProp : initialValue), value = _useState[0], setValue = _useState[1];
  return [valueProp !== void 0 ? valueProp : value, function(nextValue) {
    if (initialValue !== void 0)
      setValue(nextValue);
  }];
};
var useFormField = function useFormField2(_ref2) {
  var error = _ref2.error, info = _ref2.info, disabled = _ref2.disabled;
  return {
    error,
    info,
    disabled
  };
};
var FormContext = import_react37.default.createContext({
  useFormField,
  useFormInput
});

// node_modules/grommet/es6/components/CheckBox/propTypes.js
var import_prop_types21 = __toESM(require_prop_types());
var PropType18 = {};
if (true) {
  PropType18 = {
    a11yTitle: import_prop_types21.default.string,
    checked: import_prop_types21.default.bool,
    disabled: import_prop_types21.default.bool,
    fill: import_prop_types21.default.bool,
    id: import_prop_types21.default.string,
    label: import_prop_types21.default.node,
    name: import_prop_types21.default.string,
    onChange: import_prop_types21.default.func,
    pad: padPropType,
    reverse: import_prop_types21.default.bool,
    toggle: import_prop_types21.default.bool,
    indeterminate: import_prop_types21.default.bool
  };
}
var CheckBoxPropTypes = PropType18;

// node_modules/grommet/es6/components/CheckBox/StyledCheckBox.js
init_styled_components_browser_esm();
var fillStyle8 = function fillStyle9() {
  return "\n      width: 100%;\n      height: 100%;\n      max-width: none;\n      flex: 1 0 auto;\n      justify-content: space-between;\n    ";
};
var disabledStyle4 = "\n  opacity: 0.5;\n  cursor: default;\n";
var hoverStyle2 = Ce([":hover input:not([disabled]) + div,:hover input:not([disabled]) + span{border-color:", ";}:hover{background-color:", ";}"], function(props) {
  var _props$theme$checkBox, _props$theme$checkBox2;
  return normalizeColor((_props$theme$checkBox = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox2 = _props$theme$checkBox.border) == null ? void 0 : _props$theme$checkBox2.color, props.theme);
}, function(props) {
  var _props$theme$checkBox3, _props$theme$checkBox4;
  return normalizeColor(!props.disabled && ((_props$theme$checkBox3 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox4 = _props$theme$checkBox3.background) == null ? void 0 : _props$theme$checkBox4.color), props.theme);
});
var StyledCheckBoxIcon = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxIcon",
  componentId: "sc-1dbk5ju-0"
})(["box-sizing:border-box;stroke-width:", ";stroke:", ";width:", ";height:", ";", ";"], function(props) {
  return props.theme.checkBox.check.thickness;
}, function(props) {
  return normalizeColor(props.theme.checkBox.color || "control", props.theme);
}, function(props) {
  return props.theme.checkBox.icon.size || props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.icon.size || props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.icon.extend;
});
StyledCheckBoxIcon.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxIcon.defaultProps, defaultProps2);
var StyledCheckBoxContainer = styled_components_browser_esm_default.label.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxContainer",
  componentId: "sc-1dbk5ju-1"
})(["display:flex;flex-direction:row;align-items:", ";user-select:none;", " ", " ", " ", " ", " ", " ", ""], function(props) {
  return typeof props.label === "string" ? props.theme.checkBox.label.align : void 0;
}, function(props) {
  return props.fillProp ? fillStyle8() : "width: fit-content;";
}, function(props) {
  return (props.pad || props.theme.checkBox.pad) && edgeStyle("padding", props.pad || props.theme.checkBox.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.disabled && disabledStyle4;
}, function(props) {
  return !props.disabled && "cursor: pointer;";
}, hoverStyle2, function(props) {
  var _props$theme$checkBox5, _props$theme$checkBox6, _props$theme$checkBox7, _props$theme$checkBox8;
  return props.focus && !props.focusIndicator && "\n    input:not([disabled]) + div,\n    input:not([disabled]) + span {\n      border-color: " + normalizeColor((_props$theme$checkBox5 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox6 = _props$theme$checkBox5.border) == null ? void 0 : _props$theme$checkBox6.color, props.theme) + ";\n    }\n     \n    background-color: " + normalizeColor(!props.disabled && ((_props$theme$checkBox7 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox8 = _props$theme$checkBox7.background) == null ? void 0 : _props$theme$checkBox8.color), props.theme) + ";";
}, function(props) {
  return props.theme.checkBox.extend;
});
StyledCheckBoxContainer.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxContainer.defaultProps, defaultProps2);
var StyledCheckBoxInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxInput",
  componentId: "sc-1dbk5ju-2"
})(["opacity:0;-moz-appearance:none;width:0;height:0;margin:0;", ":checked + span > span{left:calc( ", " - ", " );background:", ";}"], function(props) {
  return !props.disabled && "cursor: pointer;";
}, function(props) {
  return props.theme.checkBox.toggle.size;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return normalizeColor(props.theme.checkBox.color || "control", props.theme);
});
StyledCheckBoxInput.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxInput.defaultProps, defaultProps2);
var StyledCheckBoxBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxBox",
  componentId: "sc-1dbk5ju-3"
})(["", ";", ";"], function(props) {
  return props.focus && props.focusIndicator && focusStyle();
}, function(props) {
  return props.theme.checkBox.check.extend;
});
StyledCheckBoxBox.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxBox.defaultProps, defaultProps2);
var StyledCheckBoxToggle = styled_components_browser_esm_default.span.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxToggle",
  componentId: "sc-1dbk5ju-4"
})(["box-sizing:border-box;vertical-align:middle;display:inline-block;width:", ";height:", ";border:", " solid;border-color:", ";border-radius:", ";background-color:", ";", ";", ";"], function(props) {
  return props.theme.checkBox.toggle.size;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.border.width;
}, function(props) {
  return normalizeColor(props.theme.checkBox.border.color, props.theme);
}, function(props) {
  return props.theme.checkBox.toggle.radius;
}, function(props) {
  return props.theme.checkBox.toggle.background ? normalizeColor(props.theme.checkBox.toggle.background, props.theme) : "transparent";
}, function(props) {
  return props.focus && props.focusIndicator && focusStyle();
}, function(props) {
  return props.theme.checkBox.toggle.extend;
});
StyledCheckBoxToggle.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxToggle.defaultProps, defaultProps2);
var StyledCheckBoxKnob = styled_components_browser_esm_default.span.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxKnob",
  componentId: "sc-1dbk5ju-5"
})(["box-sizing:border-box;position:relative;display:inherit;top:-", ";left:-", ";transition:all 0.3s;width:", ";height:", ";background:", ";border-radius:", ";", ";"], function(props) {
  return props.theme.checkBox.border.width;
}, function(props) {
  return props.theme.checkBox.border.width;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return normalizeColor(props.theme.checkBox.toggle.color, props.theme);
}, function(props) {
  return props.theme.checkBox.toggle.radius;
}, function(props) {
  return props.theme.checkBox.toggle.knob.extend;
});
StyledCheckBoxKnob.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxKnob.defaultProps, defaultProps2);
var StyledCheckBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCheckBox",
  componentId: "sc-1dbk5ju-6"
})(["flex-shrink:0;"]);
StyledCheckBox.defaultProps = {};
Object.setPrototypeOf(StyledCheckBox.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/CheckBox/CheckBox.js
var _excluded17 = ["a11yTitle", "aria-label", "checked", "children", "defaultChecked", "disabled", "fill", "focus", "focusIndicator", "id", "label", "name", "onBlur", "onChange", "onFocus", "onMouseEnter", "onMouseLeave", "onMouseOut", "onMouseOver", "pad", "reverse", "toggle", "indeterminate"];
function _extends35() {
  _extends35 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends35.apply(this, arguments);
}
function _objectWithoutPropertiesLoose17(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var stopLabelClick = function stopLabelClick2(event) {
  if (event.target.type !== "checkbox") {
    event.stopPropagation();
  }
};
var CheckBox = (0, import_react38.forwardRef)(function(_ref, ref) {
  var _ref2;
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], checkedProp = _ref.checked, children2 = _ref.children, _ref$defaultChecked = _ref.defaultChecked, defaultChecked = _ref$defaultChecked === void 0 ? false : _ref$defaultChecked, disabled = _ref.disabled, fill = _ref.fill, focusProp = _ref.focus, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, id = _ref.id, label = _ref.label, name = _ref.name, _onBlur = _ref.onBlur, _onChange = _ref.onChange, _onFocus = _ref.onFocus, _onMouseEnter = _ref.onMouseEnter, _onMouseLeave = _ref.onMouseLeave, _onMouseOut = _ref.onMouseOut, _onMouseOver = _ref.onMouseOver, pad = _ref.pad, reverse = _ref.reverse, toggle = _ref.toggle, indeterminate = _ref.indeterminate, rest = _objectWithoutPropertiesLoose17(_ref, _excluded17);
  var theme = (0, import_react38.useContext)(Ge) || defaultProps2.theme;
  var formContext = (0, import_react38.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: checkedProp,
    initialValue: defaultChecked
  }), checked = _formContext$useFormI[0], setChecked = _formContext$useFormI[1];
  var _useState = (0, import_react38.useState)(focusProp), focus = _useState[0], setFocus = _useState[1];
  (0, import_react38.useEffect)(function() {
    if (disabled && focusProp)
      setFocus(false);
    else
      setFocus(focusProp);
  }, [disabled, focusProp]);
  (0, import_react38.useEffect)(function() {
    if (checkedProp && indeterminate) {
      console.warn('Checkbox cannot be "checked" and "indeterminate" at the same time.');
    }
    if (toggle && indeterminate) {
      console.warn('Checkbox of type toggle does not have "indeterminate" state.');
    }
  }, [checkedProp, toggle, indeterminate]);
  var themeableProps = {
    checked,
    disabled,
    focus,
    focusIndicator,
    reverse,
    toggle,
    indeterminate
  };
  var hidden;
  if (disabled && checked) {
    hidden = import_react38.default.createElement("input", {
      name,
      type: "hidden",
      value: "true"
    });
  }
  var _theme$checkBox$icons = theme.checkBox.icons, CheckedIcon = _theme$checkBox$icons.checked, IndeterminateIcon = _theme$checkBox$icons.indeterminate;
  var borderColor = normalizeColor(theme.checkBox.border.color, theme);
  if (checked) {
    borderColor = normalizeColor(theme.checkBox.color || "control", theme);
  }
  var visual = toggle ? import_react38.default.createElement(StyledCheckBoxToggle, themeableProps, import_react38.default.createElement(StyledCheckBoxKnob, themeableProps)) : import_react38.default.createElement(StyledCheckBoxBox, _extends35({
    as: Box,
    align: "center",
    justify: "center",
    width: theme.checkBox.size,
    height: theme.checkBox.size,
    border: {
      size: theme.checkBox.border.width,
      color: borderColor
    },
    round: theme.checkBox.check.radius
  }, themeableProps), !indeterminate && checked && (CheckedIcon ? import_react38.default.createElement(CheckedIcon, {
    theme,
    as: StyledCheckBoxIcon
  }) : import_react38.default.createElement(StyledCheckBoxIcon, _extends35({
    theme,
    viewBox: "0 0 24 24",
    preserveAspectRatio: "xMidYMid meet"
  }, themeableProps), import_react38.default.createElement("path", {
    fill: "none",
    d: "M6,11.3 L10.3,16 L18,6.2"
  }))), !checked && indeterminate && (IndeterminateIcon ? import_react38.default.createElement(IndeterminateIcon, {
    theme,
    as: StyledCheckBoxIcon
  }) : import_react38.default.createElement(StyledCheckBoxIcon, _extends35({
    theme,
    viewBox: "0 0 24 24",
    preserveAspectRatio: "xMidYMid meet"
  }, themeableProps), import_react38.default.createElement("path", {
    fill: "none",
    d: "M6,12 L18,12"
  }))));
  var side = reverse ? "left" : "right";
  var checkBoxNode = import_react38.default.createElement(StyledCheckBox, _extends35({
    as: Box,
    align: "center",
    justify: "center",
    margin: label && (_ref2 = {}, _ref2[side] = theme.checkBox.gap || "small", _ref2)
  }, themeableProps), import_react38.default.createElement(StyledCheckBoxInput, _extends35({}, rest, {
    ref,
    type: "checkbox"
  }, removeUndefined({
    id,
    name,
    checked,
    disabled
  }), themeableProps, {
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: function onChange(event) {
      setChecked(event.target.checked);
      if (_onChange)
        _onChange(event);
    }
  })), children2 ? children2({
    checked,
    indeterminate
  }) : visual, hidden);
  var normalizedLabel = typeof label === "string" ? import_react38.default.createElement("span", null, label) : label;
  var first = reverse ? normalizedLabel : checkBoxNode;
  var second = reverse ? checkBoxNode : normalizedLabel;
  return import_react38.default.createElement(StyledCheckBoxContainer, _extends35({
    "aria-label": ariaLabel || a11yTitle,
    fillProp: fill,
    reverse
  }, removeUndefined({
    htmlFor: id,
    disabled
  }), {
    checked,
    label,
    onClick: stopLabelClick,
    pad,
    onMouseEnter: function onMouseEnter(event) {
      return _onMouseEnter == null ? void 0 : _onMouseEnter(event);
    },
    onMouseOver: function onMouseOver(event) {
      return _onMouseOver == null ? void 0 : _onMouseOver(event);
    },
    onMouseLeave: function onMouseLeave(event) {
      return _onMouseLeave == null ? void 0 : _onMouseLeave(event);
    },
    onMouseOut: function onMouseOut(event) {
      return _onMouseOut == null ? void 0 : _onMouseOut(event);
    }
  }, themeableProps), first, second);
});
CheckBox.displayName = "CheckBox";
CheckBox.propTypes = CheckBoxPropTypes;

// node_modules/grommet/es6/components/CheckBoxGroup/StyledCheckBoxGroup.js
init_styled_components_browser_esm();
var StyledCheckBoxGroup = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCheckBoxGroup",
  componentId: "sc-2nhc5d-0"
})(["", ""], function(props) {
  return props.theme.checkBoxGroup && props.theme.checkBoxGroup.container && props.theme.checkBoxGroup.container.extend;
});
StyledCheckBoxGroup.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxGroup.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/CheckBoxGroup/propTypes.js
var import_prop_types22 = __toESM(require_prop_types());
var PropType19 = {};
if (true) {
  PropType19 = {
    value: import_prop_types22.default.arrayOf(import_prop_types22.default.oneOfType([import_prop_types22.default.number, import_prop_types22.default.string])),
    disabled: import_prop_types22.default.bool,
    labelKey: import_prop_types22.default.string,
    name: import_prop_types22.default.string,
    onChange: import_prop_types22.default.func,
    options: import_prop_types22.default.oneOfType([import_prop_types22.default.arrayOf(import_prop_types22.default.string), import_prop_types22.default.arrayOf(import_prop_types22.default.shape({}))]),
    valueKey: import_prop_types22.default.string
  };
}
var CheckBoxGroupPropTypes = PropType19;

// node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js
var _excluded18 = ["children", "value", "disabled", "focusIndicator", "gap", "labelKey", "valueKey", "onChange", "options", "name"];
var _excluded22 = ["value"];
function _extends36() {
  _extends36 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends36.apply(this, arguments);
}
function _objectWithoutPropertiesLoose18(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var CheckBoxGroup = (0, import_react39.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, valueProp = _ref.value, disabledProp = _ref.disabled, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, gap = _ref.gap, labelKey = _ref.labelKey, valueKey = _ref.valueKey, onChange = _ref.onChange, optionsProp = _ref.options, name = _ref.name, rest = _objectWithoutPropertiesLoose18(_ref, _excluded18);
  var formContext = (0, import_react39.useContext)(FormContext);
  var theme = (0, import_react39.useContext)(Ge) || defaultProps.theme;
  var options = optionsProp.map(function(option) {
    return typeof option === "string" ? {
      disabled: disabledProp,
      value: option,
      label: option
    } : option;
  });
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: []
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var onCheckBoxChange = function onCheckBoxChange2(event, optionValue, option) {
    var nextValue = JSON.parse(JSON.stringify(value)) || [];
    var optionIndex = nextValue.indexOf(optionValue);
    if (optionIndex < 0)
      nextValue.push(optionValue);
    else
      nextValue.splice(optionIndex, 1);
    setValue(nextValue);
    if (onChange) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.value = nextValue;
      adjustedEvent.option = option;
      onChange(adjustedEvent);
    }
  };
  return import_react39.default.createElement(StyledCheckBoxGroup, _extends36({
    ref,
    role: "group"
  }, theme.checkBoxGroup.container, {
    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : "small")
  }, rest), options.map(function(option, index) {
    var optionValue = option.value;
    var label = labelKey ? option[labelKey] : option.label;
    var valueOption = valueKey ? option[valueKey] : optionValue;
    var checked = value.indexOf(valueOption) >= 0;
    var disabled = disabledProp || option.disabled;
    var key = label + "-" + valueOption;
    if (option.checked)
      console.warn("'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.");
    var omit = option.value, optionRest = _objectWithoutPropertiesLoose18(option, _excluded22);
    var optionProps = _extends36({}, optionRest, {
      label,
      disabled
    });
    return import_react39.default.createElement(CheckBox, _extends36({
      key
    }, optionProps, {
      disabled,
      checked,
      focusIndicator,
      label,
      onChange: function onChange2(event) {
        return onCheckBoxChange(event, valueOption, optionProps);
      }
    }), children2 ? function(state) {
      return children2(options[index], state);
    } : null);
  }));
});
CheckBoxGroup.displayName = "CheckBoxGroup";
CheckBoxGroup.propTypes = CheckBoxGroupPropTypes;

// node_modules/grommet/es6/components/Chart/Chart.js
var import_react40 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Chart/StyledChart.js
init_styled_components_browser_esm();
var animateStyle = function animateStyle2(_ref) {
  var theme = _ref.theme, typeProp = _ref.typeProp;
  var animateBounds;
  if (typeProp === "line")
    animateBounds = ["stroke-dashoffset: 200%;", "stroke-dashoffset: 0%;"];
  else if (typeProp === "point")
    animateBounds = ["opacity: 0;", "opacity: 1;"];
  else
    animateBounds = ["transform: scaleY(0);", "transform: scaleY(1);"];
  return Ce(["", " animation:", " ", " forwards;", ""], typeProp === "line" && "stroke-dasharray: 200%;", Ue(["from{", "}to{", "}"], animateBounds[0], animateBounds[1]), theme.global.animation.duration, (typeProp === "bar" || typeProp === "area") && "transform-origin: center bottom 0;");
};
var StyledChart = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledChart",
  componentId: "sc-1nae0gf-0"
})(["display:block;max-width:100%;overflow:visible;", " ", " ", ";"], genericStyles, function(props) {
  return props.animate && animateStyle(props);
}, function(props) {
  return props.theme.chart && props.theme.chart.extend;
});
StyledChart.defaultProps = {};
Object.setPrototypeOf(StyledChart.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Chart/utils.js
var normalizeValues = function normalizeValues2(values) {
  return (values || []).map(function(value, index) {
    if (value === void 0)
      return {
        value: [index, void 0]
      };
    if (typeof value === "number")
      return {
        value: [index, value]
      };
    if (Array.isArray(value))
      return {
        value
      };
    return value;
  });
};
var normalizeBounds = function normalizeBounds2(bounds2, values) {
  var result = bounds2;
  if (!result) {
    result = [[0, 1], [0, 1]];
    (values || []).forEach(function(value) {
      if (value.value[0] !== void 0) {
        result[0][0] = Math.min(result[0][0], value.value[0]);
        result[0][1] = Math.max(result[0][1], value.value[0]);
      }
      if (value.value[1] !== void 0) {
        result[1][0] = Math.min(result[1][0], value.value[1]);
        result[1][1] = Math.max(result[1][1], value.value[1]);
      }
      if (value.value[2] !== void 0) {
        result[1][0] = Math.min(result[1][0], value.value[2]);
        result[1][1] = Math.max(result[1][1], value.value[2]);
      }
    });
  }
  return result;
};

// node_modules/grommet/es6/components/Chart/propTypes.js
var import_prop_types23 = __toESM(require_prop_types());
function _extends37() {
  _extends37 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends37.apply(this, arguments);
}
var thicknessType = import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["hair", "xsmall", "small", "medium", "large", "xlarge", "none"]), import_prop_types23.default.string, import_prop_types23.default.number]);
var PropType20 = {};
if (true) {
  PropType20 = _extends37({}, genericProps, {
    animate: import_prop_types23.default.bool,
    bounds: import_prop_types23.default.arrayOf(import_prop_types23.default.arrayOf(import_prop_types23.default.number)),
    color: import_prop_types23.default.oneOfType([colorPropType, import_prop_types23.default.shape({
      color: colorPropType,
      opacity: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["weak", "medium", "strong"]), import_prop_types23.default.bool])
    }), import_prop_types23.default.arrayOf(import_prop_types23.default.shape({
      color: colorPropType,
      value: import_prop_types23.default.number
    }))]),
    id: import_prop_types23.default.string,
    dash: import_prop_types23.default.bool,
    gap: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types23.default.string]),
    onClick: import_prop_types23.default.func,
    onHover: import_prop_types23.default.func,
    opacity: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["weak", "medium", "strong"]), import_prop_types23.default.bool]),
    overflow: import_prop_types23.default.bool,
    pad: padPropType,
    pattern: patternPropType,
    point: pointPropType,
    round: import_prop_types23.default.bool,
    size: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "full"]), import_prop_types23.default.shape({
      height: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "full"]), import_prop_types23.default.string]),
      width: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "full", "auto"]), import_prop_types23.default.string])
    }), import_prop_types23.default.string]),
    thickness: thicknessType,
    type: import_prop_types23.default.oneOf(["bar", "line", "area", "point"]),
    values: import_prop_types23.default.arrayOf(import_prop_types23.default.oneOfType([import_prop_types23.default.number, import_prop_types23.default.arrayOf(import_prop_types23.default.number), import_prop_types23.default.shape({
      color: colorPropType,
      label: import_prop_types23.default.string,
      onClick: import_prop_types23.default.func,
      onHover: import_prop_types23.default.func,
      opacity: import_prop_types23.default.oneOfType([import_prop_types23.default.string, import_prop_types23.default.number, import_prop_types23.default.bool]),
      thickness: thicknessType,
      value: import_prop_types23.default.oneOfType([import_prop_types23.default.number, import_prop_types23.default.arrayOf(import_prop_types23.default.number)])
    })]))
  });
}
var ChartPropTypes = PropType20;

// node_modules/grommet/es6/components/Chart/Chart.js
var _excluded19 = ["a11yTitle", "bounds", "color", "dash", "gap", "id", "onClick", "onHover", "opacity", "overflow", "pad", "pattern", "point", "round", "size", "thickness", "type", "values"];
var _excluded23 = ["color", "label", "onHover", "opacity", "thickness", "value"];
var _excluded32 = ["color", "label", "onHover", "opacity", "thickness", "value"];
function _extends38() {
  _extends38 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends38.apply(this, arguments);
}
function _objectWithoutPropertiesLoose19(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var gradientMaskColor = "#ffffff";
var defaultSize = {
  height: "small",
  width: "medium"
};
var defaultValues = [];
var Chart = import_react40.default.forwardRef(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, propsBounds = _ref.bounds, color = _ref.color, dash = _ref.dash, gap = _ref.gap, id = _ref.id, onClick = _ref.onClick, onHover = _ref.onHover, propsOpacity = _ref.opacity, _ref$overflow = _ref.overflow, overflow = _ref$overflow === void 0 ? false : _ref$overflow, pad = _ref.pad, pattern = _ref.pattern, point = _ref.point, round3 = _ref.round, _ref$size = _ref.size, propsSize = _ref$size === void 0 ? defaultSize : _ref$size, _ref$thickness = _ref.thickness, thickness = _ref$thickness === void 0 ? "medium" : _ref$thickness, _ref$type = _ref.type, type = _ref$type === void 0 ? "bar" : _ref$type, _ref$values = _ref.values, propsValues = _ref$values === void 0 ? defaultValues : _ref$values, rest = _objectWithoutPropertiesLoose19(_ref, _excluded19);
  var containerRef = useForwardedRef(ref);
  var theme = (0, import_react40.useContext)(Ge) || defaultProps2.theme;
  var values = (0, import_react40.useMemo)(function() {
    return normalizeValues(propsValues);
  }, [propsValues]);
  var bounds2 = (0, import_react40.useMemo)(function() {
    return normalizeBounds(propsBounds, values);
  }, [propsBounds, values]);
  var strokeWidth = (0, import_react40.useMemo)(function() {
    return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);
  }, [theme.global.edgeSize, thickness]);
  var inset = (0, import_react40.useMemo)(function() {
    var result = [0, 0, 0, 0];
    if (pad) {
      if (pad.horizontal) {
        var padSize = parseMetricToNum(theme.global.edgeSize[pad.horizontal] || pad.horizontal);
        result[0] = padSize;
        result[2] = padSize;
      }
      if (pad.vertical) {
        var _padSize = parseMetricToNum(theme.global.edgeSize[pad.vertical] || pad.vertical);
        result[1] = _padSize;
        result[3] = _padSize;
      }
      if (pad.start) {
        result[0] = parseMetricToNum(theme.global.edgeSize[pad.start] || pad.start);
      }
      if (pad.end) {
        result[2] = parseMetricToNum(theme.global.edgeSize[pad.end] || pad.end);
      }
      if (typeof pad === "string") {
        var _padSize2 = parseMetricToNum(theme.global.edgeSize[pad]);
        result = [_padSize2, _padSize2, _padSize2, _padSize2];
      }
    }
    return result;
  }, [pad, theme.global.edgeSize]);
  var strokeDasharray = (0, import_react40.useMemo)(function() {
    if (dash) {
      if (round3)
        return strokeWidth + " " + strokeWidth * 1.5;
      return strokeWidth * 2 + " " + strokeWidth / 2;
    }
    return void 0;
  }, [dash, round3, strokeWidth]);
  var _useState = (0, import_react40.useState)([0, 0]), containerSize = _useState[0], setContainerSize = _useState[1];
  var needContainerSize = (0, import_react40.useMemo)(function() {
    return propsSize && (propsSize === "full" || propsSize === "fill" || propsSize.height === "full" || propsSize.height === "fill" || propsSize.width === "full" || propsSize.width === "fill");
  }, [propsSize]);
  var size = (0, import_react40.useMemo)(function() {
    var gapWidth = gap ? parseMetricToNum(theme.global.edgeSize[gap] || gap) : strokeWidth;
    var autoWidth = strokeWidth * values.length + (values.length - 1) * gapWidth;
    var sizeWidth = typeof propsSize === "string" ? propsSize : propsSize.width || defaultSize.width;
    var width;
    if (sizeWidth === "full" || sizeWidth === "fill") {
      width = containerSize[0];
    } else if (sizeWidth === "auto") {
      width = autoWidth;
    } else {
      width = parseMetricToNum(theme.global.size[sizeWidth] || sizeWidth);
    }
    var sizeHeight = typeof propsSize === "string" ? propsSize : propsSize.height || defaultSize.height;
    var height;
    if (sizeHeight === "full" || sizeHeight === "fill") {
      height = containerSize[1];
    } else {
      height = parseMetricToNum(theme.global.size[sizeHeight] || sizeHeight);
    }
    return [width, height];
  }, [containerSize, gap, propsSize, strokeWidth, theme.global.edgeSize, theme.global.size, values]);
  var scale = (0, import_react40.useMemo)(function() {
    return [(size[0] - (inset[0] + inset[2])) / (bounds2[0][1] - bounds2[0][0]), (size[1] - (inset[1] + inset[3])) / (bounds2[1][1] - bounds2[1][0])];
  }, [bounds2, inset, size]);
  var viewBounds = (0, import_react40.useMemo)(function() {
    return overflow ? [0, 0, size[0], size[1]] : [-(strokeWidth / 2), -(strokeWidth / 2), size[0] + strokeWidth, size[1] + strokeWidth];
  }, [overflow, size, strokeWidth]);
  useLayoutEffect(function() {
    if (containerRef.current && needContainerSize) {
      var containerNode = containerRef.current;
      if (containerNode) {
        var parentNode = containerNode.parentNode;
        if (parentNode) {
          var rect = parentNode.getBoundingClientRect();
          if (rect.width !== containerSize[0] || rect.height !== containerSize[1]) {
            setContainerSize([rect.width, rect.height]);
          }
        }
      }
    }
  }, [containerRef, containerSize, needContainerSize]);
  (0, import_react40.useEffect)(function() {
    var onResize = function onResize2() {
      var parentNode = containerRef.current.parentNode;
      var rect = parentNode.getBoundingClientRect();
      setContainerSize([rect.width, rect.height]);
    };
    if (needContainerSize) {
      window.addEventListener("resize", onResize);
      return function() {
        return window.removeEventListener("resize", onResize);
      };
    }
    return void 0;
  }, [containerRef, needContainerSize]);
  var valueToCoordinate = function valueToCoordinate2(xValue, yValue) {
    return [(xValue - bounds2[0][0]) * scale[0] + inset[0], size[1] - ((yValue - bounds2[1][0]) * scale[1] + inset[1])];
  };
  var useGradient = color && Array.isArray(color);
  var patternId;
  function getOpacity(valueOpacity) {
    return valueOpacity && theme.global.opacity[valueOpacity] || (valueOpacity === true ? theme.global.opacity.medium : valueOpacity === false ? void 0 : valueOpacity);
  }
  var renderBars = function renderBars2() {
    return (values || []).filter(function(_ref2) {
      var value = _ref2.value;
      return value[1] !== void 0;
    }).map(function(valueArg, index) {
      var valueColor = valueArg.color, label = valueArg.label, valueOnHover = valueArg.onHover, valueOpacity = valueArg.opacity, valueThickness = valueArg.thickness, value = valueArg.value, valueRest = _objectWithoutPropertiesLoose19(valueArg, _excluded23);
      var key = "p-" + index;
      var bottom = value.length === 2 ? Math.min(Math.max(0, bounds2[1][0]), value[1]) : Math.min(value[1], value[2]);
      var top = value.length === 2 ? Math.max(Math.min(0, bounds2[1][1]), value[1]) : Math.max(value[1], value[2]);
      var d2 = "M " + valueToCoordinate(value[0], bottom).join(",") + (" L " + valueToCoordinate(value[0], top).join(","));
      var hoverProps;
      if (valueOnHover) {
        hoverProps = {
          onMouseOver: function onMouseOver() {
            return valueOnHover(true);
          },
          onMouseLeave: function onMouseLeave() {
            return valueOnHover(false);
          }
        };
      }
      var clickProps;
      if (onClick) {
        clickProps = {
          onClick
        };
      }
      return import_react40.default.createElement("g", {
        key,
        fill: "none",
        stroke: valueColor ? normalizeColor(valueColor, theme) : void 0,
        strokeWidth: valueThickness ? parseMetricToNum(theme.global.edgeSize[valueThickness] || valueThickness) : void 0,
        opacity: getOpacity(valueOpacity)
      }, import_react40.default.createElement("title", null, label), import_react40.default.createElement("path", _extends38({
        d: d2
      }, hoverProps, clickProps, valueRest, {
        strokeDasharray
      })));
    });
  };
  var renderLine = function renderLine2() {
    var d2 = "";
    var d22 = "";
    (values || []).filter(function(_ref3) {
      var value = _ref3.value;
      return value[1] !== void 0;
    }).forEach(function(_ref4) {
      var value = _ref4.value;
      d2 += (d2 ? " L" : "M") + " " + valueToCoordinate(value[0], value[1]).join(",");
      if (value[2] !== void 0) {
        d22 += (d22 ? " L" : "M") + " " + valueToCoordinate(value[0], value[2]).join(",");
      }
    });
    var hoverProps;
    if (onHover) {
      hoverProps = {
        onMouseOver: function onMouseOver() {
          return onHover(true);
        },
        onMouseLeave: function onMouseLeave() {
          return onHover(false);
        }
      };
    }
    var clickProps;
    if (onClick) {
      clickProps = {
        onClick
      };
    }
    return import_react40.default.createElement("g", {
      fill: "none"
    }, import_react40.default.createElement("path", _extends38({
      d: d2
    }, hoverProps, clickProps, {
      strokeDasharray
    })), d22 && import_react40.default.createElement("path", _extends38({
      d: d22
    }, hoverProps, clickProps, {
      strokeDasharray
    })));
  };
  var renderArea = function renderArea2() {
    var d2 = "";
    (values || []).filter(function(_ref5) {
      var value = _ref5.value;
      return value[1] !== void 0;
    }).forEach(function(_ref6, index) {
      var value = _ref6.value;
      d2 += (!index ? "M" : " L") + " " + valueToCoordinate(value[0], value[value.length === 2 ? 1 : 2]).join(",");
    });
    (values || []).filter(function(_ref7) {
      var value = _ref7.value;
      return value[1] !== void 0;
    }).reverse().forEach(function(_ref8) {
      var value = _ref8.value;
      d2 += " L " + valueToCoordinate(value[0], value.length === 2 ? Math.max(0, bounds2[1][0]) : value[1]).join(",");
    });
    if (d2.length > 0) {
      d2 += " Z";
    }
    var hoverProps;
    if (onHover) {
      hoverProps = {
        onMouseOver: function onMouseOver() {
          return onHover(true);
        },
        onMouseLeave: function onMouseLeave() {
          return onHover(false);
        }
      };
    }
    var clickProps;
    if (onClick) {
      clickProps = {
        onClick
      };
    }
    patternId = pattern && pattern + "-" + id + "-pattern";
    return import_react40.default.createElement("g", null, import_react40.default.createElement("path", _extends38({
      d: d2,
      fill: patternId ? "url(#" + patternId + ")" : void 0
    }, hoverProps, clickProps)));
  };
  var renderPoints = function renderPoints2() {
    return (values || []).filter(function(_ref9) {
      var value = _ref9.value;
      return value[1] !== void 0;
    }).map(function(valueArg, index) {
      var valueColor = valueArg.color, label = valueArg.label, valueOnHover = valueArg.onHover, valueOpacity = valueArg.opacity, valueThickness = valueArg.thickness, value = valueArg.value, valueRest = _objectWithoutPropertiesLoose19(valueArg, _excluded32);
      var key = "p-" + index;
      var hoverProps;
      if (valueOnHover) {
        hoverProps = {
          onMouseOver: function onMouseOver() {
            return valueOnHover(true);
          },
          onMouseLeave: function onMouseLeave() {
            return valueOnHover(false);
          }
        };
      }
      var clickProps;
      if (onClick) {
        clickProps = {
          onClick
        };
      }
      var width = valueThickness ? parseMetricToNum(theme.global.edgeSize[valueThickness] || valueThickness) : strokeWidth;
      var renderPoint = function renderPoint2(valueX, valueY) {
        var props = _extends38({}, hoverProps, clickProps, valueRest);
        var _valueToCoordinate = valueToCoordinate(valueX, valueY), cx = _valueToCoordinate[0], cy = _valueToCoordinate[1];
        var off = width / 2;
        if (point === "circle" || !point && round3)
          return import_react40.default.createElement("circle", _extends38({
            cx,
            cy,
            r: off
          }, props));
        var d2;
        if (point === "diamond")
          d2 = "M " + cx + " " + (cy - off) + " L " + (cx + off) + " " + cy + " L " + cx + " " + (cy + off) + " L " + (cx - off) + " " + cy + " Z";
        else if (point === "star") {
          var off1 = off / 3;
          var off2 = off1 * 2;
          d2 = "M " + cx + " " + (cy - off) + " L " + (cx - off2) + " " + (cy + off) + " L " + (cx + off) + " " + (cy - off1) + " L " + (cx - off) + " " + (cy - off1) + " L " + (cx + off2) + " " + (cy + off) + " Z";
        } else if (point === "triangle")
          d2 = "M " + cx + " " + (cy - off) + " L " + (cx + off) + " " + (cy + off) + " L " + (cx - off) + " " + (cy + off) + " Z";
        else if (point === "triangleDown")
          d2 = "M " + (cx - off) + " " + (cy - off) + " L " + (cx + off) + " " + (cy - off) + " L " + cx + " " + (cy + off) + " Z";
        else
          d2 = "M " + (cx - off) + " " + (cy - off) + " L " + (cx + off) + " " + (cy - off) + " L " + (cx + off) + " " + (cy + off) + " L " + (cx - off) + " " + (cy + off) + " Z";
        return import_react40.default.createElement("path", {
          d: d2
        });
      };
      return import_react40.default.createElement("g", {
        key,
        stroke: "none",
        fill: valueColor ? normalizeColor(valueColor, theme) : void 0,
        opacity: getOpacity(valueOpacity)
      }, import_react40.default.createElement("title", null, label), renderPoint(value[0], value[1]), value[2] !== void 0 && renderPoint(value[0], value[2]));
    });
  };
  var contents;
  if (type === "bar") {
    contents = renderBars();
  } else if (type === "line") {
    contents = renderLine();
  } else if (type === "area") {
    contents = renderArea();
  } else if (type === "point") {
    contents = renderPoints();
  }
  var viewBox = viewBounds.join(" ");
  var colorName;
  if (!useGradient) {
    if (color && color.color)
      colorName = color.color;
    else if (color)
      colorName = color;
    else if (theme.chart && theme.chart.color)
      colorName = theme.chart.color;
  }
  var opacity;
  if (propsOpacity === true) {
    opacity = theme.global.opacity.medium;
  } else if (propsOpacity) {
    opacity = theme.global.opacity[propsOpacity] ? theme.global.opacity[propsOpacity] : propsOpacity;
  } else if (color && color.opacity) {
    opacity = theme.global.opacity[color.opacity] ? theme.global.opacity[color.opacity] : color.opacity;
  } else
    opacity = void 0;
  var stroke;
  if (type !== "point") {
    if (useGradient)
      stroke = gradientMaskColor;
    else
      stroke = normalizeColor(colorName, theme);
  } else
    stroke = "none";
  var fill;
  if (type === "point" || type === "area") {
    if (useGradient)
      fill = gradientMaskColor;
    else
      fill = normalizeColor(colorName, theme);
  } else
    fill = "none";
  var drawing = import_react40.default.createElement("g", {
    stroke,
    strokeWidth: type !== "point" && (type !== "area" || !pattern) ? strokeWidth : void 0,
    fill,
    strokeLinecap: round3 ? "round" : "butt",
    strokeLinejoin: round3 ? "round" : "miter",
    opacity
  }, contents);
  var defs = [];
  var gradientRect;
  if (useGradient && size[1]) {
    var uniqueGradientId = color.map(function(element) {
      return element.color;
    }).join("-");
    var gradientId = uniqueGradientId + "-" + id + "-gradient";
    var maskId = uniqueGradientId + "-" + id + "-mask";
    defs.push(import_react40.default.createElement("linearGradient", {
      key: "gradientId",
      id: gradientId,
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 1
    }, color.slice(0).sort(function(c1, c2) {
      return c2.value - c1.value;
    }).map(function(_ref10) {
      var value = _ref10.value, gradientColor = _ref10.color;
      return import_react40.default.createElement("stop", {
        key: value,
        offset: (size[1] - (value - bounds2[1][0]) * scale[1]) / size[1],
        stopColor: normalizeColor(gradientColor, theme)
      });
    })));
    defs.push(import_react40.default.createElement("mask", {
      key: "mask",
      id: maskId
    }, drawing));
    gradientRect = import_react40.default.createElement("rect", {
      x: viewBounds[0],
      y: viewBounds[1],
      width: viewBounds[2],
      height: viewBounds[3],
      fill: "url(#" + gradientId + ")",
      mask: "url(#" + maskId + ")"
    });
  } else if (patternId) {
    var content;
    var diagonal = pattern.match(/Diagonal/);
    var unit = diagonal ? strokeWidth * Math.sqrt(2) : strokeWidth;
    var half = unit / 2;
    var _double = unit * 2;
    var pColor = normalizeColor(colorName, theme);
    if (pattern === "squares") {
      content = import_react40.default.createElement("rect", {
        x: half,
        y: half,
        width: unit,
        height: unit,
        fill: pColor
      });
    } else if (pattern === "circles") {
      content = import_react40.default.createElement("circle", {
        cx: unit,
        cy: unit,
        r: half,
        fill: pColor
      });
    } else if (pattern === "stripesHorizontal") {
      content = import_react40.default.createElement("path", {
        d: "M 0 " + unit + " L " + _double + " " + unit,
        stroke: pColor,
        strokeWidth
      });
    } else if (pattern === "stripesVertical") {
      content = import_react40.default.createElement("path", {
        d: "M " + unit + " 0 L " + unit + " " + _double,
        stroke: pColor,
        strokeWidth
      });
    } else if (pattern === "stripesDiagonalDown") {
      content = import_react40.default.createElement("path", {
        d: "M " + half + " " + -half + " L " + (_double + half) + " " + (_double - half) + "\n              M " + -half + " " + half + " L " + (_double - half) + " " + (_double + half),
        stroke: pColor,
        strokeWidth
      });
    } else if (pattern === "stripesDiagonalUp") {
      content = import_react40.default.createElement("path", {
        d: "M " + -half + " " + (_double - half) + " L " + (_double - half) + " " + -half + "\n              M " + half + " " + (_double + half) + " L " + (_double + half) + " " + half,
        stroke: pColor,
        strokeWidth
      });
    }
    defs.push(import_react40.default.createElement("pattern", {
      key: patternId,
      id: patternId,
      width: _double,
      height: _double,
      patternUnits: "userSpaceOnUse"
    }, content));
  }
  return import_react40.default.createElement(StyledChart, _extends38({
    ref: containerRef,
    id,
    "aria-label": a11yTitle,
    viewBox,
    preserveAspectRatio: "none",
    width: size === "full" ? "100%" : size[0],
    height: size === "full" ? "100%" : size[1],
    typeProp: type
  }, rest), defs.length && import_react40.default.createElement("defs", null, defs), useGradient ? gradientRect : drawing);
});
Chart.displayName = "Chart";
Chart.propTypes = ChartPropTypes;

// node_modules/grommet/es6/components/Chart/calcs.js
var thicknessPad = {
  xlarge: "large",
  large: "medium",
  medium: "small",
  small: "xsmall",
  xsmall: "xxsmall"
};
var round = function round2(value, decimals) {
  return Number(Math.round(value + "e" + decimals) + "e-" + decimals);
};
var alignMax = function alignMax2(value, interval) {
  if (value > 0)
    return value - value % interval + interval;
  if (value < 0)
    return value + value % interval;
  return value;
};
var alignMin = function alignMin2(value, interval) {
  if (value > 0)
    return value - value % interval;
  if (value < 0)
    return value - value % interval - interval;
  return value;
};
var calcBounds = function calcBounds2(values, options) {
  if (options === void 0) {
    options = {};
  }
  var coarseness = Array.isArray(options.coarseness) && options.coarseness || options.coarseness && [void 0, options.coarseness] || [void 0, 5];
  var steps = options.steps || [1, 1];
  var calcValues = normalizeValues(values || []);
  var minX;
  var maxX;
  var minY;
  var maxY;
  if (calcValues.length) {
    calcValues.filter(function(value) {
      return value !== void 0;
    }).forEach(function(value) {
      var x2 = value.value[0];
      if (x2 !== void 0) {
        minX = minX === void 0 ? x2 : Math.min(minX, x2);
        maxX = maxX === void 0 ? x2 : Math.max(maxX, x2);
      }
      var y2 = value.value[1];
      if (y2 !== void 0) {
        minY = minY === void 0 ? y2 : Math.min(minY, y2);
        maxY = maxY === void 0 ? y2 : Math.max(maxY, y2);
      }
      var y22 = value.value[2];
      if (y22 !== void 0) {
        minY = Math.min(minY, y22);
        maxY = Math.max(maxY, y22);
      }
    });
    if (maxX === minX) {
      if (maxX > 0)
        minX = maxX - 1;
      else
        maxX = minX + 1;
    }
    if (maxY === minY) {
      if (maxY > 0)
        minY = maxY - 1;
      else
        maxY = minY + 1;
    }
    var cX = coarseness[0], cY = coarseness[1];
    if (cX) {
      var deltaX = maxX - minX;
      var intervalX = Number.parseFloat((deltaX / cX).toPrecision(1));
      minX = alignMin(minX, intervalX);
      maxX = alignMax(maxX, intervalX);
    }
    if (cY) {
      var deltaY = maxY - minY;
      var intervalY = Number.parseFloat((deltaY / cY).toPrecision(1));
      minY = alignMin(minY, intervalY);
      maxY = alignMax(maxY, intervalY);
    }
    if (minY < 0 && maxY > 0 && Math.abs(minY) !== Math.abs(maxY)) {
      var stepInterval = (maxY - minY) / steps[1];
      var minSteps = minY / stepInterval;
      var maxSteps = maxY / stepInterval;
      if (Math.abs(minSteps) < Math.abs(maxSteps)) {
        stepInterval = maxY / Math.floor(maxSteps);
        maxY = stepInterval * Math.floor(maxSteps);
        minY = stepInterval * Math.floor(minSteps);
      } else {
        stepInterval = Math.abs(minY / Math.ceil(minSteps));
        minY = stepInterval * Math.ceil(minSteps);
        maxY = stepInterval * Math.ceil(maxSteps);
      }
    }
  }
  var bounds2;
  if (calcValues.length)
    bounds2 = [[minX, maxX], [minY, maxY]];
  else
    bounds2 = [[], []];
  return bounds2;
};
var calcs = function calcs2(values, options) {
  if (values === void 0) {
    values = [];
  }
  if (options === void 0) {
    options = {};
  }
  var steps = options.steps || [1, 1];
  var bounds2 = options.bounds || calcBounds(values, options);
  if (options.min !== void 0)
    bounds2[1][0] = options.min;
  if (options.max !== void 0)
    bounds2[1][1] = options.max;
  var dimensions = [round(bounds2[0][1] - bounds2[0][0], 2), round(bounds2[1][1] - bounds2[1][0], 2)];
  var yAxis = [];
  var y2 = bounds2[1][1];
  var yStepInterval = round(dimensions[1] / steps[1], 4);
  while (round(y2, 2) >= bounds2[1][0]) {
    yAxis.push(round(y2, 2));
    y2 -= yStepInterval;
  }
  var xAxis = [];
  var x2 = bounds2[0][0];
  var xStepInterval = round(dimensions[0] / steps[0], 4);
  while (round(x2, 2) <= bounds2[0][1]) {
    xAxis.push(round(x2, 2));
    x2 += xStepInterval;
  }
  var _options = options, thickness = _options.thickness;
  if (!thickness) {
    if (values.length < 5) {
      thickness = "xlarge";
    } else if (values.length < 11) {
      thickness = "large";
    } else if (values.length < 21) {
      thickness = "medium";
    } else if (values.length < 61) {
      thickness = "small";
    } else if (values.length < 121) {
      thickness = "xsmall";
    } else {
      thickness = "hair";
    }
  }
  var pad = thicknessPad[thickness];
  return {
    axis: [xAxis, yAxis],
    bounds: bounds2,
    dimensions,
    pad,
    thickness
  };
};

// node_modules/grommet/es6/components/Clock/Clock.js
var import_react43 = __toESM(require_react());

// node_modules/grommet/es6/components/Clock/Analog.js
var import_react41 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Clock/StyledClock.js
init_styled_components_browser_esm();
var StyledHour = styled_components_browser_esm_default.line.withConfig({
  displayName: "StyledClock__StyledHour",
  componentId: "sc-y4xw8s-0"
})(["stroke-width:", ";stroke:", ";transition:stroke 1s ease-out;"], function(props) {
  return props.theme.clock.analog.hour.width;
}, function(props) {
  return normalizeColor(props.theme.clock.analog.hour.color, props.theme);
});
StyledHour.defaultProps = {};
Object.setPrototypeOf(StyledHour.defaultProps, defaultProps2);
var StyledMinute = styled_components_browser_esm_default.line.withConfig({
  displayName: "StyledClock__StyledMinute",
  componentId: "sc-y4xw8s-1"
})(["stroke-width:", ";stroke:", ";transition:stroke 1s ease-out;"], function(props) {
  return props.theme.clock.analog.minute.width;
}, function(props) {
  return normalizeColor(props.theme.clock.analog.minute.color, props.theme);
});
StyledMinute.defaultProps = {};
Object.setPrototypeOf(StyledMinute.defaultProps, defaultProps2);
var StyledSecond = styled_components_browser_esm_default.line.withConfig({
  displayName: "StyledClock__StyledSecond",
  componentId: "sc-y4xw8s-2"
})(["stroke-width:", ";stroke:", ";transition:stroke 1s ease-out;"], function(props) {
  return props.theme.clock.analog.second.width;
}, function(props) {
  return normalizeColor(props.theme.clock.analog.second.color, props.theme);
});
StyledSecond.defaultProps = {};
Object.setPrototypeOf(StyledSecond.defaultProps, defaultProps2);
var StyledAnalog = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledClock__StyledAnalog",
  componentId: "sc-y4xw8s-3"
})(["width:", ";height:", ";", " ", ";"], function(props) {
  return props.theme.clock.analog.size[props.size];
}, function(props) {
  return props.theme.clock.analog.size[props.size];
}, genericStyles, function(props) {
  return props.theme.clock.analog && props.theme.clock.analog.extend;
});
StyledAnalog.defaultProps = {};
Object.setPrototypeOf(StyledAnalog.defaultProps, defaultProps2);
var sizeStyle11 = function sizeStyle12(props) {
  var size = props.size || "medium";
  var data = props.theme.clock.digital.text[size] || {};
  return Ce(["font-size:", ";line-height:", ";"], data.size || props.theme.clock.digital.text.medium.size, data.height || props.theme.clock.digital.text.medium.height);
};
var StyledDigitalDigit = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledClock__StyledDigitalDigit",
  componentId: "sc-y4xw8s-4"
})(["position:relative;width:0.8em;text-align:center;overflow:hidden;", ";"], function(props) {
  return sizeStyle11(props);
});
StyledDigitalDigit.defaultProps = {};
Object.setPrototypeOf(StyledDigitalDigit.defaultProps, defaultProps2);
var previousUp = Ue(["0%{transform:translateY(0);}100%{transform:translateY(-100%);}"]);
var previousDown = Ue(["0%{transform:translateY(0);}100%{transform:translateY(100%);}"]);
var StyledDigitalPrevious = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledClock__StyledDigitalPrevious",
  componentId: "sc-y4xw8s-5"
})(["position:absolute;top:0;left:0;width:0.8em;text-align:center;animation:", " 0.5s forwards;"], function(props) {
  return props.direction === "down" ? previousDown : previousUp;
});
StyledDigitalPrevious.defaultProps = {};
Object.setPrototypeOf(StyledDigitalPrevious.defaultProps, defaultProps2);
var nextUp = Ue(["0%{transform:translateY(100%);}100%{transform:translateY(0);}"]);
var nextDown = Ue(["0%{transform:translateY(-100%);}100%{transform:translateY(0);}"]);
var StyledDigitalNext = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledClock__StyledDigitalNext",
  componentId: "sc-y4xw8s-6"
})(["position:absolute;top:0;left:0;width:0.8em;text-align:center;animation:", " 0.5s forwards;"], function(props) {
  return props.direction === "down" ? nextDown : nextUp;
});
StyledDigitalNext.defaultProps = {};
Object.setPrototypeOf(StyledDigitalNext.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Clock/Analog.js
var _excluded20 = ["elements", "precision"];
function _extends39() {
  _extends39 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends39.apply(this, arguments);
}
function _objectWithoutPropertiesLoose20(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ANGLE_UNIT = 6;
var HOUR_ANGLE_UNIT = 30;
var getClockDimensions = function getClockDimensions2(theme) {
  return {
    size: parseMetricToNum(theme.clock.analog.size.medium),
    secondSize: parseMetricToNum(theme.clock.analog.second.size),
    minuteSize: parseMetricToNum(theme.clock.analog.minute.size),
    hourSize: parseMetricToNum(theme.clock.analog.hour.size)
  };
};
var getClockState = function getClockState2(_ref) {
  var hours = _ref.hours, minutes = _ref.minutes, seconds = _ref.seconds;
  var hour12 = hours > 12 ? hours - 12 : hours;
  var minuteAngle = minutes * ANGLE_UNIT;
  return {
    hourAngle: hour12 * HOUR_ANGLE_UNIT + minutes / 2,
    minuteAngle,
    secondAngle: seconds * ANGLE_UNIT
  };
};
var Analog = (0, import_react41.forwardRef)(function(_ref2, ref) {
  var elements = _ref2.elements, precision = _ref2.precision, rest = _objectWithoutPropertiesLoose20(_ref2, _excluded20);
  var theme = (0, import_react41.useContext)(Ge) || defaultProps2.theme;
  var _useMemo = (0, import_react41.useMemo)(function() {
    return getClockState(elements);
  }, [elements]), hourAngle = _useMemo.hourAngle, minuteAngle = _useMemo.minuteAngle, secondAngle = _useMemo.secondAngle;
  var _useMemo2 = (0, import_react41.useMemo)(function() {
    return getClockDimensions(theme);
  }, [theme]), size = _useMemo2.size, secondSize = _useMemo2.secondSize, minuteSize = _useMemo2.minuteSize, hourSize = _useMemo2.hourSize;
  var halfSize = size / 2;
  var secondHand;
  if (precision === "seconds") {
    secondHand = import_react41.default.createElement(StyledSecond, {
      x1: halfSize,
      y1: halfSize,
      x2: halfSize,
      y2: secondSize,
      stroke: "#000000",
      strokeLinecap: theme.clock.analog.second.shape,
      style: {
        transform: "rotate(" + secondAngle + "deg)",
        transformOrigin: halfSize + "px " + halfSize + "px"
      }
    });
  }
  var minuteHand;
  if (precision === "seconds" || precision === "minutes") {
    minuteHand = import_react41.default.createElement(StyledMinute, {
      x1: halfSize,
      y1: halfSize,
      x2: halfSize,
      y2: minuteSize,
      stroke: "#000000",
      strokeLinecap: theme.clock.analog.minute.shape,
      style: {
        transform: "rotate(" + minuteAngle + "deg)",
        transformOrigin: halfSize + "px " + halfSize + "px"
      }
    });
  }
  return import_react41.default.createElement(StyledAnalog, _extends39({
    ref,
    version: "1.1",
    width: size,
    height: size,
    preserveAspectRatio: "xMidYMid meet",
    viewBox: "0 0 " + size + " " + size
  }, rest), secondHand, minuteHand, import_react41.default.createElement(StyledHour, {
    x1: halfSize,
    y1: halfSize,
    x2: halfSize,
    y2: hourSize,
    stroke: "#000000",
    strokeLinecap: theme.clock.analog.hour.shape,
    style: {
      transform: "rotate(" + hourAngle + "deg)",
      transformOrigin: halfSize + "px " + halfSize + "px"
    }
  }));
});
Analog.displayName = "Analog";

// node_modules/grommet/es6/components/Clock/Digital.js
var import_react42 = __toESM(require_react());
var _excluded21 = ["elements", "precision", "run", "size"];
function _extends40() {
  _extends40 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends40.apply(this, arguments);
}
function _objectWithoutPropertiesLoose21(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Digit = function Digit2(_ref) {
  var number = _ref.number, run = _ref.run, size = _ref.size;
  var _useState = (0, import_react42.useState)(number), previous = _useState[0], setPrevious = _useState[1];
  var _useState2 = (0, import_react42.useState)(), changing = _useState2[0], setChanging = _useState2[1];
  (0, import_react42.useEffect)(function() {
    if (number !== previous) {
      setChanging(true);
      var timer = setTimeout(function() {
        setPrevious(number);
        setChanging(false);
      }, 900);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [number, previous]);
  if (changing) {
    var direction = run === "backward" ? "down" : "up";
    return import_react42.default.createElement(StyledDigitalDigit, {
      size
    }, import_react42.default.createElement(StyledDigitalPrevious, {
      direction
    }, Math.floor(previous)), import_react42.default.createElement(StyledDigitalNext, {
      direction
    }, Math.floor(number)));
  }
  return import_react42.default.createElement(StyledDigitalDigit, {
    size
  }, Math.floor(number));
};
var Element = function Element2(_ref2) {
  var number = _ref2.number, run = _ref2.run, sep = _ref2.sep, size = _ref2.size;
  var tens = Math.floor(number / 10);
  var ones = number % 10;
  var result = [import_react42.default.createElement(Digit, {
    key: "tens",
    run,
    size,
    number: tens
  }), import_react42.default.createElement(Digit, {
    key: "ones",
    run,
    size,
    number: ones
  })];
  if (sep) {
    result.unshift(import_react42.default.createElement(StyledDigitalDigit, {
      key: "sep",
      size
    }, ":"));
  }
  return result;
};
var Digital = (0, import_react42.forwardRef)(function(props, ref) {
  var elements = props.elements, precision = props.precision, run = props.run, size = props.size, rest = _objectWithoutPropertiesLoose21(props, _excluded21);
  var seconds;
  if (precision === "seconds") {
    seconds = import_react42.default.createElement(Element, {
      number: elements.seconds,
      run,
      size,
      sep: true
    });
  }
  var minutes;
  if (precision === "minutes" || precision === "seconds") {
    minutes = import_react42.default.createElement(Element, {
      number: elements.minutes,
      run,
      size,
      sep: true
    });
  }
  return import_react42.default.createElement(Box, _extends40({
    ref,
    direction: "row"
  }, rest), import_react42.default.createElement(Element, {
    number: elements.hours12 || elements.hours,
    run,
    size
  }), minutes, seconds);
});

// node_modules/grommet/es6/components/Clock/propTypes.js
var import_prop_types24 = __toESM(require_prop_types());
function _extends41() {
  _extends41 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends41.apply(this, arguments);
}
var PropType21 = {};
if (true) {
  PropType21 = _extends41({}, genericProps, {
    hourLimit: import_prop_types24.default.oneOf([12, 24, "12", "24"]),
    onChange: import_prop_types24.default.func,
    precision: import_prop_types24.default.oneOf(["hours", "minutes", "seconds"]),
    run: import_prop_types24.default.oneOfType([import_prop_types24.default.bool, import_prop_types24.default.oneOf(["backward", "forward"])]),
    size: import_prop_types24.default.oneOfType([import_prop_types24.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge"]), import_prop_types24.default.string]),
    time: import_prop_types24.default.string,
    type: import_prop_types24.default.oneOf(["analog", "digital"])
  });
}
var ClockPropTypes = PropType21;

// node_modules/grommet/es6/components/Clock/Clock.js
var _excluded24 = ["hourLimit", "onChange", "precision", "run", "size", "time", "type"];
function _extends42() {
  _extends42 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends42.apply(this, arguments);
}
function _objectWithoutPropertiesLoose22(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var TIME_REGEXP = /T([0-9]{2}):([0-9]{2})(?::([0-9.,]{2,}))?/;
var DURATION_REGEXP = /^(-|\+)?P.*T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?$/;
var parseTime = function parseTime2(time, hourLimit) {
  var result = {};
  if (time) {
    var match = DURATION_REGEXP.exec(time);
    if (match) {
      result.hours = parseFloat(match[2]) || 0;
      if (hourLimit === 12) {
        result.hours12 = result.hours > 12 ? result.hours - 12 : result.hours;
      }
      result.minutes = parseFloat(match[3]) || 0;
      result.seconds = parseFloat(match[4]) || 0;
      result.duration = true;
    } else {
      match = TIME_REGEXP.exec(time);
      if (match) {
        result.hours = parseFloat(match[1]);
        if (hourLimit === 12) {
          result.hours12 = result.hours > 12 ? result.hours - 12 : result.hours;
        }
        result.minutes = parseFloat(match[2]) || 0;
        result.seconds = parseFloat(match[3]) || 0;
      } else {
        console.error("Grommet Clock cannot parse '" + time + "'");
      }
    }
  } else {
    var date = new Date();
    result.hours = date.getHours();
    result.minutes = date.getMinutes();
    result.seconds = date.getSeconds();
  }
  return result;
};
var Clock = (0, import_react43.forwardRef)(function(_ref, ref) {
  var _ref$hourLimit = _ref.hourLimit, hourLimit = _ref$hourLimit === void 0 ? 24 : _ref$hourLimit, onChange = _ref.onChange, _ref$precision = _ref.precision, precision = _ref$precision === void 0 ? "seconds" : _ref$precision, _ref$run = _ref.run, run = _ref$run === void 0 ? "forward" : _ref$run, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, time = _ref.time, _ref$type = _ref.type, type = _ref$type === void 0 ? "analog" : _ref$type, rest = _objectWithoutPropertiesLoose22(_ref, _excluded24);
  var _useState = (0, import_react43.useState)(parseTime(time, hourLimit)), elements = _useState[0], setElements = _useState[1];
  (0, import_react43.useEffect)(function() {
    return setElements(parseTime(time, hourLimit));
  }, [hourLimit, time]);
  (0, import_react43.useEffect)(function() {
    var atDurationEnd = run === "backward" && elements.duration && !elements.hours && !elements.minutes && !elements.seconds;
    if (run && !atDurationEnd) {
      var interval = 1e3;
      var increment = "seconds";
      if (precision !== "seconds" && elements.seconds === 0) {
        interval *= 60;
        increment = "minutes";
        if (precision !== "minutes" && elements.minutes === 0) {
          interval *= 60;
          increment = "hours";
        }
      }
      var timer = setInterval(function() {
        var nextElements = _extends42({}, elements);
        if (increment === "seconds") {
          if (run === "backward") {
            nextElements.seconds -= 1;
          } else {
            nextElements.seconds += 1;
          }
        } else if (increment === "minutes") {
          if (run === "backward") {
            nextElements.minutes -= 1;
          } else {
            nextElements.minutes += 1;
          }
        } else if (increment === "hours") {
          if (run === "backward") {
            nextElements.hours -= 1;
          } else {
            nextElements.hours += 1;
          }
        }
        if (nextElements.seconds >= 60) {
          nextElements.minutes += Math.floor(nextElements.seconds / 60);
          nextElements.seconds = 0;
        } else if (nextElements.seconds < 0) {
          nextElements.minutes += Math.floor(nextElements.seconds / 60);
          nextElements.seconds = 59;
        }
        if (nextElements.minutes >= 60) {
          nextElements.hours += Math.floor(nextElements.minutes / 60);
          nextElements.minutes = 0;
        } else if (nextElements.minutes < 0) {
          nextElements.hours += Math.floor(nextElements.minutes / 60);
          nextElements.minutes = 59;
        }
        if (nextElements.hours >= 24 || nextElements.hours < 0) {
          nextElements.hours = 0;
        }
        if (hourLimit === 12) {
          nextElements.hours12 = nextElements.hours > 12 ? nextElements.hours - 12 : nextElements.hours;
        }
        setElements(nextElements);
        if (onChange) {
          var e2 = nextElements;
          if (e2.duration) {
            onChange("P" + e2.hours + "H" + e2.minutes + "M" + e2.seconds + "S");
          } else {
            onChange("T" + e2.hours + ":" + e2.minutes + ":" + e2.seconds);
          }
        }
      }, interval);
      return function() {
        return clearInterval(timer);
      };
    }
    return void 0;
  }, [elements, hourLimit, onChange, precision, run]);
  var content;
  if (type === "analog") {
    content = import_react43.default.createElement(Analog, _extends42({
      ref,
      elements,
      precision,
      size
    }, rest));
  } else if (type === "digital") {
    content = import_react43.default.createElement(Digital, _extends42({
      ref,
      elements,
      precision,
      run,
      size
    }, rest));
  }
  return content;
});
Clock.displayName = "Clock";
Clock.propTypes = ClockPropTypes;

// node_modules/grommet/es6/components/DataChart/DataChart.js
var import_react52 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Grid/Grid.js
var import_react44 = __toESM(require_react());

// node_modules/grommet/es6/components/Grid/StyledGrid.js
init_styled_components_browser_esm();
var fillStyle10 = function fillStyle11(fill) {
  if (!fill) {
    return fill;
  }
  if (fill === "horizontal") {
    return "width: 100%;";
  }
  if (fill === "vertical") {
    return "height: 100%;";
  }
  return "\n      width: 100%;\n      height: 100%;\n    ";
};
var JUSTIFY_MAP2 = {
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var justifyStyle2 = Ce(["justify-items:", ";"], function(props) {
  return JUSTIFY_MAP2[props.justify];
});
var JUSTIFY_CONTENT_MAP = {
  around: "space-around",
  between: "space-between",
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var justifyContentStyle = Ce(["justify-content:", ";"], function(props) {
  return JUSTIFY_CONTENT_MAP[props.justifyContent];
});
var gapSizes = function gapSizes2(props) {
  var result = [];
  if (typeof props.gap === "string") {
    var size = props.theme.global.edgeSize[props.gap] || props.gap;
    result[0] = size;
    result[1] = size;
  } else if (props.gap) {
    if (props.gap.row)
      result[0] = props.theme.global.edgeSize[props.gap.row] || props.gap.row;
    if (props.gap.column)
      result[1] = props.theme.global.edgeSize[props.gap.column] || props.gap.column;
  }
  return result;
};
var gapStyle3 = function gapStyle4(props) {
  var sizes4 = gapSizes(props);
  if (sizes4[0] !== void 0 && sizes4[1] !== void 0) {
    return "grid-gap: " + sizes4[0] + " " + sizes4[1] + ";";
  }
  if (sizes4[0] !== void 0) {
    return "grid-row-gap: " + sizes4[0] + ";";
  }
  if (sizes4[1] !== void 0) {
    return "grid-column-gap: " + sizes4[1] + ";";
  }
  return "";
};
var SIZE_MAP = {
  flex: "1fr",
  full: "100%",
  "1/2": "50%",
  "1/4": "25%",
  "2/4": "50%",
  "3/4": "75%",
  "1/3": "33.33%",
  "2/3": "66.66%"
};
var normalizeSize = function normalizeSize2(size, props) {
  return SIZE_MAP[size] || props.theme.global.size[size] || size;
};
var getRepeatCount = function getRepeatCount2(count) {
  return typeof count === "number" ? count : "auto-" + (count || "fit");
};
var getRepeatSize = function getRepeatSize2(size, props) {
  if (size === "flex")
    return "1fr";
  var gaps = gapSizes(props);
  var min;
  var max;
  var minFill;
  if (Array.isArray(size)) {
    var _size$ = size[0], minSize = _size$ === void 0 ? "auto" : _size$, _size$2 = size[1], maxSize = _size$2 === void 0 ? "auto" : _size$2;
    min = normalizeSize(minSize, props);
    if (min.search(/px/) !== -1)
      minFill = true;
    max = normalizeSize(maxSize, props);
    if (gaps[1] !== void 0) {
      if (minSize.indexOf("/") !== -1)
        min = "calc(" + min + " - (" + gaps[1] + " * (1 - " + minSize + ")))";
      if (maxSize.indexOf("/") !== -1)
        max = "calc(" + max + " - (" + gaps[1] + " * (1 - " + maxSize + ")))";
    }
  } else {
    min = normalizeSize(size, props);
    if (min.search(/px/) !== -1)
      minFill = true;
    max = "1fr";
    if (gaps[1] !== void 0) {
      if (size.indexOf("/") !== -1)
        min = "calc(" + min + " - (" + gaps[1] + " * (1 - " + size + ")))";
    }
  }
  if (minFill) {
    min = "min(" + min + ", 100%)";
  }
  return "minmax(" + min + ", " + max + ")";
};
var columnsStyle = function columnsStyle2(props) {
  if (Array.isArray(props.columns)) {
    return Ce(["grid-template-columns:", ";"], props.columns.map(function(s2) {
      if (Array.isArray(s2)) {
        return "minmax(" + normalizeSize(s2[0], props) + ", " + normalizeSize(s2[1], props) + ")";
      }
      return normalizeSize(s2, props);
    }).join(" "));
  }
  if (typeof props.columns === "object") {
    return Ce(["grid-template-columns:repeat( ", ",", " );"], getRepeatCount(props.columns.count), getRepeatSize(props.columns.size, props));
  }
  return Ce(["grid-template-columns:repeat( auto-fill,", " );"], getRepeatSize(props.columns, props));
};
var rowsStyle = function rowsStyle2(props) {
  if (Array.isArray(props.rowsProp)) {
    return Ce(["grid-template-rows:", ";"], props.rowsProp.map(function(s2) {
      if (Array.isArray(s2)) {
        return "minmax(" + normalizeSize(s2[0], props) + ", " + normalizeSize(s2[1], props) + ")";
      }
      return normalizeSize(s2, props);
    }).join(" "));
  }
  return Ce(["grid-auto-rows:", ";"], props.theme.global.size[props.rowsProp]);
};
var areasStyle = function areasStyle2(props) {
  if (!Array.isArray(props.rowsProp) || !Array.isArray(props.columns)) {
    console.warn("Grid `areas` requires `rows` and `columns` to be arrays.");
  }
  if (Array.isArray(props.areas) && props.areas.every(function(area) {
    return Array.isArray(area);
  })) {
    return "grid-template-areas: " + props.areas.map(function(area) {
      return '"' + area.join(" ") + '"';
    }).join(" ") + ";";
  }
  var cells = props.rowsProp.map(function() {
    return props.columns.map(function() {
      return ".";
    });
  });
  props.areas.forEach(function(area) {
    for (var row = area.start[1]; row <= area.end[1]; row += 1) {
      for (var column = area.start[0]; column <= area.end[0]; column += 1) {
        cells[row][column] = area.name;
      }
    }
  });
  return "grid-template-areas: " + cells.map(function(r2) {
    return '"' + r2.join(" ") + '"';
  }).join(" ") + ";";
};
var StyledGrid = styled_components_browser_esm_default.div.attrs(function(props) {
  return {
    "aria-label": props.a11yTitleProp
  };
}).withConfig({
  displayName: "StyledGrid",
  componentId: "sc-1wofa1l-0"
})(["display:grid;box-sizing:border-box;", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.border && (Array.isArray(props.border) ? props.border.map(function(border) {
    return borderStyle(border, props.responsive, props.theme);
  }) : borderStyle(props.border, props.responsive, props.theme));
}, function(props) {
  return fillStyle10(props.fillContainer);
}, function(props) {
  return props.align && alignStyle;
}, function(props) {
  return props.alignContent && alignContentStyle;
}, function(props) {
  return props.areas && areasStyle(props);
}, function(props) {
  return props.columns && columnsStyle(props);
}, function(props) {
  return props.gap && gapStyle3(props);
}, function(props) {
  return props.justify && justifyStyle2;
}, function(props) {
  return props.justifyContent && justifyContentStyle;
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.global.edgeSize.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.rowsProp && rowsStyle(props);
}, function(props) {
  return props.heightProp && heightStyle(props.heightProp, props.theme);
}, function(props) {
  return props.widthProp && widthStyle(props.widthProp, props.theme);
}, function(props) {
  return props.theme.grid && props.theme.grid.extend;
});
StyledGrid.defaultProps = {};
Object.setPrototypeOf(StyledGrid.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Grid/propTypes.js
var import_prop_types25 = __toESM(require_prop_types());
function _extends43() {
  _extends43 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends43.apply(this, arguments);
}
var fixedSizes = ["xsmall", "small", "medium", "large", "xlarge"];
var sizes = ["xsmall", "small", "medium", "large", "xlarge", "full", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "flex", "auto"];
var edgeSizes = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "none"];
var BORDER_SHAPE2 = import_prop_types25.default.shape({
  color: import_prop_types25.default.oneOfType([import_prop_types25.default.string, import_prop_types25.default.shape({
    dark: import_prop_types25.default.string,
    light: import_prop_types25.default.string
  })]),
  side: import_prop_types25.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]),
  size: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types25.default.string]),
  style: import_prop_types25.default.oneOf(["solid", "dashed", "dotted", "double", "groove", "ridge", "inset", "outset", "hidden"])
});
var PropType22 = {};
if (true) {
  PropType22 = _extends43({}, genericProps, {
    align: alignPropType,
    alignContent: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["around", "baseline", "between", "center", "evenly", "end", "start", "stretch"]), import_prop_types25.default.string]),
    areas: import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.shape({
      name: import_prop_types25.default.string,
      start: import_prop_types25.default.arrayOf(import_prop_types25.default.number),
      end: import_prop_types25.default.arrayOf(import_prop_types25.default.number)
    })), import_prop_types25.default.arrayOf(import_prop_types25.default.arrayOf(import_prop_types25.default.string))]),
    border: import_prop_types25.default.oneOfType([import_prop_types25.default.bool, import_prop_types25.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all"]), BORDER_SHAPE2, import_prop_types25.default.arrayOf(BORDER_SHAPE2)]),
    columns: import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(sizes), import_prop_types25.default.string])), import_prop_types25.default.oneOf(sizes), import_prop_types25.default.string])), import_prop_types25.default.oneOf(sizes), import_prop_types25.default.shape({
      count: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["fit", "fill"]), import_prop_types25.default.number]),
      size: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(sizes), import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(sizes), import_prop_types25.default.string])), import_prop_types25.default.string])
    }), import_prop_types25.default.string]),
    fill: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["horizontal", "vertical"]), import_prop_types25.default.bool]),
    gap: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(edgeSizes), import_prop_types25.default.shape({
      row: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(edgeSizes), import_prop_types25.default.string]),
      column: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(edgeSizes), import_prop_types25.default.string])
    }), import_prop_types25.default.string]),
    height: heightPropType,
    justify: import_prop_types25.default.oneOf(["start", "center", "end", "stretch"]),
    justifyContent: import_prop_types25.default.oneOf(["start", "center", "end", "between", "around", "stretch"]),
    pad: padPropType,
    responsive: import_prop_types25.default.bool,
    rows: import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(sizes), import_prop_types25.default.string])), import_prop_types25.default.oneOf(sizes), import_prop_types25.default.string])), import_prop_types25.default.oneOf(fixedSizes), import_prop_types25.default.string]),
    tag: import_prop_types25.default.oneOfType([import_prop_types25.default.string, import_prop_types25.default.func]),
    as: import_prop_types25.default.oneOfType([import_prop_types25.default.string, import_prop_types25.default.func]),
    width: widthPropType
  });
}
var GridPropTypes = PropType22;

// node_modules/grommet/es6/components/Grid/Grid.js
var _excluded25 = ["a11yTitle", "aria-label", "border", "fill", "height", "responsive", "rows", "tag", "as", "width"];
function _extends44() {
  _extends44 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends44.apply(this, arguments);
}
function _objectWithoutPropertiesLoose23(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Grid = (0, import_react44.forwardRef)(function(props, ref) {
  var a11yTitle = props.a11yTitle, ariaLabel = props["aria-label"], border = props.border, fill = props.fill, height = props.height, _props$responsive = props.responsive, responsive = _props$responsive === void 0 ? true : _props$responsive, rows = props.rows, tag = props.tag, as = props.as, width = props.width, rest = _objectWithoutPropertiesLoose23(props, _excluded25);
  return import_react44.default.createElement(StyledGrid, _extends44({
    ref,
    a11yTitleProp: ariaLabel || a11yTitle,
    as: !as && tag ? tag : as,
    border,
    fillContainer: fill,
    heightProp: height,
    responsive,
    rowsProp: rows,
    widthProp: width
  }, rest));
});
Grid.displayName = "Grid";
Grid.propTypes = GridPropTypes;
Grid.available = typeof window !== "undefined" && window.CSS && window.CSS.supports && window.CSS.supports("display", "grid");

// node_modules/grommet/es6/components/DataChart/Detail.js
var import_react46 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DataChart/utils.js
var points = ["circle", "diamond", "square", "star", "triangle", "triangleDown"];
var heightYGranularity = {
  xxsmall: {
    fine: 2,
    medium: 2
  },
  xsmall: {
    fine: 3,
    medium: 2
  },
  small: {
    fine: 5,
    medium: 3
  },
  medium: {
    fine: 7,
    medium: 5
  },
  large: {
    fine: 9,
    medium: 5
  },
  xlarge: {
    fine: 11,
    medium: 5
  }
};
var halfPad = {
  xlarge: "large",
  large: "medium",
  medium: "small",
  small: "xsmall",
  xsmall: "xxsmall"
};
var doublePad = {
  large: "xlarge",
  medium: "large",
  small: "medium",
  xsmall: "small",
  xxsmall: "xsmall"
};
var createDateFormat = function createDateFormat2(firstValue, lastValue, full) {
  var dateFormat;
  var startDate = new Date(firstValue);
  var endDate = new Date(lastValue);
  if (!Number.isNaN(startDate.getTime()) && !Number.isNaN(endDate.getTime())) {
    var delta = Math.abs(endDate - startDate);
    var options;
    if (delta < 6e4)
      options = full ? {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        day: void 0
      } : {
        second: "2-digit",
        day: void 0
      };
    else if (delta < 36e5)
      options = full ? {
        hour: "numeric",
        minute: "2-digit",
        day: void 0
      } : {
        minute: "2-digit",
        day: void 0
      };
    else if (delta < 864e5)
      options = {
        hour: "numeric"
      };
    else if (delta < 2592e6)
      options = {
        month: full ? "short" : "numeric",
        day: "numeric"
      };
    else if (delta < 315576e5)
      options = {
        month: full ? "long" : "short"
      };
    else
      options = {
        year: "numeric"
      };
    if (options)
      dateFormat = new Intl.DateTimeFormat(void 0, options).format;
  }
  return dateFormat;
};

// node_modules/grommet/es6/components/DataChart/Swatch.js
var import_react45 = __toESM(require_react());
init_styled_components_browser_esm();
var Swatch = function Swatch2(_ref) {
  var aspect = _ref.aspect, color = _ref.color, point = _ref.point, thickness = _ref.thickness;
  var theme = (0, import_react45.useContext)(Ge);
  var dim = parseInt(theme.global.spacing, 10) / 2;
  var half = dim / 2;
  var width = dim;
  var content;
  if (aspect === "x")
    content = import_react45.default.createElement("path", {
      d: "M 0 " + half + " L " + dim + " " + half,
      stroke: "#000"
    });
  else if (aspect === "y")
    content = import_react45.default.createElement("path", {
      d: "M " + half + " 0 L " + half + " " + dim,
      stroke: "#000"
    });
  else if (aspect === "thickness")
    content = import_react45.default.createElement("g", {
      stroke: "#000",
      fill: "none"
    }, import_react45.default.createElement("circle", {
      cx: half,
      cy: half,
      r: half / 4
    }), import_react45.default.createElement("circle", {
      cx: half,
      cy: half,
      r: half - 1
    }));
  else if (aspect === "color")
    content = import_react45.default.createElement("g", null, import_react45.default.createElement("rect", {
      x: 0,
      y: 0,
      width: half,
      height: dim,
      fill: "#000",
      opacity: 0.4
    }), import_react45.default.createElement("rect", {
      x: half,
      y: 0,
      width: half,
      height: dim,
      fill: "#000",
      opacity: 0.8
    }));
  else if (point === "circle")
    content = import_react45.default.createElement("circle", {
      cx: half,
      cy: half,
      r: half
    });
  else {
    var d2;
    if (point === "diamond")
      d2 = "M " + half + " 0 L " + dim + " " + half + " L " + half + " " + dim + " L 0 " + half + " Z";
    else if (point === "star") {
      var off1 = half / 3;
      var off2 = off1 * 2;
      d2 = "M " + half + " 0 L " + (half - off2) + " " + dim + " L " + dim + " " + (half - off1) + " L 0 " + (half - off1) + " L " + (half + off2) + " " + dim + " Z";
    } else if (point === "triangle")
      d2 = "M " + half + " 0 L " + dim + " " + dim + " L 0 " + dim + " Z";
    else if (point === "triangleDown")
      d2 = "M 0 0 L " + dim + " 0 L " + half + " " + dim + " Z";
    else if (point === "square")
      d2 = "M 0 0 L " + dim + " 0 L " + dim + " " + dim + " L 0 " + dim + " Z";
    else if (thickness) {
      width = parseMetricToNum(theme.global.edgeSize[thickness]) || dim;
      d2 = "M 0 0 L " + width + " 0 L " + width + " " + dim + " L 0 " + dim + " Z";
    } else
      d2 = "M 0 0 L " + dim + " 0 L " + dim + " " + dim + " L 0 " + dim + " Z";
    content = import_react45.default.createElement("path", {
      d: d2
    });
  }
  var opacity = color && color.opacity ? theme.global.opacity[color.opacity] : void 0;
  return import_react45.default.createElement("svg", {
    width,
    height: dim,
    viewBox: "0 0 " + width + " " + dim,
    fill: color ? normalizeColor(color.color || color, theme) : void 0,
    opacity,
    stroke: "none"
  }, content);
};

// node_modules/grommet/es6/components/DataChart/Detail.js
var DetailControl = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Detail__DetailControl",
  componentId: "sc-huiwg9-0"
})(["&:focus{", "}&:focus:not(:focus-visible){", "}"], focusStyle(), unfocusStyle());
var Detail = function Detail2(_ref) {
  var activeProperty = _ref.activeProperty, axis = _ref.axis, data = _ref.data, pad = _ref.pad, series = _ref.series, seriesStyles = _ref.seriesStyles, renderValue = _ref.renderValue, thickness = _ref.thickness;
  var _useState = (0, import_react46.useState)(), detailIndex = _useState[0], setDetailIndex = _useState[1];
  var activeIndex = (0, import_react46.useRef)();
  var detailRefs = (0, import_react46.useMemo)(function() {
    return [];
  }, []);
  var onMouseLeave = (0, import_react46.useCallback)(function(event) {
    var rect = activeIndex.current.getBoundingClientRect();
    if (event.pageX < rect.left || event.pageX > rect.right || event.pageY < rect.top || event.pageY > rect.bottom) {
      activeIndex.current = void 0;
      setDetailIndex(void 0);
    }
  }, []);
  return import_react46.default.createElement(import_react46.default.Fragment, null, import_react46.default.createElement(Keyboard, {
    onLeft: function onLeft() {
      if (detailIndex === void 0)
        setDetailIndex(data.length - 1);
      else if (detailIndex > 0)
        setDetailIndex(detailIndex - 1);
    },
    onRight: function onRight() {
      if (detailIndex === void 0)
        setDetailIndex(0);
      else if (detailIndex < data.length - 1)
        setDetailIndex(detailIndex + 1);
    }
  }, import_react46.default.createElement(DetailControl, {
    key: "band",
    tabIndex: 0,
    direction: "row",
    fill: true,
    pad: (pad == null ? void 0 : pad.horizontal) && halfPad[pad.horizontal] && {
      horizontal: halfPad[pad.horizontal]
    } || pad,
    justify: "between",
    responsive: false,
    onFocus: function onFocus() {
    },
    onBlur: function onBlur() {
      return setDetailIndex(void 0);
    }
  }, data.map(function(_2, i2) {
    return import_react46.default.createElement(Box, {
      key: i2,
      align: "center",
      responsive: false,
      width: thickness,
      onMouseOver: function onMouseOver(event) {
        activeIndex.current = event.currentTarget;
        setDetailIndex(i2);
      },
      onMouseLeave,
      onFocus: function onFocus() {
      },
      onBlur: function onBlur() {
      }
    }, import_react46.default.createElement(Box, {
      ref: function ref(c2) {
        detailRefs[i2] = c2;
      },
      fill: "vertical",
      border: detailIndex === i2 ? true : void 0
    }));
  }))), detailIndex !== void 0 && detailRefs[detailIndex] && import_react46.default.createElement(Drop, {
    key: "drop",
    target: detailRefs[detailIndex],
    align: detailIndex > data.length / 2 ? {
      right: "left"
    } : {
      left: "right"
    },
    plain: true,
    onMouseLeave
  }, import_react46.default.createElement(Box, {
    pad: "small",
    background: {
      color: "background-back"
    }
  }, import_react46.default.createElement(Grid, {
    columns: ["auto", "auto", "auto"],
    gap: "xsmall",
    align: "center"
  }, series.filter(function(_ref2) {
    var property = _ref2.property;
    return !activeProperty || activeProperty === property || axis && axis.x && axis.x.property === property;
  }).map(function(serie) {
    var propertyStyle = seriesStyles[serie.property];
    return import_react46.default.createElement(import_react46.Fragment, {
      key: serie.property
    }, propertyStyle ? import_react46.default.createElement(Swatch, propertyStyle) : import_react46.default.createElement("span", null), import_react46.default.createElement(Text, {
      size: "small"
    }, serie.label || serie.property), import_react46.default.createElement(Text, {
      size: "small",
      weight: "bold"
    }, renderValue(serie, detailIndex)));
  })))));
};

// node_modules/grommet/es6/components/DataChart/Legend.js
var import_react47 = __toESM(require_react());
function _extends45() {
  _extends45 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends45.apply(this, arguments);
}
var Legend = function Legend2(_ref) {
  var activeProperty = _ref.activeProperty, seriesProp = _ref.series, seriesStyles = _ref.seriesStyles, setActiveProperty = _ref.setActiveProperty;
  var series = (0, import_react47.useMemo)(function() {
    return seriesProp.filter(function(s2) {
      return seriesStyles[s2.property];
    });
  }, [seriesProp, seriesStyles]);
  var interactive = (0, import_react47.useMemo)(function() {
    return series.filter(function(_ref2) {
      var property = _ref2.property;
      return !seriesStyles[property].aspect;
    }).length > 1;
  }, [series, seriesStyles]);
  return import_react47.default.createElement(Box, {
    margin: {
      top: "small"
    },
    direction: "row",
    wrap: true,
    gap: "small"
  }, series.map(function(_ref3) {
    var property = _ref3.property, label = _ref3.label;
    var isActive = property === activeProperty;
    var swatchProps = {};
    var textProps = {};
    if (activeProperty !== void 0) {
      if (!isActive) {
        textProps.color = "text-xweak";
      } else {
        textProps.color = "text-strong";
      }
    }
    var content = import_react47.default.createElement(Box, {
      key: property,
      direction: "row",
      align: "center",
      pad: {
        horizontal: "small",
        vertical: "xsmall"
      },
      gap: "xsmall"
    }, import_react47.default.createElement(Swatch, _extends45({}, seriesStyles[property], swatchProps)), import_react47.default.createElement(Text, textProps, label || property));
    if (interactive) {
      content = import_react47.default.createElement(Button, {
        key: property,
        active: isActive,
        onClick: function onClick() {
          return setActiveProperty(isActive ? void 0 : property);
        },
        hoverIndicator: true
      }, content);
    }
    return content;
  }));
};

// node_modules/grommet/es6/components/DataChart/XAxis.js
var import_react48 = __toESM(require_react());
function _extends46() {
  _extends46 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends46.apply(this, arguments);
}
var XAxis = (0, import_react48.forwardRef)(function(_ref, ref) {
  var chartProps = _ref.chartProps, pad = _ref.pad, renderValue = _ref.renderValue, serie = _ref.serie;
  var _axis = (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis, axisValues = _axis[0];
  var itemProps = axisValues.length === 2 ? {} : {
    width: "1px",
    overflow: "visible",
    align: "center"
  };
  return import_react48.default.createElement(Box, {
    ref,
    gridArea: "xAxis",
    direction: "row",
    justify: "between",
    pad: pad != null && pad.horizontal ? {
      horizontal: pad.horizontal
    } : void 0
  }, axisValues.map(function(dataIndex, i2) {
    return import_react48.default.createElement(Box, _extends46({
      key: i2
    }, itemProps), serie ? renderValue(serie, dataIndex) : dataIndex);
  }));
});

// node_modules/grommet/es6/components/DataChart/YAxis.js
var import_react49 = __toESM(require_react());
init_styled_components_browser_esm();
var YAxis = (0, import_react49.forwardRef)(function(_ref, ref) {
  var chartProps = _ref.chartProps, pad = _ref.pad, renderValue = _ref.renderValue, _ref$serie = _ref.serie, serie = _ref$serie === void 0 ? {} : _ref$serie;
  var theme = (0, import_react49.useContext)(Ge);
  var render = serie.render, suffix = serie.suffix;
  var _axis = (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis, axisValues = _axis[1];
  var divideBy;
  var unit;
  if (!render && !suffix) {
    var maxValue = Math.max.apply(Math, axisValues.map(function(v2) {
      return Math.abs(v2);
    }));
    if (maxValue > 1e7) {
      divideBy = 1e6;
      unit = "M";
    } else if (maxValue > 1e4) {
      divideBy = 1e3;
      unit = "K";
    }
  }
  var edgeSize = doublePad[pad.vertical || pad];
  var basis = theme.global.edgeSize[edgeSize] || edgeSize;
  return import_react49.default.createElement(Box, {
    ref,
    gridArea: "yAxis",
    justify: "between",
    flex: true
  }, axisValues.map(function(axisValue, i2) {
    var content = renderValue(serie, void 0, axisValue);
    if (content === axisValue) {
      if (divideBy)
        content = round(content / divideBy, 0);
      if (unit)
        content = "" + content + unit;
    }
    return import_react49.default.createElement(Box, {
      key: i2,
      align: "end",
      basis,
      flex: "shrink",
      justify: basis ? "center" : void 0
    }, content);
  }));
});

// node_modules/grommet/es6/components/DataChart/XGuide.js
var import_react50 = __toESM(require_react());
var XGuide = (0, import_react50.forwardRef)(function(_ref, ref) {
  var guide = _ref.guide, pad = _ref.pad;
  return import_react50.default.createElement(Box, {
    ref,
    fill: true,
    direction: "row",
    justify: "between",
    pad,
    responsive: false
  }, Array.from({
    length: guide.x.count
  }).map(function(_2, i2) {
    return import_react50.default.createElement(Box, {
      key: i2,
      border: "left"
    });
  }));
});

// node_modules/grommet/es6/components/DataChart/YGuide.js
var import_react51 = __toESM(require_react());
var YGuide = (0, import_react51.forwardRef)(function(_ref, ref) {
  var guide = _ref.guide, pad = _ref.pad;
  return import_react51.default.createElement(Box, {
    ref,
    fill: true,
    justify: "between",
    pad,
    responsive: false
  }, Array.from({
    length: guide.y.count
  }).map(function(_2, i2) {
    return import_react51.default.createElement(Box, {
      key: i2,
      border: "top"
    });
  }));
});

// node_modules/grommet/es6/components/DataChart/propTypes.js
var import_prop_types26 = __toESM(require_prop_types());
function _extends47() {
  _extends47 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends47.apply(this, arguments);
}
var colorType = import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.arrayOf(import_prop_types26.default.shape({
  color: import_prop_types26.default.string,
  value: import_prop_types26.default.number
}))]);
var thicknessType2 = import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["hair", "xsmall", "small", "medium", "large", "xlarge", "none"]), import_prop_types26.default.string]);
var chartType = import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.shape({
  property: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.arrayOf(import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.shape({
    property: import_prop_types26.default.string,
    color: colorType
  })])), import_prop_types26.default.shape({
    color: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.shape({
      property: import_prop_types26.default.string,
      transform: import_prop_types26.default.func
    })]),
    thickness: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.shape({
      property: import_prop_types26.default.string,
      transform: import_prop_types26.default.func
    })]),
    x: import_prop_types26.default.string,
    y: import_prop_types26.default.string
  })]),
  color: colorType,
  dash: import_prop_types26.default.bool,
  opacity: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["weak", "medium", "strong"]), import_prop_types26.default.number, import_prop_types26.default.bool]),
  point: pointPropType,
  round: import_prop_types26.default.bool,
  thickness: thicknessType2,
  type: import_prop_types26.default.oneOf(["bar", "bars", "line", "area", "areas", "lines", "point"])
})]);
var seriesType = import_prop_types26.default.oneOfType([
  import_prop_types26.default.string,
  import_prop_types26.default.shape({
    label: import_prop_types26.default.oneOfType([import_prop_types26.default.string]),
    prefix: import_prop_types26.default.string,
    property: import_prop_types26.default.string,
    render: import_prop_types26.default.func,
    suffix: import_prop_types26.default.string
  })
]);
var granularityType = import_prop_types26.default.oneOf(["coarse", "medium", "fine"]);
var PropType23 = {};
if (true) {
  PropType23 = _extends47({}, genericProps, {
    axis: import_prop_types26.default.oneOfType([import_prop_types26.default.bool, import_prop_types26.default.shape({
      x: import_prop_types26.default.oneOfType([import_prop_types26.default.bool, import_prop_types26.default.string, import_prop_types26.default.shape({
        property: import_prop_types26.default.string,
        granularity: granularityType
      })]),
      y: import_prop_types26.default.oneOfType([import_prop_types26.default.bool, import_prop_types26.default.string, import_prop_types26.default.shape({
        property: import_prop_types26.default.string,
        granularity: granularityType
      })])
    })]),
    bounds: import_prop_types26.default.oneOf(["align"]),
    chart: import_prop_types26.default.oneOfType([chartType, import_prop_types26.default.arrayOf(chartType)]),
    data: import_prop_types26.default.arrayOf(import_prop_types26.default.shape({})),
    detail: import_prop_types26.default.bool,
    gap: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types26.default.string]),
    guide: import_prop_types26.default.oneOfType([import_prop_types26.default.bool, import_prop_types26.default.shape({
      x: import_prop_types26.default.oneOfType([import_prop_types26.default.bool, import_prop_types26.default.shape({
        granularity: granularityType
      })]),
      y: import_prop_types26.default.oneOfType([import_prop_types26.default.bool, import_prop_types26.default.shape({
        granularity: granularityType
      })])
    })]),
    legend: import_prop_types26.default.bool,
    offset: import_prop_types26.default.bool,
    pad: padPropType,
    series: import_prop_types26.default.oneOfType([seriesType, import_prop_types26.default.arrayOf(seriesType)]),
    size: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["fill"]), import_prop_types26.default.shape({
      height: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill"]), import_prop_types26.default.string]),
      width: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "auto"]), import_prop_types26.default.string])
    })])
  });
}
var DataChartPropTypes = PropType23;

// node_modules/grommet/es6/components/DataChart/DataChart.js
var _excluded26 = ["a11yTitle", "axis", "bounds", "chart", "data", "detail", "gap", "guide", "legend", "offset", "pad", "series", "size"];
var _excluded27 = ["property", "type", "x", "y"];
var _excluded33 = ["property"];
function _extends48() {
  _extends48 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends48.apply(this, arguments);
}
function _objectWithoutPropertiesLoose24(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var stackedChartType = {
  areas: "area",
  bars: "bar",
  lines: "line"
};
var DataChart = (0, import_react52.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, _ref$axis = _ref.axis, axisProp = _ref$axis === void 0 ? true : _ref$axis, _ref$bounds = _ref.bounds, boundsProp = _ref$bounds === void 0 ? "align" : _ref$bounds, chart = _ref.chart, _ref$data = _ref.data, data = _ref$data === void 0 ? [] : _ref$data, detail = _ref.detail, _ref$gap = _ref.gap, gap = _ref$gap === void 0 ? "small" : _ref$gap, guideProp = _ref.guide, legend = _ref.legend, offset = _ref.offset, padProp = _ref.pad, seriesProp = _ref.series, size = _ref.size, rest = _objectWithoutPropertiesLoose24(_ref, _excluded26);
  var theme = (0, import_react52.useContext)(Ge) || defaultProps.theme;
  var _useState = (0, import_react52.useState)(), activeProperty = _useState[0], setActiveProperty = _useState[1];
  var xRef = (0, import_react52.useRef)();
  var spacerRef = (0, import_react52.useRef)();
  var series = (0, import_react52.useMemo)(function() {
    if (Array.isArray(seriesProp))
      return seriesProp.filter(function(s2) {
        return s2.property || typeof s2 === "string";
      }).map(function(s2) {
        return typeof s2 === "string" ? {
          property: s2
        } : s2;
      });
    if (typeof seriesProp === "string")
      return [{
        property: seriesProp
      }];
    if (seriesProp)
      return [seriesProp];
    return [];
  }, [seriesProp]);
  var getPropertySeries = function getPropertySeries2(prop) {
    return series.find(function(_ref2) {
      var property = _ref2.property;
      return prop === property;
    });
  };
  var charts = (0, import_react52.useMemo)(function() {
    if (!chart) {
      if (series.length === 1)
        return series.filter(function(s2) {
          return s2.property;
        }).map(function(s2) {
          return {
            property: s2.property
          };
        });
      return series.slice(1).map(function(s2) {
        return {
          property: s2.property
        };
      });
    }
    if (Array.isArray(chart))
      return chart.map(function(c2) {
        return typeof c2 === "string" ? {
          property: c2
        } : c2;
      }).filter(function(_ref3) {
        var property = _ref3.property;
        return property;
      });
    if (typeof chart === "string")
      return [{
        property: chart
      }];
    if (chart)
      return [chart];
    return [];
  }, [chart, series]);
  var seriesValues = (0, import_react52.useMemo)(function() {
    var result = {};
    series.forEach(function(_ref4) {
      var property = _ref4.property;
      result[property] = data.map(function(d2) {
        return d2[property];
      });
    });
    return result;
  }, [data, series]);
  var chartValues = (0, import_react52.useMemo)(function() {
    return charts.map(function(_ref5) {
      var opacity = _ref5.opacity, property = _ref5.property, type = _ref5.type;
      if (property) {
        if (Array.isArray(property)) {
          if (stackedChartType[type]) {
            var totals = [];
            return property.map(function(cp) {
              var aProperty = cp.property || cp;
              var values = seriesValues[aProperty];
              if (!values)
                return void 0;
              return values.map(function(v2, i2) {
                var base2 = totals[i2] || 0;
                totals[i2] = base2 + v2;
                if (type === "lines")
                  return [i2, base2 + v2];
                return [i2, base2, base2 + v2];
              });
            });
          }
          return data.map(function(_2, index) {
            return [index].concat(property.map(function(p2) {
              return seriesValues[p2] ? seriesValues[p2][index] : data[index][p2];
            }));
          });
        }
        if (typeof property === "object") {
          var color = property.color, thickness = property.thickness, x2 = property.x, y2 = property.y, y22 = property.y2;
          return seriesValues[x2].map(function(value, index) {
            var aValue = {
              value: [value]
            };
            aValue.value.push(seriesValues[y2][index]);
            if (y22)
              aValue.value.push(seriesValues[y22][index]);
            if (thickness) {
              var t2 = seriesValues[thickness.property || thickness][index];
              aValue.thickness = thickness.transform ? thickness.transform(t2) : t2;
            }
            if (color) {
              var c2 = seriesValues[color.property || color][index];
              aValue.color = color.transform ? color.transform(c2) : c2;
            }
            if (opacity)
              aValue.opacity = opacity;
            return aValue;
          });
        }
        return seriesValues[property];
      }
      return void 0;
    });
  }, [charts, data, seriesValues]);
  var granularities = (0, import_react52.useMemo)(function() {
    var medium;
    var steps = data.length - 1;
    if (charts[0] && typeof charts[0].property === "object")
      medium = 3;
    else if (steps < 4)
      medium = data.length;
    else if (steps === 4)
      medium = 3;
    else if (steps % 4 === 0)
      medium = 5;
    else if (steps % 3 === 0)
      medium = 4;
    else if (steps % 2 === 0)
      medium = 3;
    else
      medium = 2;
    return {
      x: {
        coarse: 2,
        fine: data.length,
        medium
      },
      y: _extends48({}, heightYGranularity[size && size.height || "small"] || {
        fine: 5,
        medium: 3
      }, {
        coarse: 2
      })
    };
  }, [charts, data.length, size]);
  var axis = (0, import_react52.useMemo)(function() {
    if (!axisProp)
      return void 0;
    var result = {};
    if (axisProp === true || axisProp.x === true)
      result.x = {};
    if (axisProp === true || axisProp.y === true)
      result.y = {};
    if (!result.x && axisProp.x)
      result.x = typeof axisProp.x === "string" ? {
        property: axisProp.x
      } : _extends48({}, axisProp.x);
    if (!result.y && axisProp.y)
      result.y = typeof axisProp.y === "string" ? {
        property: axisProp.y
      } : _extends48({}, axisProp.y);
    if (result.x) {
      if (!result.x.property) {
        if (data && data[0]) {
          if (data[0].date)
            result.x.property = "date";
          else if (data[0].time)
            result.x.property = "time";
        }
      }
      if (!result.x.granularity)
        result.x.granularity = "coarse";
    }
    if (result.y) {
      if (!result.y.property && charts[0])
        result.y.property = charts[0].property.y || charts[0].property;
      if (!result.y.granularity)
        result.y.granularity = "coarse";
    }
    if (result.x) {
      var _result$x$granularity = result.x.granularity, granularity = _result$x$granularity === void 0 ? "coarse" : _result$x$granularity;
      result.x.count = granularities.x[granularity];
    }
    if (result.y) {
      var _result$y$granularity = result.y.granularity, _granularity = _result$y$granularity === void 0 ? "coarse" : _result$y$granularity;
      result.y.count = granularities.y[_granularity];
    }
    return result;
  }, [axisProp, data, charts, granularities]);
  var chartProps = (0, import_react52.useMemo)(function() {
    var steps = [];
    var coarseness = [void 0, 5];
    if (axis && axis.x) {
      var _axis$x$granularity = axis.x.granularity, granularity = _axis$x$granularity === void 0 ? "coarse" : _axis$x$granularity;
      steps[0] = granularities.x[granularity] - 1;
    } else
      steps[0] = data.length - 1;
    if (axis && axis.y) {
      var _axis$y$granularity = axis.y.granularity, _granularity2 = _axis$y$granularity === void 0 ? "coarse" : _axis$y$granularity;
      steps[1] = granularities.y[_granularity2] - 1;
    } else
      steps[1] = 1;
    var chartBounds = chartValues.map(function(_2, index) {
      var type = charts[index].type;
      if (stackedChartType[type]) {
        var _chartValues$index, _chartValues$index$;
        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];
        chartValues[index].slice(1).filter(function(values) {
          return values;
        }).forEach(function(values) {
          mergedValues = mergedValues.map(function(__, i2) {
            return type === "lines" ? [i2, Math.min(mergedValues[i2][1], values[i2][1]), Math.max(mergedValues[i2][1], values[i2][1])] : [i2, Math.min(mergedValues[i2][1], values[i2][1]), Math.max(mergedValues[i2][2], values[i2][2])];
          });
        });
        return calcBounds(mergedValues, {
          coarseness,
          steps
        });
      }
      return calcBounds(chartValues[index], {
        coarseness: charts[index].property.x ? [5, 5] : coarseness,
        steps
      });
    });
    if (boundsProp === "align" && chartBounds.length) {
      var alignedBounds = [].concat(chartBounds[0]);
      chartBounds.forEach(function(bounds2) {
        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds2[0][0]);
        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds2[0][1]);
        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds2[1][0]);
        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds2[1][1]);
      });
      chartBounds = chartBounds.map(function() {
        return alignedBounds;
      });
    }
    return chartValues.map(function(values, index) {
      var _charts$index = charts[index], thickness = _charts$index.thickness, type = _charts$index.type;
      var calcValues = stackedChartType[type] ? values[0] : values;
      return calcs(calcValues, {
        bounds: chartBounds[index],
        steps,
        thickness
      });
    });
  }, [axis, boundsProp, charts, chartValues, data, granularities]);
  var seriesStyles = (0, import_react52.useMemo)(function() {
    var result = {};
    charts.forEach(function(_ref6, index) {
      var color = _ref6.color, point = _ref6.point, property = _ref6.property, thickness = _ref6.thickness, type = _ref6.type;
      var calcThickness = chartProps[index].thickness;
      if (typeof property === "object" && !Array.isArray(property)) {
        Object.keys(property).forEach(function(aspect) {
          var prop = property[aspect];
          if (!result[prop.property || prop])
            result[prop.property || prop] = {
              aspect
            };
        });
      } else {
        var props = Array.isArray(property) ? property : [property];
        props.forEach(function(prop) {
          var p2 = prop.property || prop;
          var pColor = prop.color || color;
          if (!result[p2])
            result[p2] = {};
          if (pColor && !result[p2].color)
            result[p2].color = pColor;
          if (point && !result[p2].point)
            result[p2].point = point;
          else if (type === "point")
            result[p2].point = false;
          if ((thickness || calcThickness) && !result[p2].thickness)
            result[p2].thickness = thickness || calcThickness;
        });
      }
    });
    var colorIndex = 0;
    var pointIndex = 0;
    Object.keys(result).forEach(function(key) {
      var seriesStyle = result[key];
      if (!seriesStyle.aspect && !seriesStyle.color) {
        seriesStyle.color = "graph-" + colorIndex;
        colorIndex += 1;
      }
      if (activeProperty !== void 0 && activeProperty !== key) {
        seriesStyle.opacity = "medium";
      }
      if (seriesStyle.point === false) {
        seriesStyle.point = points[pointIndex];
        pointIndex += 1;
      }
    });
    return result;
  }, [activeProperty, charts, chartProps]);
  var guide = (0, import_react52.useMemo)(function() {
    if (!guideProp)
      return void 0;
    var result;
    if (guideProp === true) {
      result = {
        x: {},
        y: {}
      };
    } else {
      result = {};
      if (guideProp.x)
        result.x = _extends48({}, guideProp.x);
      if (guideProp.y)
        result.y = _extends48({}, guideProp.y);
    }
    if (result.x) {
      if (!result.x.granularity && axis && axis.x)
        result.x.count = axis.x.count;
      if (!result.x.count)
        result.x.count = granularities.x[result.x.granularity || "coarse"];
    }
    if (result.y) {
      if (!result.y.granularity && axis && axis.y)
        result.y.count = axis.y.count;
      if (!result.y.count)
        result.y.count = granularities.y[result.y.granularity || "coarse"];
    }
    return result;
  }, [axis, granularities, guideProp]);
  var pad = (0, import_react52.useMemo)(function() {
    if (padProp !== void 0)
      return padProp;
    var result = {};
    charts.forEach(function(_ref7, index) {
      var type = _ref7.type;
      var thickness = chartProps[index].thickness;
      result.horizontal = halfPad[thickness];
      if (type && type !== "bar")
        result.vertical = halfPad[thickness];
    });
    return result;
  }, [chartProps, charts, padProp]);
  var thicknesses = (0, import_react52.useMemo)(function() {
    return offset ? charts.map(function(_2, index) {
      var thickness = chartProps[index].thickness;
      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);
    }) : void 0;
  }, [charts, chartProps, offset, theme]);
  var offsets = (0, import_react52.useMemo)(function() {
    return offset ? thicknesses.map(function(t2, i2) {
      return thicknesses.slice(0, i2).reduce(function(a2, b2) {
        return a2 + b2;
      }, 0);
    }) : void 0;
  }, [offset, thicknesses]);
  var offsetPad = (0, import_react52.useMemo)(function() {
    return offset ? thicknesses.reduce(function(a2, b2) {
      return a2 + b2;
    }, 0) + "px" : void 0;
  }, [offset, thicknesses]);
  var detailThickness = (0, import_react52.useMemo)(function() {
    var result = 0;
    if (detail) {
      charts.forEach(function(_2, index) {
        var thickness = chartProps[index].thickness;
        result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));
      });
    }
    return result + "px";
  }, [charts, chartProps, detail, theme]);
  var dateFormats = (0, import_react52.useMemo)(function() {
    var result = {};
    var full = axis && axis.x && axis.x.granularity === "coarse";
    series.forEach(function(_ref8) {
      var property = _ref8.property, render = _ref8.render;
      if (!render && data.length > 1 && typeof data[0][property] === "string") {
        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);
      }
    });
    return result;
  }, [axis, data, series]);
  useLayoutEffect(function() {
    if (xRef.current && spacerRef.current) {
      var rect = xRef.current.getBoundingClientRect();
      spacerRef.current.style.height = rect.height + "px";
    }
  }, []);
  var renderValue = function renderValue2(serie, dataIndex, valueArg) {
    var value;
    if (valueArg !== void 0) {
      if (serie && serie.render)
        return serie.render(valueArg);
      value = valueArg;
    } else {
      var datum = data[dataIndex];
      value = datum[serie.property];
      if (serie && serie.render)
        return serie.render(value, datum, serie.property);
    }
    if (serie) {
      var dateFormat = dateFormats[serie.property];
      if (dateFormat)
        return dateFormat(new Date(value));
      if (serie.prefix)
        value = "" + serie.prefix + value;
      if (serie.suffix)
        value = "" + value + serie.suffix;
    }
    return value;
  };
  var xAxisElement = axis && axis.x && chartProps.length ? import_react52.default.createElement(XAxis, {
    ref: xRef,
    axis,
    chartProps,
    pad,
    renderValue,
    serie: axis.x.property && getPropertySeries(axis.x.property)
  }) : null;
  var yAxisElement = axis && axis.y && chartProps.length ? import_react52.default.createElement(YAxis, {
    axis,
    chartProps,
    pad,
    renderValue,
    serie: axis.y.property && getPropertySeries(axis.y.property)
  }) : null;
  var stackFill = (0, import_react52.useMemo)(function() {
    if (size === "fill" || size && size.width === "fill" && size.height === "fill")
      return true;
    if (size && size.width === "fill")
      return "horizontal";
    if (size && size.height === "fill")
      return "vertical";
    return void 0;
  }, [size]);
  var guidingChild = (0, import_react52.useMemo)(function() {
    var result = 0;
    if (guide && guide.x)
      result += 1;
    if (guide && guide.y)
      result += 1;
    return result;
  }, [guide]);
  var stackElement = import_react52.default.createElement(Stack, {
    gridArea: "charts",
    guidingChild,
    fill: stackFill
  }, guide && guide.x && import_react52.default.createElement(XGuide, {
    guide,
    pad
  }), guide && guide.y && import_react52.default.createElement(YGuide, {
    guide,
    pad
  }), charts.map(function(_ref9, i2) {
    var prop = _ref9.property, type = _ref9.type, x2 = _ref9.x, y2 = _ref9.y, chartRest = _objectWithoutPropertiesLoose24(_ref9, _excluded27);
    var chartPad = offsetPad ? _extends48({}, pad, {
      end: offsetPad
    }) : pad;
    var offsetProps = offsetPad ? {
      style: {
        transform: "translate(" + offsets[i2] + "px, 0px)"
      }
    } : {};
    if (stackedChartType[type]) {
      return prop.map(function(cProp, j2) {
        var pProp = cProp.property || cProp;
        var _ref10 = typeof cProp === "object" ? cProp : {}, property = _ref10.property, propRest = _objectWithoutPropertiesLoose24(_ref10, _excluded33);
        return import_react52.default.createElement(Chart, _extends48({
          key: j2,
          values: chartValues[i2][j2] || [],
          overflow: true
        }, seriesStyles[pProp], chartProps[i2], chartRest, propRest, offsetProps, {
          type: stackedChartType[type] || type,
          size,
          pad: chartPad
        }));
      }).reverse();
    }
    return import_react52.default.createElement(Chart, _extends48({
      key: i2,
      values: chartValues[i2],
      overflow: true
    }, seriesStyles[prop], chartProps[i2], chartRest, offsetProps, {
      type,
      size,
      pad: chartPad
    }));
  }), detail && import_react52.default.createElement(Detail, {
    activeProperty,
    axis,
    data,
    pad,
    series,
    seriesStyles,
    renderValue,
    thickness: detailThickness
  }));
  var legendElement = legend ? import_react52.default.createElement(Legend, {
    series,
    seriesStyles,
    activeProperty,
    setActiveProperty
  }) : null;
  if (!Grid.available) {
    var _content = stackElement;
    if (xAxisElement) {
      _content = import_react52.default.createElement(Box, null, _content, xAxisElement);
    }
    if (yAxisElement) {
      _content = import_react52.default.createElement(Box, {
        direction: "row"
      }, import_react52.default.createElement(Box, null, yAxisElement, import_react52.default.createElement(Box, {
        ref: spacerRef,
        flex: false
      })), _content);
    }
    if (legendElement) {
      _content = import_react52.default.createElement(Box, null, _content, legendElement);
    }
    return _content;
  }
  var content = import_react52.default.createElement(Grid, _extends48({
    ref,
    "aria-label": a11yTitle,
    fill: stackFill,
    columns: ["auto", stackFill === true || stackFill === "horizontal" ? "flex" : "auto"],
    rows: [stackFill === true || stackFill === "vertical" ? "flex" : "auto", "auto"],
    areas: [{
      name: "yAxis",
      start: [0, 0],
      end: [0, 0]
    }, {
      name: "xAxis",
      start: [1, 1],
      end: [1, 1]
    }, {
      name: "charts",
      start: [1, 0],
      end: [1, 0]
    }],
    gap
  }, rest), xAxisElement, yAxisElement, stackElement);
  if (legendElement) {
    content = import_react52.default.createElement(Box, {
      align: "start"
    }, content, legendElement);
  }
  return content;
});
DataChart.displayName = "DataChart";
DataChart.propTypes = DataChartPropTypes;

// node_modules/grommet/es6/components/DataTable/DataTable.js
var import_react73 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DataTable/Header.js
var import_react65 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/TableCell/TableCell.js
var import_react54 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Table/TableContext.js
var import_react53 = __toESM(require_react());
var TableContext = import_react53.default.createContext(void 0);

// node_modules/grommet/es6/components/Table/StyledTable.js
init_styled_components_browser_esm();
var SIZE_MAP2 = {
  "1/2": "50%",
  "1/4": "25%",
  "2/4": "50%",
  "3/4": "75%",
  "1/3": "33.33%",
  "2/3": "66.66%"
};
var sizeStyle13 = Ce(["width:", ";max-width:", ";overflow:hidden;"], function(props) {
  return props.size === "auto" ? "1px" : SIZE_MAP2[props.size] || props.theme.global.size[props.size] || props.size;
}, function(props) {
  return props.size !== "auto" ? SIZE_MAP2[props.size] || props.theme.global.size[props.size] || props.size : void 0;
});
var StyledTableCell = styled_components_browser_esm_default.td.withConfig({
  displayName: "StyledTable__StyledTableCell",
  componentId: "sc-1m3u5g-0"
})(["margin:0;padding:0;font-weight:inherit;text-align:inherit;", " ", " ", " ", " ", " ", " ", ""], function(props) {
  return props.size && sizeStyle13;
}, function(props) {
  return props.verticalAlign && "vertical-align: " + props.verticalAlign + ";";
}, function(props) {
  return props.align && "text-align: " + props.align + ";";
}, function(props) {
  return props.background && backgroundStyle(props.background, props.theme);
}, function(props) {
  return props.border && borderStyle(props.border, props.responsive, props.theme);
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.tableContextTheme && props.tableContextTheme.extend;
});
StyledTableCell.defaultProps = {};
Object.setPrototypeOf(StyledTableCell.defaultProps, defaultProps2);
var StyledTableDataCaption = styled_components_browser_esm_default.caption.withConfig({
  displayName: "StyledTable__StyledTableDataCaption",
  componentId: "sc-1m3u5g-1"
})(["margin-bottom:", ";"], function(props) {
  return props.theme.global.edgeSize.xxsmall;
});
StyledTableDataCaption.defaultProps = {};
Object.setPrototypeOf(StyledTableDataCaption.defaultProps, defaultProps2);
var StyledTableRow = styled_components_browser_esm_default.tr.withConfig({
  displayName: "StyledTable__StyledTableRow",
  componentId: "sc-1m3u5g-2"
})([""]);
StyledTableRow.defaultProps = {};
Object.setPrototypeOf(StyledTableRow.defaultProps, defaultProps2);
var StyledTableBody = styled_components_browser_esm_default.tbody.withConfig({
  displayName: "StyledTable__StyledTableBody",
  componentId: "sc-1m3u5g-3"
})([""]);
StyledTableBody.defaultProps = {};
Object.setPrototypeOf(StyledTableBody.defaultProps, defaultProps2);
var StyledTableHeader = styled_components_browser_esm_default.thead.withConfig({
  displayName: "StyledTable__StyledTableHeader",
  componentId: "sc-1m3u5g-4"
})([""]);
StyledTableHeader.defaultProps = {};
Object.setPrototypeOf(StyledTableHeader.defaultProps, defaultProps2);
var StyledTableFooter = styled_components_browser_esm_default.tfoot.withConfig({
  displayName: "StyledTable__StyledTableFooter",
  componentId: "sc-1m3u5g-5"
})([""]);
StyledTableFooter.defaultProps = {};
Object.setPrototypeOf(StyledTableFooter.defaultProps, defaultProps2);
var StyledTable = styled_components_browser_esm_default.table.withConfig({
  displayName: "StyledTable",
  componentId: "sc-1m3u5g-6"
})(["border-spacing:0;border-collapse:collapse;width:inherit;@media all and (min--moz-device-pixel-ratio:0){table-layout:fixed;}", " ", ";"], genericStyles, function(props) {
  return props.theme.table && props.theme.table.extend;
});
StyledTable.defaultProps = {};
Object.setPrototypeOf(StyledTable.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/TableCell/propTypes.js
var import_prop_types27 = __toESM(require_prop_types());
var PropType24 = {};
if (true) {
  PropType24 = {
    plain: import_prop_types27.default.oneOfType([import_prop_types27.default.bool, import_prop_types27.default.oneOf(["noPad"])]),
    scope: import_prop_types27.default.oneOf(["col", "row"]),
    size: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4"]), import_prop_types27.default.string]),
    verticalAlign: import_prop_types27.default.oneOf(["top", "middle", "bottom"]),
    align: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["left", "right", "center", "justify", "inherit", "start", "end"]), import_prop_types27.default.string])
  };
}
var TableCellPropTypes = PropType24;

// node_modules/grommet/es6/components/TableCell/TableCell.js
var _excluded28 = ["align", "background", "border", "children", "className", "colSpan", "onWidth", "pad", "plain", "rowSpan", "scope", "size", "verticalAlign"];
function _extends49() {
  _extends49 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends49.apply(this, arguments);
}
function _objectWithoutPropertiesLoose25(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var verticalAlignToJustify = {
  middle: "center",
  top: "start",
  bottom: "end"
};
var TableCell = (0, import_react54.forwardRef)(function(_ref, ref) {
  var align = _ref.align, background = _ref.background, border = _ref.border, children2 = _ref.children, className = _ref.className, colSpan = _ref.colSpan, onWidth = _ref.onWidth, pad = _ref.pad, plain = _ref.plain, rowSpan = _ref.rowSpan, scope = _ref.scope, size = _ref.size, verticalAlign = _ref.verticalAlign, rest = _objectWithoutPropertiesLoose25(_ref, _excluded28);
  var theme = (0, import_react54.useContext)(Ge) || defaultProps2.theme;
  var tableContext = (0, import_react54.useContext)(TableContext);
  var cellRef = useForwardedRef(ref);
  var containerRef = (0, import_react54.useRef)();
  useLayoutEffect(function() {
    if (onWidth) {
      var _cellRef$current$getB = cellRef.current.getBoundingClientRect(), width = _cellRef$current$getB.width;
      onWidth(width);
    }
  }, [cellRef, onWidth]);
  (0, import_react54.useEffect)(function() {
    var updateHeight = function updateHeight2() {
      if (plain === "noPad") {
        var cell = cellRef.current;
        var container = containerRef.current;
        if (cell && container) {
          container.style.height = "";
          var cellRect = cell.getBoundingClientRect();
          container.style.height = Math.max(cellRect.height - (border || theme.table[tableContext].border ? theme.global.borderSize.xsmall.replace("px", "") : 0), 0) + "px";
        }
      }
    };
    window.addEventListener("resize", updateHeight);
    updateHeight();
    return function() {
      window.removeEventListener("resize", updateHeight);
    };
  }, [border, cellRef, plain, tableContext, theme.global.borderSize, theme.table]);
  var tableContextTheme;
  if (tableContext === "header") {
    tableContextTheme = theme.table && theme.table.header;
  } else if (tableContext === "footer") {
    tableContextTheme = theme.table && theme.table.footer;
  } else {
    tableContextTheme = theme.table && theme.table.body;
  }
  var mergedProps = _extends49({}, tableContextTheme, rest);
  Object.keys(mergedProps).forEach(function(key) {
    if (rest[key] === void 0)
      mergedProps[key] = tableContextTheme[key];
  });
  var cellProps = {
    align: align || mergedProps.align || void 0,
    background: background || mergedProps.background || void 0,
    border: border || mergedProps.border || void 0,
    pad: plain !== "noPad" ? pad || mergedProps.pad || void 0 : void 0,
    verticalAlign: verticalAlign || mergedProps.verticalAlign || void 0
  };
  delete mergedProps.align;
  delete mergedProps.background;
  delete mergedProps.border;
  delete mergedProps.pad;
  delete mergedProps.verticalAlign;
  var content = children2;
  if (plain === "noPad" && children2) {
    content = import_react54.default.createElement(Box, {
      ref: containerRef,
      justify: "center"
    }, children2);
  }
  var nextTheme = (0, import_react54.useMemo)(function() {
    var result;
    if (cellProps.background || theme.darkChanged) {
      var dark2 = backgroundIsDark(cellProps.background, theme);
      var darkChanged = dark2 !== void 0 && dark2 !== theme.dark;
      if (darkChanged || theme.darkChanged) {
        result = _extends49({}, theme);
        result.dark = dark2 === void 0 ? theme.dark : dark2;
        result.background = cellProps.background;
      } else if (cellProps.background) {
        result = _extends49({}, theme);
        result.background = cellProps.background;
      }
    }
    return result || theme;
  }, [cellProps.background, theme]);
  return import_react54.default.createElement(Ge.Provider, {
    value: nextTheme
  }, import_react54.default.createElement(StyledTableCell, _extends49({
    ref: cellRef,
    as: scope ? "th" : void 0,
    scope,
    size,
    colSpan,
    rowSpan,
    tableContext,
    tableContextTheme
  }, plain === true ? mergedProps : {}, cellProps, {
    className
  }), plain || !Object.keys(mergedProps).length ? content : import_react54.default.createElement(Box, _extends49({}, mergedProps, {
    align,
    justify: verticalAlignToJustify[verticalAlign]
  }), children2)));
});
TableCell.displayName = "TableCell";
TableCell.propTypes = TableCellPropTypes;

// node_modules/grommet/es6/components/DataTable/Resizer.js
var import_react55 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends50() {
  _extends50 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends50.apply(this, arguments);
}
var InteractionBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Resizer__InteractionBox",
  componentId: "sc-8l808w-0"
})(["cursor:col-resize;> *{opacity:0;}", " &:hover{> *{opacity:1;}}"], function(props) {
  return props.active && "> * { opacity: 1; }";
});
var Resizer = function Resizer2(_ref) {
  var onResize = _ref.onResize, property = _ref.property;
  var theme = (0, import_react55.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react55.useState)(false), active = _useState[0], setActive = _useState[1];
  var _useState2 = (0, import_react55.useState)(), start = _useState2[0], setStart = _useState2[1];
  var _useState3 = (0, import_react55.useState)(), width = _useState3[0], setWidth = _useState3[1];
  var ref = (0, import_react55.useRef)();
  var onMouseDown = (0, import_react55.useCallback)(function(event) {
    if (ref.current) {
      var element = ref.current;
      while (element && element.nodeName !== "TH") {
        element = element.parentNode;
      }
      var rect = element.getBoundingClientRect();
      setStart(event.clientX);
      setWidth(rect.width);
      setActive(true);
    }
  }, []);
  var onMouseMove = (0, import_react55.useCallback)(function(event) {
    var nextWidth = Math.max(12, width + (event.clientX - start));
    onResize(property, nextWidth);
  }, [onResize, property, start, width]);
  var onMouseUp = (0, import_react55.useCallback)(function() {
    setActive(false);
    setStart(void 0);
    setWidth(void 0);
  }, []);
  (0, import_react55.useEffect)(function() {
    var remove = function remove2() {
      document.removeEventListener("mouseup", onMouseUp);
      document.removeEventListener("mousemove", onMouseMove);
    };
    if (active) {
      document.addEventListener("mouseup", onMouseUp);
      document.addEventListener("mousemove", onMouseMove);
      return remove;
    }
    remove();
    return void 0;
  }, [active, onMouseMove, onMouseUp]);
  var border;
  if (theme.dataTable.resize.hover && theme.dataTable.resize.hover.border) {
    var _theme$dataTable$resi = theme.dataTable.resize.hover.border, color = _theme$dataTable$resi.color, _theme$dataTable$resi2 = _theme$dataTable$resi.side, side = _theme$dataTable$resi2 === void 0 ? "end" : _theme$dataTable$resi2, size = _theme$dataTable$resi.size;
    border = {
      color,
      side,
      size
    };
  }
  return import_react55.default.createElement(Stack, {
    anchor: "right"
  }, import_react55.default.createElement(Box, _extends50({
    flex: false,
    responsive: false,
    pad: {
      vertical: "small"
    }
  }, theme.dataTable.resize)), import_react55.default.createElement(InteractionBox, {
    active,
    flex: false,
    pad: {
      left: "xsmall"
    },
    ref,
    responsive: false,
    onMouseDown,
    onMouseMove: start !== void 0 ? onMouseMove : void 0,
    onMouseUp: start !== void 0 ? onMouseUp : void 0
  }, import_react55.default.createElement(Box, {
    pad: {
      vertical: "small"
    },
    border
  })));
};
Resizer.displayName = "Resizer";
Resizer.defaultProps = {};
Object.setPrototypeOf(Resizer.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Searcher.js
var import_react58 = __toESM(require_react());
init_styled_components_browser_esm();
var import_FormSearch = __toESM(require_FormSearch());

// node_modules/grommet/es6/components/TextInput/TextInput.js
var import_react57 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/InfiniteScroll/InfiniteScroll.js
var import_react56 = __toESM(require_react());

// node_modules/grommet/es6/components/InfiniteScroll/propTypes.js
var import_prop_types28 = __toESM(require_prop_types());
var PropType25 = {};
if (true) {
  PropType25 = {
    children: import_prop_types28.default.func,
    items: import_prop_types28.default.arrayOf(import_prop_types28.default.any),
    onMore: import_prop_types28.default.func,
    renderMarker: import_prop_types28.default.func,
    replace: import_prop_types28.default.bool,
    show: import_prop_types28.default.number,
    step: import_prop_types28.default.number
  };
}
var InfiniteScrollPropTypes = PropType25;

// node_modules/grommet/es6/components/InfiniteScroll/InfiniteScroll.js
var calculateLastPageBound = function calculateLastPageBound2(show, step) {
  return show ? Math.floor((show + step) / step) - 1 : 0;
};
var InfiniteScroll = function InfiniteScroll2(_ref) {
  var children2 = _ref.children, _ref$items = _ref.items, items = _ref$items === void 0 ? [] : _ref$items, onMore = _ref.onMore, renderMarker = _ref.renderMarker, replace = _ref.replace, show = _ref.show, _ref$step = _ref.step, step = _ref$step === void 0 ? 50 : _ref$step;
  var _useState = (0, import_react56.useState)(), scrollShow = _useState[0], setScrollShow = _useState[1];
  var lastPage = (0, import_react56.useMemo)(function() {
    return Math.max(0, Math.ceil(items.length / step) - 1);
  }, [items.length, step]);
  var _useState2 = (0, import_react56.useState)([0, calculateLastPageBound(show, step)]), renderPageBounds = _useState2[0], setRenderPageBounds = _useState2[1];
  var _useState3 = (0, import_react56.useState)([]), pageHeights = _useState3[0], setPageHeights = _useState3[1];
  var _useState4 = (0, import_react56.useState)(0), pendingLength = _useState4[0], setPendingLength = _useState4[1];
  var aboveMarkerRef = (0, import_react56.useRef)();
  var belowMarkerRef = (0, import_react56.useRef)();
  (0, import_react56.useEffect)(function() {
    var scrollParents;
    var evaluate = function evaluate2() {
      if (!scrollParents)
        return;
      var scrollParent = scrollParents[0];
      var top;
      var height;
      if (scrollParent === document) {
        top = document.documentElement.scrollTop || document.body.scrollTop;
        height = window.innerHeight;
      } else {
        top = scrollParent.scrollTop;
        var rect = scrollParent.getBoundingClientRect();
        height = rect.height;
      }
      var offset = height / 4;
      var nextBeginPage = 0;
      var index = 0;
      var pagesHeight = pageHeights[index] || 0;
      while (pageHeights[index + 1] && pagesHeight < top - offset) {
        index += 1;
        nextBeginPage += 1;
        pagesHeight += pageHeights[index];
      }
      var nextEndPage = nextBeginPage;
      while (pageHeights[index] !== void 0 && pagesHeight < top + height + offset) {
        index += 1;
        nextEndPage += 1;
        pagesHeight += pageHeights[index] || 0;
      }
      if (!replace) {
        nextBeginPage = 0;
        nextEndPage = Math.max(renderPageBounds[1], nextEndPage);
      }
      if (show) {
        var showPage = calculateLastPageBound(show, step);
        nextBeginPage = Math.min(showPage, nextBeginPage);
        nextEndPage = Math.max(showPage, nextEndPage);
      }
      if (nextBeginPage !== renderPageBounds[0] || nextEndPage !== renderPageBounds[1]) {
        setRenderPageBounds([nextBeginPage, nextEndPage]);
      }
    };
    var timer;
    var debounce3 = function debounce4() {
      clearTimeout(timer);
      timer = setTimeout(evaluate, 10);
    };
    if (belowMarkerRef.current) {
      scrollParents = findScrollParents(belowMarkerRef.current);
      scrollParents.forEach(function(sp) {
        return sp.addEventListener("scroll", debounce3);
      });
    }
    window.addEventListener("resize", debounce3);
    evaluate();
    return function() {
      if (scrollParents) {
        scrollParents.forEach(function(sp) {
          return sp.removeEventListener("scroll", debounce3);
        });
      }
      window.removeEventListener("resize", debounce3);
      clearTimeout(timer);
    };
  }, [pageHeights, renderPageBounds, replace, show, step]);
  (0, import_react56.useEffect)(function() {
    if (onMore && renderPageBounds[1] === lastPage && items.length >= pendingLength && items.length > 0) {
      setPendingLength(items.length + 1);
      onMore();
    }
  }, [items.length, lastPage, onMore, pendingLength, renderPageBounds, step]);
  (0, import_react56.useEffect)(function() {
    if (items.length === 0 && lastPage === 0 && pendingLength !== 0) {
      setPageHeights([]);
      setPendingLength(0);
      setRenderPageBounds([0, calculateLastPageBound(show, step)]);
    }
  }, [lastPage, pendingLength, show, step, items.length]);
  useLayoutEffect(function() {
    var timer = setTimeout(function() {
      if (show && belowMarkerRef.current && show !== scrollShow) {
        var showIndex = show - renderPageBounds[0] * step + (renderPageBounds[0] ? 1 : 0);
        var showNode = belowMarkerRef.current.parentNode.children.item(showIndex);
        if (showNode) {
          var scrollParent = findScrollParent(showNode);
          if (isNodeBeforeScroll(showNode, scrollParent)) {
            showNode.scrollIntoView(true);
          } else if (isNodeAfterScroll(showNode, scrollParent)) {
            showNode.scrollIntoView(false);
          }
          setScrollShow(show);
        }
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, [renderPageBounds, show, step]);
  useLayoutEffect(function() {
    if (!belowMarkerRef.current)
      return;
    var rendered = belowMarkerRef.current.parentNode.children;
    if ((aboveMarkerRef.current ? 1 : 0) + (renderPageBounds[1] - renderPageBounds[0] + 1) * step + 1 === rendered.length) {
      var nextPageHeights;
      var i2 = renderPageBounds[0];
      var lastBottom;
      while (i2 <= renderPageBounds[1]) {
        var topIndex = (aboveMarkerRef.current ? 1 : 0) + (i2 - renderPageBounds[0]) * step;
        var bottomIndex = Math.min(topIndex + step - 1, rendered.length - 1);
        var top = lastBottom !== void 0 ? lastBottom : rendered.item(topIndex).getBoundingClientRect().top;
        var _rendered$item$getBou = rendered.item(bottomIndex).getBoundingClientRect(), bottom = _rendered$item$getBou.bottom;
        var height = bottom - top;
        if (bottom && (!pageHeights || pageHeights[i2] !== height)) {
          if (!nextPageHeights)
            nextPageHeights = [].concat(pageHeights || []);
          nextPageHeights[i2] = height;
        }
        lastBottom = bottom;
        i2 += 1;
      }
      while (replace && i2 <= lastPage) {
        if (!pageHeights[i2] && pageHeights[i2] !== pageHeights[0]) {
          if (!nextPageHeights)
            nextPageHeights = [].concat(pageHeights || []);
          var _nextPageHeights = nextPageHeights;
          nextPageHeights[i2] = _nextPageHeights[0];
        }
        i2 += 1;
      }
      if (nextPageHeights)
        setPageHeights(nextPageHeights);
    }
  }, [lastPage, pageHeights, renderPageBounds, replace, step]);
  var aboveHeight = (0, import_react56.useMemo)(function() {
    if (!replace)
      return 0;
    var height = 0;
    var i2 = 0;
    while (i2 < renderPageBounds[0]) {
      height += pageHeights[i2] || 0;
      i2 += 1;
    }
    return height;
  }, [pageHeights, renderPageBounds, replace]);
  var belowHeight = (0, import_react56.useMemo)(function() {
    if (!replace)
      return 0;
    var height = 0;
    var i2 = renderPageBounds[1] + 1;
    while (i2 <= lastPage) {
      height += pageHeights[i2] || 0;
      i2 += 1;
    }
    return height;
  }, [lastPage, pageHeights, renderPageBounds, replace]);
  var firstIndex = renderPageBounds[0] * step;
  var lastIndex = Math.min((renderPageBounds[1] + 1) * step, items.length) - 1;
  var result = [];
  if (aboveHeight) {
    var marker = import_react56.default.createElement(Box, {
      key: "above",
      ref: aboveMarkerRef,
      flex: false,
      height: aboveHeight + "px"
    });
    if (renderMarker) {
      marker = import_react56.default.cloneElement(renderMarker(marker), {
        key: "above"
      });
    }
    result.push(marker);
  }
  items.slice(firstIndex, lastIndex + 1).forEach(function(item, index) {
    var itemsIndex = firstIndex + index;
    var child = children2(item, itemsIndex);
    result.push(child);
  });
  if (replace || renderPageBounds[1] < lastPage || onMore) {
    var _marker = import_react56.default.createElement(Box, {
      key: "below",
      ref: !renderMarker && belowMarkerRef || void 0,
      flex: false,
      height: (belowHeight || 0) + "px"
    });
    if (renderMarker) {
      var renderedMarker = renderMarker(_marker);
      _marker = import_react56.default.cloneElement(renderedMarker, {
        key: "below",
        ref: function ref(node) {
          belowMarkerRef.current = node;
          var ref2 = renderedMarker.ref;
          if (typeof ref2 === "function") {
            ref2(node);
          } else if (ref2 !== null) {
            ref2.current = node;
          }
        }
      });
    }
    result.push(_marker);
  }
  return result;
};
InfiniteScroll.propTypes = InfiniteScrollPropTypes;

// node_modules/grommet/es6/components/TextInput/StyledTextInput.js
init_styled_components_browser_esm();
var getPlainStyle = function getPlainStyle2(plain) {
  if (plain === "full") {
    return Ce(["", " padding:0;"], plainInputStyle);
  }
  return plain && plainInputStyle;
};
var StyledTextInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledTextInput",
  componentId: "sc-1x30a0s-0"
})(["", " ", " ", " ", " ", " ", ";"], inputStyle, function(props) {
  return getPlainStyle(props.plain);
}, function(props) {
  return props.icon && (props.reverse ? "padding-right: " + props.theme.global.edgeSize.large + ";" : "padding-left: " + props.theme.global.edgeSize.large + ";");
}, function(props) {
  return props.disabled && disabledStyle(props.theme.textInput.disabled && props.theme.textInput.disabled.opacity);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.theme.textInput && props.theme.textInput.extend;
});
StyledTextInput.defaultProps = {};
Object.setPrototypeOf(StyledTextInput.defaultProps, defaultProps2);
var StyledTextInputContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTextInput__StyledTextInputContainer",
  componentId: "sc-1x30a0s-1"
})(["position:relative;width:100%;", ";"], function(props) {
  return props.theme.textInput && props.theme.textInput.container && props.theme.textInput.container.extend;
});
StyledTextInputContainer.defaultProps = {};
Object.setPrototypeOf(StyledTextInputContainer.defaultProps, defaultProps2);
var StyledPlaceholder = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTextInput__StyledPlaceholder",
  componentId: "sc-1x30a0s-2"
})(["position:absolute;left:", "px;top:50%;transform:translateY(-50%);display:flex;justify-content:center;pointer-events:none;", ";"], function(props) {
  return parseMetricToNum(getInputPadBySide(props, "left")) - parseMetricToNum(props.theme.global.control.border.width);
}, function(props) {
  return props.theme.textInput && props.theme.textInput.placeholder && props.theme.textInput.placeholder.extend;
});
StyledPlaceholder.defaultProps = {};
Object.setPrototypeOf(StyledPlaceholder.defaultProps, defaultProps2);
var StyledIcon = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTextInput__StyledIcon",
  componentId: "sc-1x30a0s-3"
})(["position:absolute;display:flex;justify:center;top:50%;transform:translateY(-50%);pointer-events:none;", ""], function(props) {
  return props.reverse ? "right: " + getInputPadBySide(props, "right") + ";" : "left: " + getInputPadBySide(props, "left") + ";";
});
var StyledSuggestions = styled_components_browser_esm_default.ol.withConfig({
  displayName: "StyledTextInput__StyledSuggestions",
  componentId: "sc-1x30a0s-4"
})(["border-top-left-radius:0;border-top-right-radius:0;margin:0;padding:0;list-style-type:none;", ";"], function(props) {
  return props.theme.textInput && props.theme.textInput.suggestions && props.theme.textInput.suggestions.extend;
});
StyledSuggestions.defaultProps = {};
Object.setPrototypeOf(StyledSuggestions.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/TextInput/propTypes.js
var import_prop_types29 = __toESM(require_prop_types());
var PropType26 = {};
if (true) {
  PropType26 = {
    a11yTitle: import_prop_types29.default.string,
    defaultSuggestion: import_prop_types29.default.number,
    dropAlign: import_prop_types29.default.shape({
      top: import_prop_types29.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types29.default.oneOf(["top", "bottom"]),
      right: import_prop_types29.default.oneOf(["left", "right"]),
      left: import_prop_types29.default.oneOf(["left", "right"])
    }),
    dropHeight: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types29.default.string]),
    dropTarget: import_prop_types29.default.object,
    dropProps: import_prop_types29.default.object,
    icon: import_prop_types29.default.element,
    id: import_prop_types29.default.string,
    focusIndicator: import_prop_types29.default.bool,
    messages: import_prop_types29.default.shape({
      enterSelect: import_prop_types29.default.string,
      suggestionsCount: import_prop_types29.default.string,
      suggestionsExist: import_prop_types29.default.string,
      suggestionIsOpen: import_prop_types29.default.string
    }),
    name: import_prop_types29.default.string,
    onChange: import_prop_types29.default.func,
    onSelect: import_prop_types29.default.func,
    onSuggestionSelect: import_prop_types29.default.func,
    onSuggestionsOpen: import_prop_types29.default.func,
    onSuggestionsClose: import_prop_types29.default.func,
    placeholder: import_prop_types29.default.node,
    plain: import_prop_types29.default.oneOfType([import_prop_types29.default.bool, import_prop_types29.default.oneOf(["full"])]),
    reverse: import_prop_types29.default.bool,
    size: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types29.default.string]),
    suggestions: import_prop_types29.default.arrayOf(import_prop_types29.default.oneOfType([import_prop_types29.default.shape({
      label: import_prop_types29.default.node,
      value: import_prop_types29.default.any
    }), import_prop_types29.default.string])),
    textAlign: import_prop_types29.default.oneOf(["start", "center", "end"]),
    value: import_prop_types29.default.oneOfType([import_prop_types29.default.string, import_prop_types29.default.number])
  };
}
var TextInputPropTypes = PropType26;

// node_modules/grommet/es6/components/TextInput/TextInput.js
var _excluded29 = ["a11yTitle", "defaultSuggestion", "defaultValue", "dropAlign", "dropHeight", "dropTarget", "dropProps", "focusIndicator", "icon", "id", "messages", "name", "onBlur", "onChange", "onFocus", "onKeyDown", "onSelect", "onSuggestionSelect", "onSuggestionsClose", "onSuggestionsOpen", "placeholder", "plain", "readOnly", "reverse", "suggestions", "textAlign", "value"];
function _extends51() {
  _extends51 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends51.apply(this, arguments);
}
function _objectWithoutPropertiesLoose26(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var renderLabel = function renderLabel2(suggestion) {
  if (suggestion && typeof suggestion === "object") {
    return suggestion.label || suggestion.value;
  }
  return suggestion;
};
var stringLabel = function stringLabel2(suggestion) {
  if (suggestion && typeof suggestion === "object") {
    if (suggestion.label && typeof suggestion.label === "string") {
      return suggestion.label;
    }
    return suggestion.value;
  }
  return suggestion;
};
var ContainerBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "TextInput__ContainerBox",
  componentId: "sc-1ai0c08-0"
})(["", ";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}"], function(props) {
  return props.dropHeight ? sizeStyle("max-height", props.dropHeight, props.theme) : "max-height: inherit;";
});
var defaultDropAlign = {
  top: "bottom",
  left: "left"
};
var TextInput = (0, import_react57.forwardRef)(function(_ref, ref) {
  var _inputRef$current;
  var a11yTitle = _ref.a11yTitle, defaultSuggestion = _ref.defaultSuggestion, defaultValue3 = _ref.defaultValue, _ref$dropAlign = _ref.dropAlign, dropAlign2 = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign, dropHeight = _ref.dropHeight, dropTarget = _ref.dropTarget, dropProps = _ref.dropProps, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, icon = _ref.icon, id = _ref.id, messages = _ref.messages, name = _ref.name, _onBlur = _ref.onBlur, onChange = _ref.onChange, _onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, onSelect = _ref.onSelect, onSuggestionSelect = _ref.onSuggestionSelect, onSuggestionsClose = _ref.onSuggestionsClose, onSuggestionsOpen = _ref.onSuggestionsOpen, placeholder = _ref.placeholder, plain = _ref.plain, readOnly = _ref.readOnly, reverse = _ref.reverse, suggestions = _ref.suggestions, textAlign = _ref.textAlign, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose26(_ref, _excluded29);
  var theme = (0, import_react57.useContext)(Ge) || defaultProps2.theme;
  var _useContext = (0, import_react57.useContext)(MessageContext), format3 = _useContext.format;
  var announce = (0, import_react57.useContext)(AnnounceContext);
  var formContext = (0, import_react57.useContext)(FormContext);
  var inputRef = useForwardedRef(ref);
  var dropRef = (0, import_react57.useRef)();
  var suggestionsRef = (0, import_react57.useRef)();
  var _formContext$useFormI = formContext.useFormInput({
    name: readOnly ? void 0 : name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react57.useState)(), focus = _useState[0], setFocus = _useState[1];
  var _useState2 = (0, import_react57.useState)(false), showDrop = _useState2[0], setShowDrop = _useState2[1];
  var handleSuggestionSelect = (0, import_react57.useMemo)(function() {
    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;
  }, [onSelect, onSuggestionSelect]);
  var handleTextSelect = (0, import_react57.useMemo)(function() {
    return onSelect && onSuggestionSelect ? onSelect : void 0;
  }, [onSelect, onSuggestionSelect]);
  var _useState3 = (0, import_react57.useState)(), suggestionsAtClose = _useState3[0], setSuggestionsAtClose = _useState3[1];
  var openDrop = (0, import_react57.useCallback)(function() {
    setShowDrop(true);
    announce(format3({
      id: "textInput.suggestionIsOpen",
      messages
    }));
    announce(suggestions.length + " " + format3({
      id: "textInput.suggestionsCount",
      messages
    }));
    if (onSuggestionsOpen)
      onSuggestionsOpen();
  }, [announce, messages, format3, onSuggestionsOpen, suggestions]);
  var closeDrop = (0, import_react57.useCallback)(function() {
    setSuggestionsAtClose(suggestions);
    setShowDrop(false);
    if (onSuggestionsClose)
      onSuggestionsClose();
  }, [onSuggestionsClose, suggestions]);
  var clickOutside = (0, import_react57.useCallback)(function(event) {
    if (event.target !== inputRef.current)
      closeDrop();
  }, [inputRef, closeDrop]);
  (0, import_react57.useEffect)(function() {
    if (focus && !showDrop && suggestions && suggestions.length && (!suggestionsAtClose || suggestionsAtClose.length !== suggestions.length)) {
      openDrop();
    }
  }, [focus, openDrop, showDrop, suggestions, suggestionsAtClose]);
  (0, import_react57.useEffect)(function() {
    if (showDrop && (!suggestions || !suggestions.length)) {
      closeDrop();
    }
  }, [closeDrop, showDrop, suggestions]);
  var valueSuggestionIndex = (0, import_react57.useMemo)(function() {
    return suggestions ? suggestions.map(function(suggestion) {
      return typeof suggestion === "object" ? suggestion.value : suggestion;
    }).indexOf(value) : -1;
  }, [suggestions, value]);
  var resetSuggestionIndex = (0, import_react57.useMemo)(function() {
    if (valueSuggestionIndex === -1 && typeof defaultSuggestion === "number") {
      return defaultSuggestion;
    }
    return valueSuggestionIndex;
  }, [defaultSuggestion, valueSuggestionIndex]);
  var _useState4 = (0, import_react57.useState)(resetSuggestionIndex), activeSuggestionIndex = _useState4[0], setActiveSuggestionIndex = _useState4[1];
  var _useState5 = (0, import_react57.useState)(), mouseMovedSinceLastKey = _useState5[0], setMouseMovedSinceLastKey = _useState5[1];
  (0, import_react57.useEffect)(function() {
    return setActiveSuggestionIndex(valueSuggestionIndex);
  }, [valueSuggestionIndex]);
  (0, import_react57.useEffect)(function() {
    if (!showDrop)
      setActiveSuggestionIndex(resetSuggestionIndex);
  }, [resetSuggestionIndex, showDrop]);
  (0, import_react57.useEffect)(function() {
    if (activeSuggestionIndex >= 0) {
      var label = stringLabel(suggestions[activeSuggestionIndex]);
      announce(label + " " + format3({
        id: "textInput.enterSelect",
        messages
      }));
    }
  }, [activeSuggestionIndex, announce, messages, format3, suggestions]);
  (0, import_react57.useEffect)(function() {
    var timer = setTimeout(function() {
      var list = suggestionsRef.current;
      if (showDrop && activeSuggestionIndex !== -1 && list) {
        var container = list.parentNode;
        var item = list.children[activeSuggestionIndex];
        if (container.scrollTo) {
          if (isNodeAfterScroll(item, container))
            container.scrollTo(0, item.offsetTop - (container.getBoundingClientRect().height - item.getBoundingClientRect().height));
          else if (isNodeBeforeScroll(item, container))
            container.scrollTo(0, item.offsetTop);
        }
      }
    }, 50);
    return function() {
      return clearTimeout(timer);
    };
  }, [activeSuggestionIndex, showDrop]);
  var setValueFromSuggestion = function setValueFromSuggestion2(event, suggestion) {
    inputRef.current.focus();
    inputRef.current.value = suggestion;
    closeDrop();
    if (handleSuggestionSelect) {
      if (event.persist)
        event.persist();
      var adjustedEvent = event;
      adjustedEvent.suggestion = suggestion;
      handleSuggestionSelect(adjustedEvent);
    }
    setValue(suggestion);
  };
  var onNextSuggestion = (0, import_react57.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);
    setActiveSuggestionIndex(nextActiveIndex);
    setMouseMovedSinceLastKey(false);
  }, [activeSuggestionIndex, suggestions]);
  var onPreviousSuggestion = (0, import_react57.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);
    setActiveSuggestionIndex(nextActiveIndex);
    setMouseMovedSinceLastKey(false);
  }, [activeSuggestionIndex]);
  var hasValue = value || ((_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.value);
  var showStyledPlaceholder = (0, import_react57.useMemo)(function() {
    return placeholder && typeof placeholder !== "string" && !hasValue;
  }, [hasValue, placeholder]);
  var drop;
  var extraProps = {
    onSelect: handleTextSelect
  };
  if (showDrop) {
    drop = import_react57.default.createElement(Drop, _extends51({
      ref: dropRef,
      id: id ? "text-input-drop__" + id : void 0,
      align: dropAlign2,
      responsive: false,
      target: dropTarget || inputRef.current,
      onClickOutside: clickOutside,
      onEsc: closeDrop
    }, dropProps), import_react57.default.createElement(ContainerBox, {
      overflow: "auto",
      dropHeight,
      onMouseMove: function onMouseMove() {
        return setMouseMovedSinceLastKey(true);
      }
    }, import_react57.default.createElement(StyledSuggestions, {
      ref: suggestionsRef
    }, import_react57.default.createElement(InfiniteScroll, {
      items: suggestions,
      step: theme.select.step,
      show: activeSuggestionIndex !== -1 ? activeSuggestionIndex : void 0
    }, function(suggestion, index, itemRef) {
      var renderedLabel = renderLabel(suggestion);
      var child;
      if (typeof renderedLabel !== "string")
        child = renderedLabel;
      else if (!theme.button.option)
        child = import_react57.default.createElement(Box, {
          align: "start",
          pad: "small"
        }, renderedLabel);
      return import_react57.default.createElement("li", {
        key: stringLabel(suggestion) + "-" + index,
        ref: itemRef
      }, import_react57.default.createElement(Button, {
        active: activeSuggestionIndex === index,
        fill: "horizontal",
        plain: !child ? void 0 : true,
        align: "start",
        kind: !child ? "option" : void 0,
        label: !child ? renderedLabel : void 0,
        onClick: function onClick(event) {
          return setValueFromSuggestion(event, suggestion);
        },
        onMouseMove: mouseMovedSinceLastKey && activeSuggestionIndex !== index ? function() {
          return setActiveSuggestionIndex(index);
        } : void 0
      }, child));
    }))));
  }
  var keyboardProps = {
    onKeyDown
  };
  if (showDrop) {
    keyboardProps.onEnter = function(event) {
      event.preventDefault();
      if (activeSuggestionIndex >= 0)
        setValueFromSuggestion(event, suggestions[activeSuggestionIndex]);
      else
        closeDrop();
    };
    if (activeSuggestionIndex > 0)
      keyboardProps.onUp = onPreviousSuggestion;
    if (activeSuggestionIndex < suggestions.length - 1)
      keyboardProps.onDown = onNextSuggestion;
    keyboardProps.onTab = closeDrop;
  } else if (suggestions && suggestions.length > 0) {
    keyboardProps.onDown = openDrop;
  }
  return import_react57.default.createElement(StyledTextInputContainer, {
    plain
  }, showStyledPlaceholder && import_react57.default.createElement(StyledPlaceholder, null, placeholder), icon && import_react57.default.createElement(StyledIcon, {
    reverse,
    theme
  }, icon), import_react57.default.createElement(Keyboard, _extends51({
    target: focus ? "document" : void 0
  }, keyboardProps), import_react57.default.createElement(StyledTextInput, _extends51({
    "aria-label": a11yTitle,
    ref: inputRef,
    id,
    name,
    autoComplete: "off",
    plain,
    placeholder: typeof placeholder === "string" ? placeholder : void 0,
    icon,
    reverse,
    focus,
    focusIndicator,
    textAlign
  }, rest, extraProps, {
    defaultValue: renderLabel(defaultValue3),
    value: renderLabel(value),
    readOnly,
    onFocus: function onFocus(event) {
      if (!focus) {
        setFocus(true);
        if (suggestions && suggestions.length > 0) {
          announce(format3({
            id: "textInput.suggestionsExist",
            messages
          }));
          openDrop();
        }
        if (_onFocus)
          _onFocus(event);
      }
    },
    onBlur: function onBlur(event) {
      if (!event.relatedTarget || event.relatedTarget !== dropRef.current) {
        setFocus(false);
        if (_onBlur)
          _onBlur(event);
      }
    },
    onChange: readOnly ? void 0 : function(event) {
      if (suggestions && focus && !showDrop) {
        openDrop();
      }
      setValue(event.target.value);
      setActiveSuggestionIndex(resetSuggestionIndex);
      if (onChange)
        onChange(event);
    }
  }))), drop);
});
TextInput.displayName = "TextInput";
TextInput.propTypes = TextInputPropTypes;

// node_modules/grommet/es6/components/DataTable/Searcher.js
var Searcher = function Searcher2(_ref) {
  var filtering = _ref.filtering, filters = _ref.filters, onFilter = _ref.onFilter, onFiltering = _ref.onFiltering, property = _ref.property;
  var theme = (0, import_react58.useContext)(Ge) || defaultProps2.theme;
  var inputRef = (0, import_react58.useRef)();
  var needsFocus = filtering === property;
  (0, import_react58.useEffect)(function() {
    if (inputRef && needsFocus) {
      inputRef.current.focus();
    }
  }, [needsFocus, inputRef]);
  return filtering === property ? import_react58.default.createElement(Keyboard, {
    onEsc: function onEsc() {
      return onFiltering(void 0);
    }
  }, import_react58.default.createElement(Box, {
    width: {
      min: "xsmall"
    },
    flex: true,
    pad: {
      horizontal: "small"
    }
  }, import_react58.default.createElement(TextInput, {
    name: "search-" + property,
    a11yTitle: "Search by " + property,
    ref: inputRef,
    value: filters[property],
    onChange: function onChange(event) {
      return onFilter(property, event.target.value);
    },
    onBlur: function onBlur() {
      return onFiltering(void 0);
    }
  }))) : import_react58.default.createElement(import_react58.default.Fragment, null, filters[property] ? import_react58.default.createElement(Box, {
    flex: false,
    pad: {
      horizontal: "small"
    },
    direction: "row",
    align: "center"
  }, import_react58.default.createElement(Text, null, filters[property])) : null, import_react58.default.createElement(Button, {
    a11yTitle: "Open search by " + property,
    icon: import_react58.default.createElement(import_FormSearch.FormSearch, {
      color: normalizeColor(filtering === property ? "brand" : "border", theme)
    }),
    hoverIndicator: true,
    onClick: function onClick() {
      return onFiltering(filtering === property ? void 0 : property);
    }
  }));
};
Searcher.displayName = "Searcher";
Searcher.defaultProps = {};
Object.setPrototypeOf(Searcher.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/ExpanderCell.js
var import_react59 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Blank = __toESM(require_Blank());
var _excluded30 = ["context", "expanded", "onToggle", "pad"];
var _excluded210 = ["background", "border", "context"];
function _extends52() {
  _extends52 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends52.apply(this, arguments);
}
function _objectWithoutPropertiesLoose27(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ExpanderControl = function ExpanderControl2(_ref) {
  var context = _ref.context, expanded = _ref.expanded, onToggle = _ref.onToggle, pad = _ref.pad, rest = _objectWithoutPropertiesLoose27(_ref, _excluded30);
  var theme = (0, import_react59.useContext)(Ge) || defaultProps2.theme;
  var content;
  if (onToggle) {
    var ExpandIcon = theme.dataTable.icons[expanded ? "contract" : "expand"];
    content = import_react59.default.createElement(ExpandIcon, {
      color: normalizeColor("border", theme)
    });
  } else {
    content = import_react59.default.createElement(import_Blank.Blank, null);
  }
  var normalizedThemeProps = _extends52({}, theme.table[context], theme.dataTable[context]);
  delete normalizedThemeProps.background;
  delete normalizedThemeProps.border;
  delete normalizedThemeProps.pad;
  content = import_react59.default.createElement(Box, _extends52({}, normalizedThemeProps, rest, {
    align: "center",
    fill: true,
    pad
  }), content);
  if (onToggle) {
    content = import_react59.default.createElement(Button, {
      fill: true,
      a11yTitle: expanded ? "collapse" : "expand",
      hoverIndicator: true,
      onClick: onToggle,
      plain: true
    }, content);
  }
  return content;
};
var ExpanderCell = function ExpanderCell2(_ref2) {
  var background = _ref2.background, border = _ref2.border, context = _ref2.context, rest = _objectWithoutPropertiesLoose27(_ref2, _excluded210);
  return import_react59.default.createElement(TableCell, {
    background,
    border,
    size: "xxsmall",
    plain: "noPad",
    verticalAlign: context === "groupEnd" ? "bottom" : "top"
  }, import_react59.default.createElement(ExpanderControl, _extends52({
    context
  }, rest)));
};
ExpanderCell.displayName = "ExpanderCell";
ExpanderCell.defaultProps = {};
Object.setPrototypeOf(ExpanderCell.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/StyledDataTable.js
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/TableRow/TableRow.js
var import_react60 = __toESM(require_react());
function _extends53() {
  _extends53 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends53.apply(this, arguments);
}
var TableRow = (0, import_react60.forwardRef)(function(props, ref) {
  return import_react60.default.createElement(StyledTableRow, _extends53({
    ref
  }, props));
});
TableRow.displayName = "TableRow";

// node_modules/grommet/es6/components/Table/Table.js
var import_react61 = __toESM(require_react());

// node_modules/grommet/es6/components/Table/propTypes.js
var import_prop_types30 = __toESM(require_prop_types());
function _extends54() {
  _extends54 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends54.apply(this, arguments);
}
var PropType27 = {};
if (true) {
  PropType27 = _extends54({}, genericProps, {
    caption: import_prop_types30.default.string
  });
}
var TablePropTypes = PropType27;

// node_modules/grommet/es6/components/Table/Table.js
var _excluded31 = ["caption", "children"];
function _objectWithoutPropertiesLoose28(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Table = function Table2(_ref) {
  var caption = _ref.caption, children2 = _ref.children, rest = _objectWithoutPropertiesLoose28(_ref, _excluded31);
  return import_react61.default.createElement(StyledTable, rest, caption ? import_react61.default.createElement(StyledTableDataCaption, null, caption) : null, children2);
};
Table.propTypes = TablePropTypes;

// node_modules/grommet/es6/components/TableBody/TableBody.js
var import_react62 = __toESM(require_react());
function _extends55() {
  _extends55 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends55.apply(this, arguments);
}
var TableBody = (0, import_react62.forwardRef)(function(props, ref) {
  return import_react62.default.createElement(TableContext.Provider, {
    value: "body"
  }, import_react62.default.createElement(StyledTableBody, _extends55({
    ref
  }, props)));
});
TableBody.displayName = "TableBody";

// node_modules/grommet/es6/components/TableHeader/TableHeader.js
var import_react63 = __toESM(require_react());
function _extends56() {
  _extends56 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends56.apply(this, arguments);
}
var TableHeader = (0, import_react63.forwardRef)(function(props, ref) {
  return import_react63.default.createElement(TableContext.Provider, {
    value: "header"
  }, import_react63.default.createElement(StyledTableHeader, _extends56({
    ref
  }, props)));
});
TableHeader.displayName = "TableHeader";

// node_modules/grommet/es6/components/TableFooter/TableFooter.js
var import_react64 = __toESM(require_react());
function _extends57() {
  _extends57 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends57.apply(this, arguments);
}
var TableFooter = (0, import_react64.forwardRef)(function(props, ref) {
  return import_react64.default.createElement(TableContext.Provider, {
    value: "footer"
  }, import_react64.default.createElement(StyledTableFooter, _extends57({
    ref
  }, props)));
});
TableFooter.displayName = "TableFooter";

// node_modules/grommet/es6/components/DataTable/StyledDataTable.js
var StyledDataTable = styled_components_browser_esm_default(Table).withConfig({
  displayName: "StyledDataTable",
  componentId: "sc-xrlyjm-0"
})(["position:relative;border-spacing:0;border-collapse:separate;height:auto;", " ", " ", ";"], genericStyles, function(props) {
  return props.fillProp && fillStyle(props.fillProp);
}, function(props) {
  return props.theme.dataTable && props.theme.dataTable.body && props.theme.dataTable.body.extend;
});
StyledDataTable.defaultProps = {};
Object.setPrototypeOf(StyledDataTable.defaultProps, defaultProps2);
var StyledContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledDataTable__StyledContainer",
  componentId: "sc-xrlyjm-1"
})(["", ";"], function(props) {
  return props.theme.dataTable && props.theme.dataTable.container && props.theme.dataTable.container.extend;
});
StyledContainer.defaultProps = {};
Object.setPrototypeOf(StyledContainer.defaultProps, defaultProps2);
var hoverStyle3 = Ce(["", " color:", ";"], function(props) {
  return backgroundStyle(normalizeColor(props.theme.table && props.theme.table.row && props.theme.table.row.hover && props.theme.table.row.hover.background || props.theme.global.hover.background, props.theme), props.theme);
}, function(props) {
  return normalizeColor(props.theme.table && props.theme.table.row && props.theme.table.row.hover && props.theme.table.row.hover.color || props.theme.global.hover.color, props.theme);
});
var StyledDataTableRow = styled_components_browser_esm_default(TableRow).withConfig({
  displayName: "StyledDataTable__StyledDataTableRow",
  componentId: "sc-xrlyjm-2"
})(["", " ", " ", ""], function(props) {
  return props.size && "\n    display: table;\n    width: 100%;\n    table-layout: fixed;\n  ";
}, function(props) {
  return props.onClick && "\n    cursor: pointer;\n  ";
}, function(props) {
  return props.active && hoverStyle3;
});
StyledDataTableRow.defaultProps = {};
Object.setPrototypeOf(StyledDataTableRow.defaultProps, defaultProps2);
var StyledDataTableBody = styled_components_browser_esm_default(TableBody).withConfig({
  displayName: "StyledDataTable__StyledDataTableBody",
  componentId: "sc-xrlyjm-3"
})(["", " &:focus{", "}&:focus:not(:focus-visible){", "}"], function(props) {
  return props.size && "\n    display: block;\n    width: 100%;\n    max-height: " + props.theme.global.size[props.size] + ";\n    overflow: auto;\n  ";
}, focusStyle({
  skipSvgChildren: true,
  forceOutline: true
}), unfocusStyle({
  skipSvgChildren: true,
  forceOutline: true
}));
StyledDataTableBody.defaultProps = {};
Object.setPrototypeOf(StyledDataTableBody.defaultProps, defaultProps2);
var StyledDataTableHeader = styled_components_browser_esm_default(TableHeader).withConfig({
  displayName: "StyledDataTable__StyledDataTableHeader",
  componentId: "sc-xrlyjm-4"
})(["", ""], function(props) {
  return props.size && "\n    display: table;\n    width: calc(100% - " + props.scrollOffset + "px);\n    table-layout: fixed;\n  ";
});
StyledDataTableHeader.defaultProps = {};
Object.setPrototypeOf(StyledDataTableHeader.defaultProps, defaultProps2);
var StyledDataTableFooter = styled_components_browser_esm_default(TableFooter).withConfig({
  displayName: "StyledDataTable__StyledDataTableFooter",
  componentId: "sc-xrlyjm-5"
})(["", " ", ""], function(props) {
  return props.size && "\n    display: table;\n    width: calc(100% - " + props.scrollOffset + "px);\n    table-layout: fixed;\n  ";
}, function(props) {
  return props.pin && "\n      /* Safari needs the relative positioning of tfoot specified */\n      position: sticky;\n      bottom: 0;\n      z-index: 1;\n  ";
});
StyledDataTableFooter.defaultProps = {};
Object.setPrototypeOf(StyledDataTableFooter.defaultProps, defaultProps2);
var StyledDataTableCell = styled_components_browser_esm_default(TableCell).withConfig({
  displayName: "StyledDataTable__StyledDataTableCell",
  componentId: "sc-xrlyjm-6"
})(["", ";", " ", ""], function(props) {
  return props.context === "header" && props.theme.dataTable && props.theme.dataTable.header && props.theme.dataTable.header.extend;
}, function(props) {
  return props.pin && props.pin.length > 0 && "position: sticky;\n    " + props.pin.map(function(p2) {
    return p2 + ": " + (props.pinnedOffset && props.pinnedOffset[p2] && props.pinnedOffset[p2] + "px" || 0) + ";";
  }).join(" ") + "\n    z-index: " + Object.keys(props.pin).length + ";\n  ";
}, function(props) {
  return props.pin && props.pin.length > 0 && props.theme.dataTable.pinned && props.theme.dataTable.pinned[props.context] && props.theme.dataTable.pinned[props.context].extend ? props.theme.dataTable.pinned[props.context].extend : "";
});
StyledDataTableCell.defaultProps = {};
Object.setPrototypeOf(StyledDataTableCell.defaultProps, defaultProps2);
var StyledPlaceholder2 = styled_components_browser_esm_default("caption").withConfig({
  displayName: "StyledDataTable__StyledPlaceholder",
  componentId: "sc-xrlyjm-7"
})(["position:absolute;", " ", " left:0;right:0;"], function(props) {
  return "top: " + (props.top || 0) + "px;";
}, function(props) {
  return "bottom: " + (props.bottom || 0) + "px;";
});

// node_modules/grommet/es6/components/DataTable/buildState.js
var set = function set2(obj, path, value) {
  var parts2 = path;
  if (Object(obj) !== obj)
    return obj;
  if (!Array.isArray(path))
    parts2 = path.toString().match(/[^.[\]]+/g) || [];
  parts2.slice(0, -1).reduce(function(acc, item, index) {
    if (Object(acc[item]) === acc[item]) {
      return acc[item];
    }
    acc[item] = Math.abs(parts2[index + 1]) > 0 === +parts2[index + 1] ? [] : {};
    return acc[item];
  }, obj)[parts2[parts2.length - 1]] = value;
  return obj;
};
var datumValue = function datumValue2(datum, property) {
  if (!property)
    return void 0;
  var parts2 = property.split(".");
  if (parts2.length === 1) {
    return datum[property];
  }
  if (!datum[parts2[0]]) {
    return void 0;
  }
  return datumValue2(datum[parts2[0]], parts2.slice(1).join("."));
};
var normalizePrimaryProperty = function normalizePrimaryProperty2(columns, primaryKey) {
  var result;
  columns.forEach(function(column) {
    if (column.primary && !result) {
      result = column.property;
    }
  });
  if (!result) {
    if (primaryKey === false)
      result = void 0;
    else if (primaryKey)
      result = primaryKey;
    else if (columns.length > 0)
      result = columns[0].property;
  }
  return result;
};
var initializeFilters = function initializeFilters2(columns) {
  var result = {};
  columns.forEach(function(column) {
    if (column.search) {
      result[column.property] = "";
    }
  });
  return result;
};
var escapeRegExp = function escapeRegExp2(input) {
  return input.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
};
var filterAndSortData = function filterAndSortData2(data, filters, onSearch, sort) {
  var result = data;
  if (!onSearch) {
    var regexps = {};
    Object.keys(filters).filter(function(n2) {
      return filters[n2];
    }).forEach(function(n2) {
      regexps[n2] = new RegExp(escapeRegExp(filters[n2]), "i");
    });
    if (Object.keys(regexps).length > 0) {
      result = data.filter(function(datum) {
        return !Object.keys(regexps).some(function(property2) {
          return !regexps[property2].test(datumValue(datum, property2));
        });
      });
    }
  }
  if (sort && !sort.external) {
    var property = sort.property, direction = sort.direction;
    result = result === data ? [].concat(data) : result;
    var sortAsc = direction === "asc";
    var before = sortAsc ? 1 : -1;
    var after = sortAsc ? -1 : 1;
    result.sort(function(d1, d2) {
      var d1Val = datumValue(d1, property);
      var d2Val = datumValue(d2, property);
      if (typeof d1Val === "string" && typeof d2Val === "string") {
        var sortResult = d1Val.localeCompare(d2Val, void 0, {
          sensitivity: "base"
        });
        return sortAsc ? sortResult : -sortResult;
      }
      if (d1Val > d2Val)
        return before;
      if (d1Val < d2Val)
        return after;
      return 0;
    });
  }
  return result;
};
var sumReducer = function sumReducer2(accumulated, next) {
  return accumulated + next;
};
var minReducer = function minReducer2(accumulated, next) {
  return accumulated === void 0 ? next : Math.min(accumulated, next);
};
var maxReducer = function maxReducer2(accumulated, next) {
  return accumulated === void 0 ? next : Math.max(accumulated, next);
};
var reducers = {
  max: maxReducer,
  min: minReducer,
  sum: sumReducer
};
var reducersInitValues = {
  min: Number.MAX_VALUE,
  max: Number.MIN_VALUE,
  sum: 0
};
var aggregateColumn = function aggregateColumn2(column, data) {
  var value;
  if (column.aggregate === "avg") {
    value = data.map(function(d2) {
      return datumValue(d2, column.property);
    }).reduce(sumReducer);
    value /= data.length;
  } else {
    value = data.map(function(d2) {
      return datumValue(d2, column.property);
    }).reduce(reducers[column.aggregate], reducersInitValues[column.aggregate]);
  }
  return value;
};
var aggregate = function aggregate2(columns, data) {
  var result = {};
  columns.forEach(function(column) {
    if (column.aggregate) {
      var value = aggregateColumn(column, data);
      result = set(result, column.property, value);
    }
  });
  return result;
};
var buildFooterValues = function buildFooterValues2(columns, data) {
  var aggregateValues = aggregate(columns, data);
  var result = {};
  columns.forEach(function(column) {
    if (column.footer) {
      if (column.footer.aggregate) {
        var value = datumValue(aggregateValues, column.property);
        result = set(result, column.property, value);
      } else {
        result = set(result, column.property, column.footer);
      }
    }
  });
  return result;
};
var buildGroups = function buildGroups2(columns, data, groupBy, primaryProperty) {
  var result;
  if (groupBy != null && groupBy.property || typeof groupBy === "string") {
    result = [];
    var groupMap = {};
    data.forEach(function(datum) {
      var _groupBy$expandable;
      var key = datumValue(datum, primaryProperty);
      var isGroup = key && ((_groupBy$expandable = groupBy.expandable) == null ? void 0 : _groupBy$expandable.includes(key));
      var groupByProperty = groupBy.property ? groupBy.property : groupBy;
      var groupValue = isGroup ? key : datumValue(datum, groupByProperty);
      if (!groupMap[groupValue]) {
        var group = {
          data: [],
          datum: isGroup ? datum : {},
          key: groupValue
        };
        group.datum[groupByProperty] = groupValue;
        result.push(group);
        groupMap[groupValue] = group;
      }
      if (!isGroup)
        groupMap[groupValue].data.push(datum);
    });
    if (!groupBy.expandable) {
      columns.forEach(function(column) {
        if (column.aggregate) {
          result.forEach(function(group) {
            var datum = group.datum;
            datum[column.property] = aggregateColumn(column, group.data);
          });
        }
      });
    }
  } else if (groupBy != null && groupBy.expandable) {
    result = groupBy.expandable.map(function(key) {
      return {
        data: [],
        datum: {},
        key
      };
    });
  }
  return result;
};
var buildGroupState = function buildGroupState2(groups, groupBy) {
  var result = {};
  if (groups) {
    groups.forEach(function(_ref) {
      var key = _ref.key;
      if (key)
        result[key] = {
          expanded: false
        };
    });
  }
  if (groupBy && groupBy.expand) {
    groupBy.expand.forEach(function(value) {
      result[value] = {
        expanded: true
      };
    });
  }
  return result;
};
var normalizeBackgroundColor = function normalizeBackgroundColor2(theme) {
  var background = theme.background;
  if (typeof background === "string")
    return background;
  if (background.light && background.dark)
    return background;
  if (background.color)
    return background.color;
  return void 0;
};
var tableContextNames = ["header", "body", "footer"];
var cellPropertyNames = ["background", "border", "pad"];
var normalizeCellProps = function normalizeCellProps2(props, theme) {
  var result = {};
  tableContextNames.forEach(function(context) {
    result[context] = {
      pinned: {}
    };
    cellPropertyNames.forEach(function(propName) {
      var _props$propName, _theme$dataTable, _theme$dataTable$cont, _theme$table, _theme$table$context, _props$propName3, _props$propName3$pinn, _props$propName5, _theme$dataTable2, _theme$dataTable2$pin, _theme$dataTable2$pin2;
      var value = (props == null ? void 0 : (_props$propName = props[propName]) == null ? void 0 : _props$propName[context]) || tableContextNames.every(function(n2) {
        var _props$propName2;
        return !(props != null && (_props$propName2 = props[propName]) != null && _props$propName2[n2]);
      }) && (props == null ? void 0 : props[propName]) || (theme == null ? void 0 : (_theme$dataTable = theme.dataTable) == null ? void 0 : (_theme$dataTable$cont = _theme$dataTable[context]) == null ? void 0 : _theme$dataTable$cont[propName]) || (theme == null ? void 0 : (_theme$table = theme.table) == null ? void 0 : (_theme$table$context = _theme$table[context]) == null ? void 0 : _theme$table$context[propName]);
      if (value !== void 0)
        result[context][propName] = value;
      value = (props == null ? void 0 : (_props$propName3 = props[propName]) == null ? void 0 : (_props$propName3$pinn = _props$propName3.pinned) == null ? void 0 : _props$propName3$pinn[context]) || context === "body" && tableContextNames.every(function(n2) {
        var _props$propName4, _props$propName4$pinn;
        return !(props != null && (_props$propName4 = props[propName]) != null && (_props$propName4$pinn = _props$propName4.pinned) != null && _props$propName4$pinn[n2]);
      }) && (props == null ? void 0 : (_props$propName5 = props[propName]) == null ? void 0 : _props$propName5.pinned) || (theme == null ? void 0 : (_theme$dataTable2 = theme.dataTable) == null ? void 0 : (_theme$dataTable2$pin = _theme$dataTable2.pinned) == null ? void 0 : (_theme$dataTable2$pin2 = _theme$dataTable2$pin[context]) == null ? void 0 : _theme$dataTable2$pin2[propName]);
      if (value !== void 0) {
        if (propName === "background" && theme.background && value.opacity && !value.color)
          value.color = normalizeBackgroundColor(theme);
        if (context === "body")
          result[context].pinned[propName] = value;
        else if (props.pin === true || props.pin === context)
          result[context][propName] = value;
      }
    });
  });
  return result;
};
var normalizeRowCellProps = function normalizeRowCellProps2(rowProps, cellProps, primaryKey, index) {
  var result = {
    pinned: {}
  };
  ["background", "border", "pad"].forEach(function(propName) {
    var _rowProps$primaryKey;
    var row = primaryKey && rowProps && (rowProps == null ? void 0 : (_rowProps$primaryKey = rowProps[primaryKey]) == null ? void 0 : _rowProps$primaryKey[propName]);
    var cell = cellProps[propName];
    var value = row && (Array.isArray(row) ? row[index % row.length] : row) || (Array.isArray(cell) ? cell[index % cell.length] : cell);
    if (value !== void 0)
      result[propName] = value;
    var rowPin = rowProps && rowProps.pinned && rowProps.pinned[propName];
    var cellPin = cellProps.pinned[propName];
    value = rowPin && (Array.isArray(rowPin) ? rowPin[index % rowPin.length] : rowPin) || (Array.isArray(cellPin) ? cellPin[index % cellPin.length] : cellPin);
    if (value !== void 0)
      result.pinned[propName] = value;
  });
  return result;
};

// node_modules/grommet/es6/components/DataTable/Header.js
var _excluded34 = ["background", "border", "color", "font", "gap", "pad", "units"];
var _excluded211 = ["cellProps", "columns", "data", "fill", "filtering", "filters", "groupBy", "groups", "groupState", "onFilter", "onFiltering", "onResize", "onSelect", "onSort", "onToggle", "onWidths", "pin", "pinnedOffset", "primaryProperty", "selected", "rowDetails", "sort", "widths"];
function _extends58() {
  _extends58 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends58.apply(this, arguments);
}
function _objectWithoutPropertiesLoose29(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var separateThemeProps = function separateThemeProps2(theme) {
  var _theme$dataTable$head = theme.dataTable.header, background = _theme$dataTable$head.background, border = _theme$dataTable$head.border, color = _theme$dataTable$head.color, font = _theme$dataTable$head.font, gap = _theme$dataTable$head.gap, pad = _theme$dataTable$head.pad, units = _theme$dataTable$head.units, rest = _objectWithoutPropertiesLoose29(_theme$dataTable$head, _excluded34);
  var textProps = _extends58({
    color
  }, font);
  var iconProps = {
    color
  };
  var layoutProps = _extends58({}, rest);
  return [layoutProps, textProps, iconProps];
};
var buttonStyle = function buttonStyle2(_ref) {
  var pad = _ref.pad, theme = _ref.theme;
  var styles = [];
  var _separateThemeProps = separateThemeProps(theme), layoutProps = _separateThemeProps[0], iconProps = _separateThemeProps[2];
  if (pad) {
    styles.push(kindPartStyles({
      pad
    }, theme));
  }
  if (layoutProps) {
    styles.push(kindPartStyles(layoutProps, theme));
  }
  if (layoutProps.hover) {
    var partStyles = kindPartStyles(layoutProps.hover, theme);
    if (partStyles.length > 0)
      styles.push(Ce(["&:hover{", "}"], partStyles));
  }
  if (iconProps.color) {
    styles.push(Ce(["svg{stroke:", ";fill:", ";}"], normalizeColor(iconProps.color, theme), normalizeColor(iconProps.color, theme)));
  }
  return styles;
};
var StyledHeaderCellButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "Header__StyledHeaderCellButton",
  componentId: "sc-1baku5q-0"
})(["", ""], function(props) {
  return buttonStyle(props);
});
var StyledContentBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Header__StyledContentBox",
  componentId: "sc-1baku5q-1"
})(["", ""], function(props) {
  return props.extend;
});
var Header2 = (0, import_react65.forwardRef)(function(_ref2, ref) {
  var cellProps = _ref2.cellProps, columns = _ref2.columns, data = _ref2.data, fill = _ref2.fill, filtering = _ref2.filtering, filters = _ref2.filters, groupBy = _ref2.groupBy, groups = _ref2.groups, groupState = _ref2.groupState, onFilter = _ref2.onFilter, onFiltering = _ref2.onFiltering, onResize = _ref2.onResize, onSelect = _ref2.onSelect, onSort = _ref2.onSort, onToggle = _ref2.onToggle, onWidths = _ref2.onWidths, pinProp = _ref2.pin, pinnedOffset = _ref2.pinnedOffset, primaryProperty = _ref2.primaryProperty, selected = _ref2.selected, rowDetails = _ref2.rowDetails, sort = _ref2.sort, widths = _ref2.widths, rest = _objectWithoutPropertiesLoose29(_ref2, _excluded211);
  var theme = (0, import_react65.useContext)(Ge) || defaultProps2.theme;
  var _separateThemeProps2 = separateThemeProps(theme), layoutProps = _separateThemeProps2[0], textProps = _separateThemeProps2[1];
  var _useState = (0, import_react65.useState)([]), cellWidths = _useState[0], setCellWidths = _useState[1];
  var updateWidths = (0, import_react65.useCallback)(function(width) {
    return setCellWidths(function(values) {
      return [].concat(values, [width]);
    });
  }, []);
  (0, import_react65.useEffect)(function() {
    if (onWidths && cellWidths.length !== 0) {
      onWidths(cellWidths);
    }
  }, [cellWidths, onWidths]);
  var pin = pinProp ? ["top"] : [];
  var selectPin = pinnedOffset != null && pinnedOffset._grommetDataTableSelect ? [].concat(pin, ["left"]) : pin;
  var totalSelectedGroups = groupBy != null && groupBy.select ? Object.keys(groupBy.select).reduce(function(total, cur) {
    return cur && groupBy.select[cur] === "all" ? total + 1 : total;
  }, 0) : 0;
  var totalSelected = ((selected == null ? void 0 : selected.length) || 0) + totalSelectedGroups;
  return import_react65.default.createElement(StyledDataTableHeader, _extends58({
    ref,
    fillProp: fill
  }, rest), import_react65.default.createElement(StyledDataTableRow, null, groups && import_react65.default.createElement(ExpanderCell, {
    background: cellProps.background,
    border: cellProps.border,
    context: "header",
    expanded: Object.keys(groupState).filter(function(k2) {
      return !groupState[k2].expanded;
    }).length === 0,
    onToggle,
    pad: cellProps.pad
  }), (selected || onSelect) && import_react65.default.createElement(StyledDataTableCell, {
    background: cellProps.background,
    onWidth: updateWidths,
    plain: "noPad",
    size: "auto",
    context: "header",
    scope: "col",
    pin: selectPin,
    pinnedOffset: pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect
  }, onSelect && import_react65.default.createElement(CheckBox, {
    a11yTitle: totalSelected === data.length ? "unselect all" : "select all",
    checked: groupBy != null && groupBy.select ? groupBy.select[""] === "all" : totalSelected > 0 && data.length > 0 && totalSelected === data.length,
    indeterminate: groupBy != null && groupBy.select ? groupBy.select[""] === "some" : totalSelected > 0 && totalSelected < data.length,
    onChange: function onChange() {
      var nextSelected;
      var nextGroupSelected = {};
      var allSelected = groupBy != null && groupBy.select ? groupBy.select[""] === "all" : totalSelected === data.length;
      if (allSelected) {
        nextSelected = [];
        nextGroupSelected[""] = "none";
      } else {
        var _groupBy$expandable;
        nextSelected = data.map(function(datum) {
          return datumValue(datum, primaryProperty);
        });
        nextGroupSelected[""] = "all";
        groupBy == null ? void 0 : (_groupBy$expandable = groupBy.expandable) == null ? void 0 : _groupBy$expandable.forEach(function(key) {
          nextGroupSelected[key] = "all";
        });
      }
      if (groupBy != null && groupBy.onSelect) {
        groupBy.onSelect(nextSelected, void 0, nextGroupSelected);
      } else
        onSelect(nextSelected);
    },
    pad: cellProps.pad
  })), rowDetails && import_react65.default.createElement(TableCell, {
    size: "xxsmall",
    plain: true,
    pad: "none"
  }), columns.map(function(_ref3) {
    var property = _ref3.property, header = _ref3.header, align = _ref3.align, columnPin = _ref3.pin, search = _ref3.search, sortable = _ref3.sortable, verticalAlign = _ref3.verticalAlign, size = _ref3.size, units = _ref3.units;
    var content;
    var unitsContent = units ? import_react65.default.createElement(Text, _extends58({}, textProps, theme.dataTable.header.units), units) : void 0;
    if (typeof header === "string") {
      content = import_react65.default.createElement(Text, textProps, header);
      if (Object.keys(layoutProps).length && (sortable === false || !onSort)) {
        content = import_react65.default.createElement(StyledContentBox, layoutProps, content);
      }
    } else
      content = header;
    if (onSort && sortable !== false) {
      var Icon;
      if (onSort && sortable !== false) {
        if (sort && sort.property === property) {
          Icon = theme.dataTable.icons[sort.direction !== "asc" ? "ascending" : "descending"];
        } else if (theme.dataTable.icons.sortable) {
          Icon = theme.dataTable.icons.sortable;
        }
      }
      content = import_react65.default.createElement(StyledHeaderCellButton, {
        plain: true,
        column: property,
        fill: "vertical",
        onClick: onSort(property),
        sort,
        pad: cellProps.pad,
        sortable: true
      }, import_react65.default.createElement(Box, {
        direction: "row",
        align: "center",
        gap: "xsmall",
        justify: align
      }, content, Icon && import_react65.default.createElement(Icon, null)));
    }
    if (unitsContent) {
      content = import_react65.default.createElement(Box, {
        align: "baseline",
        direction: "row"
      }, content, unitsContent);
    }
    content = import_react65.default.createElement(Box, {
      flex: "grow"
    }, content);
    if (search || onResize) {
      var resizer = onResize ? import_react65.default.createElement(Resizer, {
        property,
        onResize
      }) : null;
      var searcher = search && filters ? import_react65.default.createElement(Searcher, {
        filtering,
        filters,
        property,
        onFilter,
        onFiltering
      }) : null;
      content = import_react65.default.createElement(Box, {
        direction: "row",
        align: "center",
        justify: !align || align === "start" ? "between" : align,
        gap: theme.dataTable.header.gap,
        fill: "vertical",
        style: onResize ? {
          position: "relative"
        } : void 0
      }, content, searcher && resizer ? import_react65.default.createElement(Box, {
        flex: "shrink",
        direction: "row",
        align: "center",
        gap: theme.dataTable.header.gap
      }, searcher, resizer) : searcher || resizer);
    }
    var cellPin = [].concat(pin);
    if (columnPin)
      cellPin.push("left");
    return import_react65.default.createElement(StyledDataTableCell, {
      key: property,
      align,
      context: "header",
      verticalAlign,
      background: cellProps.background,
      border: cellProps.border,
      onWidth: updateWidths,
      pad: sortable === false || !onSort ? cellProps.pad : "none",
      pin: cellPin,
      plain: true,
      pinnedOffset: pinnedOffset && pinnedOffset[property],
      scope: "col",
      size: widths && widths[property] ? void 0 : size,
      style: widths && widths[property] ? {
        width: widths[property]
      } : void 0
    }, content);
  })));
});
Header2.displayName = "Header";
Header2.defaultProps = {};
Object.setPrototypeOf(Header2.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Footer.js
var import_react67 = __toESM(require_react());

// node_modules/grommet/es6/components/DataTable/Cell.js
var import_react66 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends59() {
  _extends59 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends59.apply(this, arguments);
}
var Cell = (0, import_react66.memo)(function(_ref) {
  var background = _ref.background, border = _ref.border, _ref$column = _ref.column, align = _ref$column.align, columnPin = _ref$column.pin, plain = _ref$column.plain, footer = _ref$column.footer, property = _ref$column.property, render = _ref$column.render, verticalAlign = _ref$column.verticalAlign, size = _ref$column.size, datum = _ref.datum, pad = _ref.pad, cellPin = _ref.pin, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, scope = _ref.scope;
  var theme = (0, import_react66.useContext)(Ge) || defaultProps2.theme;
  var value = datumValue(datum, property);
  var context = (0, import_react66.useContext)(TableContext);
  var renderContexts = context === "body" || context === "footer" && footer && footer.aggregate;
  var content;
  if (render && renderContexts) {
    content = render(datum);
  } else if (value !== void 0) {
    content = value;
  }
  if (typeof content === "string" || typeof content === "number") {
    var textProps = property === primaryProperty ? theme.dataTable.primary : {};
    content = import_react66.default.createElement(Text, textProps, content);
  }
  var pin = [];
  if (cellPin)
    pin.push.apply(pin, cellPin);
  if (columnPin)
    pin.push("left");
  return import_react66.default.createElement(StyledDataTableCell, _extends59({
    scope
  }, theme.dataTable[context], {
    align,
    context,
    verticalAlign,
    size,
    background,
    pinnedOffset,
    border,
    pad,
    pin,
    plain: plain ? "noPad" : void 0
  }), content);
});
Cell.displayName = "Cell";
Cell.defaultProps = {};
Object.setPrototypeOf(Cell.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Footer.js
var _excluded35 = ["cellProps", "columns", "fill", "footerValues", "groups", "onSelect", "pin", "pinnedOffset", "primaryProperty", "selected"];
function _extends60() {
  _extends60 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends60.apply(this, arguments);
}
function _objectWithoutPropertiesLoose30(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Footer3 = (0, import_react67.forwardRef)(function(_ref, ref) {
  var cellProps = _ref.cellProps, columns = _ref.columns, fill = _ref.fill, footerValues = _ref.footerValues, groups = _ref.groups, onSelect = _ref.onSelect, pinProp = _ref.pin, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, selected = _ref.selected, rest = _objectWithoutPropertiesLoose30(_ref, _excluded35);
  var pin = pinProp ? ["bottom"] : [];
  return import_react67.default.createElement(StyledDataTableFooter, _extends60({
    ref,
    fillProp: fill,
    pin: pinProp
  }, rest), import_react67.default.createElement(TableRow, null, groups && import_react67.default.createElement(TableCell, {
    plain: true,
    size: "xxsmall",
    pad: "none",
    verticalAlign: "top",
    background: cellProps.background,
    border: cellProps.border
  }), (selected || onSelect) && import_react67.default.createElement(StyledDataTableCell, {
    background: cellProps.background,
    context: "footer",
    pin
  }), columns.map(function(column) {
    var cellPin = [].concat(pin);
    if (column.pin)
      cellPin.push("left");
    return import_react67.default.createElement(Cell, {
      key: column.property,
      background: column.pin && cellProps.pinned.background || cellProps.background,
      border: column.pin && cellProps.pinned.border || cellProps.border,
      context: "footer",
      column,
      datum: footerValues,
      pad: column.pin && cellProps.pinned.pad || cellProps.pad,
      pin: pin.length ? pin : void 0,
      pinnedOffset: pinnedOffset && pinnedOffset[column.property],
      primaryProperty
    });
  })));
});
Footer3.displayName = "Footer";
Footer3.defaultProps = {};
Object.setPrototypeOf(Footer3.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Body.js
var import_react68 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded36 = ["cellProps", "columns", "data", "onMore", "replace", "onClickRow", "onSelect", "pinnedOffset", "primaryProperty", "rowProps", "selected", "rowDetails", "show", "size", "step", "rowExpand", "setRowExpand"];
function _extends61() {
  _extends61 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends61.apply(this, arguments);
}
function _objectWithoutPropertiesLoose31(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Row = (0, import_react68.memo)(function(_ref) {
  var cellProps = _ref.cellProps, primaryValue = _ref.primaryValue, index = _ref.index, rowRef = _ref.rowRef, size = _ref.size, active = _ref.active, onClickRow = _ref.onClickRow, datum = _ref.datum, selected = _ref.selected, onSelect = _ref.onSelect, isSelected = _ref.isSelected, rowDetails = _ref.rowDetails, isRowExpanded = _ref.isRowExpanded, setActive = _ref.setActive, setRowExpand = _ref.setRowExpand, rowExpand = _ref.rowExpand, columns = _ref.columns, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, data = _ref.data;
  return import_react68.default.createElement(import_react68.default.Fragment, null, import_react68.default.createElement(StyledDataTableRow, {
    ref: rowRef,
    size,
    active,
    onClick: onClickRow ? function(event) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.datum = datum;
      adjustedEvent.index = index;
      onClickRow(adjustedEvent);
    } : void 0,
    onMouseEnter: onClickRow ? function() {
      setActive(index);
    } : void 0,
    onMouseLeave: onClickRow ? function() {
      return setActive(void 0);
    } : void 0
  }, (selected || onSelect) && import_react68.default.createElement(Cell, {
    background: (pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect) && cellProps.pinned.background || cellProps.background,
    pinnedOffset: pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect,
    column: {
      pin: Boolean(pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect),
      plain: "noPad",
      size: "auto",
      render: function render() {
        return import_react68.default.createElement(CheckBox, {
          a11yTitle: (isSelected ? "unselect" : "select") + " " + primaryValue,
          checked: isSelected,
          disabled: !onSelect,
          onChange: function onChange() {
            if (isSelected) {
              onSelect(selected.filter(function(s2) {
                return s2 !== primaryValue;
              }));
            } else
              onSelect([].concat(selected, [primaryValue]));
          },
          pad: cellProps.pad
        });
      }
    }
  }), rowDetails && import_react68.default.createElement(ExpanderCell, {
    context: isRowExpanded ? "groupHeader" : "body",
    expanded: isRowExpanded,
    onToggle: function onToggle() {
      if (isRowExpanded) {
        setRowExpand(rowExpand.filter(function(s2) {
          return s2 !== index;
        }));
      } else {
        setRowExpand([].concat(rowExpand, [index]));
      }
    },
    pad: cellProps.pad
  }), columns.map(function(column) {
    return import_react68.default.createElement(Cell, {
      key: column.property,
      background: column.pin && cellProps.pinned.background || cellProps.background,
      border: column.pin && cellProps.pinned.border || cellProps.border,
      context: "body",
      column,
      datum,
      pad: column.pin && cellProps.pinned.pad || cellProps.pad,
      pinnedOffset: pinnedOffset && pinnedOffset[column.property],
      primaryProperty,
      scope: column.primary || column.property === primaryProperty ? "row" : void 0
    });
  })), rowDetails && isRowExpanded && import_react68.default.createElement(StyledDataTableRow, {
    key: index.toString() + "_expand"
  }, (selected || onSelect) && import_react68.default.createElement(TableCell, null), import_react68.default.createElement(TableCell, {
    colSpan: columns.length + 1
  }, rowDetails(data[index]))));
});
var Body = (0, import_react68.forwardRef)(function(_ref2, ref) {
  var cellPropsProp = _ref2.cellProps, columns = _ref2.columns, data = _ref2.data, onMore = _ref2.onMore, replace = _ref2.replace, onClickRow = _ref2.onClickRow, onSelect = _ref2.onSelect, pinnedOffset = _ref2.pinnedOffset, primaryProperty = _ref2.primaryProperty, rowProps = _ref2.rowProps, selected = _ref2.selected, rowDetails = _ref2.rowDetails, show = _ref2.show, size = _ref2.size, step = _ref2.step, rowExpand = _ref2.rowExpand, setRowExpand = _ref2.setRowExpand, rest = _objectWithoutPropertiesLoose31(_ref2, _excluded36);
  var theme = (0, import_react68.useContext)(Ge) || defaultProps2.theme;
  var _React$useState = import_react68.default.useState(), active = _React$useState[0], setActive = _React$useState[1];
  var _React$useState2 = import_react68.default.useState(), lastActive = _React$useState2[0], setLastActive = _React$useState2[1];
  return import_react68.default.createElement(Keyboard, {
    onEnter: onClickRow && active >= 0 ? function(event) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.datum = data[active];
      onClickRow(adjustedEvent);
    } : void 0,
    onUp: onClickRow && active ? function() {
      return setActive(active - 1);
    } : void 0,
    onDown: onClickRow && data.length ? function() {
      setActive(active >= 0 ? Math.min(active + 1, data.length - 1) : 0);
    } : void 0
  }, import_react68.default.createElement(StyledDataTableBody, _extends61({
    ref,
    size,
    tabIndex: onClickRow ? 0 : void 0,
    onFocus: function onFocus() {
      return !active && active !== 0 ? setActive(lastActive) : setActive(active);
    },
    onBlur: function onBlur() {
      setLastActive(active);
      setActive(void 0);
    }
  }, rest), import_react68.default.createElement(InfiniteScroll, {
    items: data,
    onMore,
    replace,
    renderMarker: function renderMarker(marker) {
      return import_react68.default.createElement(TableRow, null, import_react68.default.createElement(TableCell, null, marker));
    },
    show,
    step
  }, function(datum, index, rowRef) {
    var primaryValue = primaryProperty ? datumValue(datum, primaryProperty) : void 0;
    var isSelected = selected && selected.includes(primaryValue);
    var isRowExpanded = rowExpand && rowExpand.includes(index);
    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);
    return import_react68.default.createElement(Row, {
      key: index,
      setActive,
      rowRef,
      cellProps,
      primaryValue,
      isSelected,
      isRowExpanded,
      index,
      size,
      active: active >= 0 ? active === index : void 0,
      onClickRow,
      datum,
      selected,
      onSelect,
      rowDetails,
      setRowExpand,
      rowExpand,
      columns,
      primaryProperty,
      rowProps,
      data,
      theme,
      pinnedOffset
    });
  })));
});

// node_modules/grommet/es6/components/DataTable/GroupedBody.js
var import_react69 = __toESM(require_react());
var _excluded37 = ["cellProps", "columns", "data", "groupBy", "groups", "groupState", "pinnedOffset", "primaryProperty", "onMore", "onSelect", "onToggle", "onUpdate", "replace", "rowProps", "selected", "size", "step"];
function _extends62() {
  _extends62 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends62.apply(this, arguments);
}
function _objectWithoutPropertiesLoose32(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var GroupedBody = (0, import_react69.forwardRef)(function(_ref, ref) {
  var cellPropsProp = _ref.cellProps, columns = _ref.columns, data = _ref.data, groupBy = _ref.groupBy, groups = _ref.groups, groupState = _ref.groupState, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, onMore = _ref.onMore, onSelect = _ref.onSelect, onToggle = _ref.onToggle, onUpdate = _ref.onUpdate, replace = _ref.replace, rowProps = _ref.rowProps, selected = _ref.selected, size = _ref.size, step = _ref.step, rest = _objectWithoutPropertiesLoose32(_ref, _excluded37);
  var items = (0, import_react69.useMemo)(function() {
    var nextItems = [];
    groups.forEach(function(group) {
      var _ref2 = groupState[group.key] || {
        expanded: true
      }, expanded = _ref2.expanded;
      var memberCount = group.data.length;
      var groupSelected = [];
      var isGroupSelected = false;
      if (memberCount > 1 || onUpdate && group.key) {
        var primaryKeys = group.data.map(function(datum) {
          return datum[primaryProperty];
        });
        groupSelected = primaryKeys && selected ? primaryKeys.filter(function(val) {
          return selected.includes(val);
        }) : [];
        isGroupSelected = groupBy.select ? groupBy.select[group.key] === "all" : groupSelected.length === group.data.length && groupSelected.length > 0;
        var indeterminate = groupBy.select ? groupBy.select[group.key] === "some" : groupSelected.length > 0 && groupSelected.length < group.data.length;
        nextItems.push({
          expanded,
          key: group.key,
          datum: group.datum,
          context: "groupHeader",
          isSelected: isGroupSelected,
          indeterminate,
          onChange: function onChange() {
            var nextSelected = isGroupSelected || indeterminate ? selected.filter(function(s2) {
              return !groupSelected.includes(s2);
            }) : [].concat(selected, primaryKeys);
            if (groupBy.onSelect) {
              groupBy.onSelect(nextSelected, group.datum, groupBy.select);
            } else {
              onSelect(nextSelected, group.datum);
            }
          }
        });
      }
      if (!onUpdate && memberCount === 1 || expanded) {
        group.data.forEach(function(datum, index) {
          var primaryValue = primaryProperty ? datumValue(datum, primaryProperty) : void 0;
          var isSelected = selected == null ? void 0 : selected.includes(primaryValue);
          nextItems.push({
            key: datum[primaryProperty],
            primaryValue: primaryProperty ? datumValue(datum, primaryProperty) : void 0,
            datum,
            context: memberCount > 1 && index === memberCount - 1 ? "groupEnd" : "body",
            isSelected,
            onChange: function onChange() {
              var nextSelected = isSelected ? selected.filter(function(s2) {
                return s2 !== primaryValue;
              }) : [].concat(selected, [primaryValue]);
              onSelect(nextSelected, datum);
            }
          });
        });
      }
    });
    return nextItems;
  }, [groups, groupBy, groupState, primaryProperty, selected, onSelect, onUpdate]);
  return import_react69.default.createElement(StyledDataTableBody, _extends62({
    ref,
    size
  }, rest), import_react69.default.createElement(InfiniteScroll, {
    items,
    onMore,
    replace,
    renderMarker: function renderMarker(marker) {
      return import_react69.default.createElement(TableRow, null, import_react69.default.createElement(TableCell, null, marker));
    },
    step
  }, function(row, index, rowRef) {
    var context = row.context, datum = row.datum, expanded = row.expanded, indeterminate = row.indeterminate, isSelected = row.isSelected, key = row.key, onChange = row.onChange, primaryValue = row.primaryValue;
    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);
    return import_react69.default.createElement(StyledDataTableRow, {
      ref: rowRef,
      key,
      size
    }, import_react69.default.createElement(ExpanderCell, {
      background: cellProps.background,
      border: cellProps.border,
      context,
      pad: cellProps.pad,
      onToggle: context === "groupHeader" ? onToggle(key) : void 0,
      expanded
    }), (selected || onSelect) && import_react69.default.createElement(TableCell, {
      background: cellProps.background,
      plain: "noPad",
      size: "auto"
    }, import_react69.default.createElement(CheckBox, {
      a11yTitle: (isSelected ? "unselect" : "select") + " " + (context === "groupHeader" ? key : primaryValue),
      checked: isSelected,
      indeterminate,
      disabled: !onSelect,
      onChange,
      pad: cellProps.pad
    })), columns.map(function(column) {
      var scope;
      if (context === "groupHeader") {
        scope = column.property === groupBy.property ? "row" : void 0;
      } else {
        scope = column.primary ? "row" : void 0;
      }
      return import_react69.default.createElement(Cell, {
        key: column.property,
        background: cellProps.background,
        border: cellProps.border,
        context,
        column,
        datum,
        pad: cellProps.pad,
        scope,
        pinnedOffset: context === "groupHeader" && pinnedOffset && pinnedOffset[column.property]
      });
    }));
  }));
});

// node_modules/grommet/es6/components/Pagination/Pagination.js
var import_react72 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Nav/Nav.js
var import_react70 = __toESM(require_react());
function _extends63() {
  _extends63 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends63.apply(this, arguments);
}
var Nav = function Nav2(_ref) {
  var rest = _extends63({}, _ref);
  return import_react70.default.createElement(Box, _extends63({
    as: "nav",
    flex: false,
    gap: "medium"
  }, rest));
};

// node_modules/grommet/es6/components/Pagination/PageControl.js
var import_react71 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Pagination/StyledPageControl.js
init_styled_components_browser_esm();
var sizeStyle14 = function sizeStyle15(props) {
  var style = props.theme.pagination.button && props.theme.pagination.button.size && props.theme.pagination.button.size[props.size || "medium"];
  return style ? {
    content: {
      fontSize: style.font && style.font.size,
      lineHeight: style.font && style.font.height
    },
    container: {
      height: style.height,
      minWidth: style.width
    }
  } : "";
};
var StyledPaginationButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledPageControl__StyledPaginationButton",
  componentId: "sc-1vlfaez-0"
})(["> svg{margin:0 auto;}", ";"], function(props) {
  return sizeStyle14(props).content;
});
var StyledContainer2 = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledPageControl__StyledContainer",
  componentId: "sc-1vlfaez-1"
})(["display:flex;align-items:center;justify-content:center;max-width:100%;", ";", ";"], function(props) {
  return sizeStyle14(props).container;
}, function(props) {
  return props.theme.pagination.control && props.theme.pagination.control.extend;
});
var StyledSeparator = styled_components_browser_esm_default(Text).withConfig({
  displayName: "StyledPageControl__StyledSeparator",
  componentId: "sc-1vlfaez-2"
})(["font-weight:bold;", ";", ";"], function(props) {
  return "font-size: " + (sizeStyle14(props).content && sizeStyle14(props).content.fontSize);
}, function(props) {
  return "line-height: " + (sizeStyle14(props).content && sizeStyle14(props).content.lineHeight);
});

// node_modules/grommet/es6/components/Pagination/PageControl.js
var _excluded38 = ["control", "separator", "size"];
function _extends64() {
  _extends64 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends64.apply(this, arguments);
}
function _objectWithoutPropertiesLoose33(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var PageControl = function PageControl2(_ref) {
  var control = _ref.control, separator = _ref.separator, sizeProp = _ref.size, rest = _objectWithoutPropertiesLoose33(_ref, _excluded38);
  var theme = (0, import_react71.useContext)(Ge);
  var size = sizeProp || "medium";
  return import_react71.default.createElement(StyledContainer2, {
    as: "li",
    size
  }, separator ? import_react71.default.createElement(StyledSeparator, {
    size
  }, "\u2026") : import_react71.default.createElement(StyledPaginationButton, _extends64({
    a11yTitle: "Go to page " + control,
    fill: true,
    kind: theme.pagination.button,
    label: control,
    size
  }, rest)));
};

// node_modules/grommet/es6/components/Pagination/propTypes.js
var import_prop_types31 = __toESM(require_prop_types());
function _extends65() {
  _extends65 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends65.apply(this, arguments);
}
var PropType28 = {};
if (true) {
  PropType28 = _extends65({}, genericProps, {
    numberEdgePages: import_prop_types31.default.number,
    numberItems: import_prop_types31.default.number,
    numberMiddlePages: import_prop_types31.default.number,
    onChange: import_prop_types31.default.func,
    page: import_prop_types31.default.number,
    size: import_prop_types31.default.oneOf(["small", "medium", "large"]),
    step: import_prop_types31.default.number
  });
}
var PaginationPropTypes = PropType28;

// node_modules/grommet/es6/components/Pagination/Pagination.js
var _excluded39 = ["a11yTitle", "aria-label", "numberItems", "numberEdgePages", "numberMiddlePages", "onChange", "page", "size", "step"];
function _extends66() {
  _extends66 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends66.apply(this, arguments);
}
function _objectWithoutPropertiesLoose34(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var StyledPaginationContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Pagination__StyledPaginationContainer",
  componentId: "sc-rnlw6m-0"
})(["", ""], function(props) {
  return props.theme.pagination.container && props.theme.pagination.container.extend;
});
var getPageIndices = function getPageIndices2(begin, end) {
  var indices = [];
  for (var i2 = begin; i2 <= end; i2 += 1) {
    indices.push(i2);
  }
  return indices;
};
var Pagination = (0, import_react72.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], numberItems = _ref.numberItems, _ref$numberEdgePages = _ref.numberEdgePages, numberEdgePages = _ref$numberEdgePages === void 0 ? 1 : _ref$numberEdgePages, _ref$numberMiddlePage = _ref.numberMiddlePages, numberMiddlePagesProp = _ref$numberMiddlePage === void 0 ? 3 : _ref$numberMiddlePage, onChange = _ref.onChange, pageProp = _ref.page, size = _ref.size, _ref$step = _ref.step, step = _ref$step === void 0 ? 10 : _ref$step, rest = _objectWithoutPropertiesLoose34(_ref, _excluded39);
  var theme = (0, import_react72.useContext)(Ge) || defaultProps2.theme;
  var totalPages = Math.ceil(numberItems / step);
  var _useState = (0, import_react72.useState)(Math.min(pageProp, totalPages) || 1), activePage = _useState[0], setActivePage = _useState[1];
  (0, import_react72.useEffect)(function() {
    setActivePage(pageProp || 1);
  }, [pageProp]);
  var beginPages = getPageIndices(1, Math.min(numberEdgePages, totalPages));
  var endPages = getPageIndices(Math.max(totalPages - numberEdgePages + 1, numberEdgePages + 1), totalPages);
  var numberMiddlePages;
  if (numberMiddlePagesProp < 1) {
    numberMiddlePages = 1;
    console.warn('Property "numberMiddlePages" should not be < 1. One middle page button will be shown. Set "numberMiddlePages" >= 1 to remove this warning.');
  } else
    numberMiddlePages = numberMiddlePagesProp;
  var startingMiddlePages;
  if (numberMiddlePages % 2)
    startingMiddlePages = Math.min(activePage - Math.floor(numberMiddlePages / 2), totalPages - numberEdgePages - numberMiddlePages);
  else
    startingMiddlePages = Math.min(activePage - Math.floor(numberMiddlePages / 2) + 1, totalPages - numberEdgePages - numberMiddlePages);
  var middlePagesBegin = Math.max(startingMiddlePages, numberEdgePages + 2);
  var middlePagesEnd = Math.min(Math.max(activePage + Math.floor(numberMiddlePages / 2), numberEdgePages + numberMiddlePages + 1), endPages.length > 0 ? endPages[0] - 2 : totalPages - 1);
  var middlePages = getPageIndices(middlePagesBegin, middlePagesEnd);
  var beginFlex = [];
  if (middlePagesBegin > numberEdgePages + 2)
    beginFlex = ["more-prev"];
  else if (numberEdgePages + 1 < totalPages - numberEdgePages)
    beginFlex = [numberEdgePages + 1];
  var endFlex = [];
  if (middlePagesEnd < totalPages - numberEdgePages - 1)
    endFlex = ["more-next"];
  else if (totalPages - numberEdgePages > numberEdgePages)
    endFlex = [totalPages - numberEdgePages];
  var getItemIndices = function getItemIndices2(nextPage) {
    var startIndex = step * (nextPage - 1);
    var endIndex = startIndex + step;
    return {
      startIndex,
      endIndex
    };
  };
  var handleClick = function handleClick2(event, nextPage) {
    setActivePage(nextPage);
    if (onChange) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.page = nextPage;
      var _getItemIndices = getItemIndices(nextPage), startIndex = _getItemIndices.startIndex, endIndex = _getItemIndices.endIndex;
      adjustedEvent.startIndex = startIndex;
      adjustedEvent.endIndex = endIndex;
      onChange(adjustedEvent);
    }
  };
  var NextIcon = theme.pagination.icons.next;
  var PreviousIcon = theme.pagination.icons.previous;
  var iconColor = theme.pagination.icons.color;
  var navProps = {
    next: {
      "aria-disabled": activePage === totalPages ? "true" : void 0,
      disabled: activePage === totalPages || !numberItems,
      icon: import_react72.default.createElement(NextIcon, {
        color: iconColor
      }),
      onClick: function onClick(event) {
        var nextPage = activePage + 1;
        handleClick(event, nextPage);
      },
      label: void 0
    },
    previous: {
      "aria-disabled": activePage === 1 ? "true" : void 0,
      disabled: activePage === 1 || !numberItems,
      icon: import_react72.default.createElement(PreviousIcon, {
        color: iconColor
      }),
      onClick: function onClick(event) {
        var previousPage = activePage - 1;
        handleClick(event, previousPage);
      },
      label: void 0
    }
  };
  var controls = ["previous"].concat(beginPages, beginFlex, middlePages, endFlex, endPages, ["next"]);
  controls = controls.map(function(control) {
    return _extends66({
      active: control === activePage,
      a11yTitle: typeof control === "number" ? "Go to page " + control : "Go to " + control + " page",
      "aria-current": control === activePage ? "page" : void 0,
      control,
      onClick: function onClick(event) {
        handleClick(event, control);
      },
      separator: control === "more-prev" || control === "more-next"
    }, navProps[control]);
  });
  return import_react72.default.createElement(StyledPaginationContainer, _extends66({}, theme.pagination.container, rest), import_react72.default.createElement(Nav, {
    a11yTitle: ariaLabel || a11yTitle || "Pagination Navigation",
    ref
  }, import_react72.default.createElement(Box, _extends66({
    as: "ul"
  }, theme.pagination.controls), controls.map(function(control, index) {
    return import_react72.default.createElement(PageControl, _extends66({
      key: index,
      size
    }, control));
  }))));
});
Pagination.displayName = "Pagination";
Pagination.propTypes = PaginationPropTypes;

// node_modules/grommet/es6/components/DataTable/propTypes.js
var import_prop_types32 = __toESM(require_prop_types());
function _extends67() {
  _extends67 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends67.apply(this, arguments);
}
var sizes2 = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var sides = ["horizontal", "vertical", "top", "bottom", "left", "right"];
var parts = ["header", "body", "footer"];
var padShapeSides = {};
sides.forEach(function(side) {
  padShapeSides[side] = import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(sizes2), import_prop_types32.default.string]);
});
var padShapeParts = {};
parts.forEach(function(part) {
  padShapeParts[part] = {};
  sides.forEach(function(side) {
    padShapeParts[part][side] = import_prop_types32.default.oneOf(sizes2);
  });
});
var backgroundShape = {};
[].concat(parts, ["pinned"]).forEach(function(part) {
  backgroundShape[part] = import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.shape({
    dark: import_prop_types32.default.string,
    light: import_prop_types32.default.string
  }), import_prop_types32.default.arrayOf(import_prop_types32.default.string)]);
});
var borderTypes = [import_prop_types32.default.bool, import_prop_types32.default.oneOf(sides), import_prop_types32.default.shape({
  color: import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.shape({
    dark: import_prop_types32.default.string,
    light: import_prop_types32.default.string
  })]),
  side: import_prop_types32.default.oneOf(sides),
  size: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(sizes2), import_prop_types32.default.string])
})];
var borderShape = {};
parts.forEach(function(part) {
  borderShape[part] = import_prop_types32.default.oneOfType(borderTypes);
});
var PropType29 = {};
if (true) {
  PropType29 = _extends67({}, genericProps, {
    background: import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.arrayOf(import_prop_types32.default.string), import_prop_types32.default.shape(backgroundShape)]),
    border: import_prop_types32.default.oneOfType([].concat(borderTypes, [import_prop_types32.default.shape(borderShape)])),
    columns: import_prop_types32.default.arrayOf(import_prop_types32.default.shape({
      align: import_prop_types32.default.oneOf(["center", "start", "end"]),
      aggregate: import_prop_types32.default.oneOf(["avg", "max", "min", "sum"]),
      footer: import_prop_types32.default.oneOfType([import_prop_types32.default.node, import_prop_types32.default.shape({
        aggregate: import_prop_types32.default.bool
      })]),
      header: import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.node, import_prop_types32.default.shape({
        aggregate: import_prop_types32.default.bool
      })]),
      pin: import_prop_types32.default.bool,
      plain: import_prop_types32.default.bool,
      primary: import_prop_types32.default.bool,
      property: import_prop_types32.default.string.isRequired,
      render: import_prop_types32.default.func,
      search: import_prop_types32.default.bool,
      sortable: import_prop_types32.default.bool,
      size: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(["small", "medium", "large", "xlarge", "1/2", "1/4", "2/4", "3/4", "1/3", "2/3"]), import_prop_types32.default.string]),
      units: import_prop_types32.default.string,
      verticalAlign: import_prop_types32.default.oneOf(["middle", "top", "bottom"])
    })),
    data: import_prop_types32.default.arrayOf(import_prop_types32.default.shape({})),
    fill: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(["horizontal", "vertical"]), import_prop_types32.default.bool]),
    groupBy: import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.shape({
      property: import_prop_types32.default.string,
      expand: import_prop_types32.default.arrayOf(import_prop_types32.default.string),
      expandable: import_prop_types32.default.arrayOf(import_prop_types32.default.string),
      select: import_prop_types32.default.objectOf(import_prop_types32.default.oneOf(["all", "some", "none"])),
      onExpand: import_prop_types32.default.func,
      onSelect: import_prop_types32.default.func
    })]),
    onClickRow: import_prop_types32.default.func,
    rowDetails: import_prop_types32.default.func,
    onMore: import_prop_types32.default.func,
    onSearch: import_prop_types32.default.func,
    onSelect: import_prop_types32.default.func,
    onSort: import_prop_types32.default.func,
    onUpdate: import_prop_types32.default.func,
    pad: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(sizes2), import_prop_types32.default.string, import_prop_types32.default.shape(padShapeSides), import_prop_types32.default.shape(padShapeParts)]),
    paginate: import_prop_types32.default.oneOfType([import_prop_types32.default.bool, import_prop_types32.default.object]),
    pin: import_prop_types32.default.oneOfType([import_prop_types32.default.bool, import_prop_types32.default.oneOf(["header", "footer"])]),
    placeholder: import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.node]),
    primaryKey: import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.bool]),
    replace: import_prop_types32.default.bool,
    resizeable: import_prop_types32.default.bool,
    rowProps: import_prop_types32.default.shape({}),
    select: import_prop_types32.default.arrayOf(import_prop_types32.default.oneOfType([import_prop_types32.default.string, import_prop_types32.default.number])),
    show: import_prop_types32.default.oneOfType([import_prop_types32.default.number, import_prop_types32.default.shape({
      page: import_prop_types32.default.number
    })]),
    size: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types32.default.string]),
    sort: import_prop_types32.default.shape({
      direction: import_prop_types32.default.oneOf(["asc", "desc"]),
      external: import_prop_types32.default.bool,
      property: import_prop_types32.default.string.isRequired
    }),
    sortable: import_prop_types32.default.bool,
    step: import_prop_types32.default.number
  });
}
var DataTablePropTypes = PropType29;

// node_modules/grommet/es6/components/DataTable/DataTable.js
var _excluded40 = ["background", "border", "columns", "data", "fill", "groupBy", "onClickRow", "onMore", "onSearch", "onSelect", "onSort", "onUpdate", "replace", "pad", "paginate", "pin", "placeholder", "primaryKey", "resizeable", "rowProps", "select", "show", "size", "sort", "sortable", "rowDetails", "step"];
function _extends68() {
  _extends68 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends68.apply(this, arguments);
}
function _objectWithoutPropertiesLoose35(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function useGroupState(groups, groupBy) {
  var _useState = (0, import_react73.useState)(function() {
    return buildGroupState(groups, groupBy);
  }), groupState = _useState[0], setGroupState = _useState[1];
  var _useState2 = (0, import_react73.useState)({
    groups,
    groupBy
  }), prevDeps = _useState2[0], setPrevDeps = _useState2[1];
  var prevGroups = prevDeps.groups, prevGroupBy = prevDeps.groupBy;
  if (groups !== prevGroups || groupBy !== prevGroupBy) {
    setPrevDeps({
      groups,
      groupBy
    });
    var nextGroupState = buildGroupState(groups, groupBy);
    setGroupState(nextGroupState);
    return [nextGroupState, setGroupState];
  }
  return [groupState, setGroupState];
}
var DataTable = function DataTable2(_ref) {
  var background = _ref.background, border = _ref.border, _ref$columns = _ref.columns, columns = _ref$columns === void 0 ? [] : _ref$columns, _ref$data = _ref.data, data = _ref$data === void 0 ? [] : _ref$data, fill = _ref.fill, groupBy = _ref.groupBy, onClickRow = _ref.onClickRow, onMore = _ref.onMore, onSearch = _ref.onSearch, onSelect = _ref.onSelect, onSortProp = _ref.onSort, onUpdate = _ref.onUpdate, replace = _ref.replace, pad = _ref.pad, paginate = _ref.paginate, pin = _ref.pin, placeholder = _ref.placeholder, primaryKey = _ref.primaryKey, resizeable = _ref.resizeable, rowProps = _ref.rowProps, select2 = _ref.select, showProp = _ref.show, size = _ref.size, sortProp = _ref.sort, sortable = _ref.sortable, rowDetails = _ref.rowDetails, _ref$step = _ref.step, step = _ref$step === void 0 ? 50 : _ref$step, rest = _objectWithoutPropertiesLoose35(_ref, _excluded40);
  var theme = (0, import_react73.useContext)(Ge) || defaultProps2.theme;
  var primaryProperty = (0, import_react73.useMemo)(function() {
    return normalizePrimaryProperty(columns, primaryKey);
  }, [columns, primaryKey]);
  var showFooter = (0, import_react73.useMemo)(function() {
    return columns.filter(function(c2) {
      return c2.footer;
    }).length > 0;
  }, [columns]);
  var _useState3 = (0, import_react73.useState)(), filtering = _useState3[0], setFiltering = _useState3[1];
  var _useState4 = (0, import_react73.useState)(initializeFilters(columns)), filters = _useState4[0], setFilters = _useState4[1];
  var _useState5 = (0, import_react73.useState)(sortProp || {}), sort = _useState5[0], setSort = _useState5[1];
  var adjustedData = (0, import_react73.useMemo)(function() {
    return onUpdate ? data : filterAndSortData(data, filters, onSearch, sort);
  }, [data, filters, onSearch, onUpdate, sort]);
  var footerValues = (0, import_react73.useMemo)(function() {
    return buildFooterValues(columns, adjustedData);
  }, [adjustedData, columns]);
  var cellProps = (0, import_react73.useMemo)(function() {
    return normalizeCellProps({
      background,
      border,
      pad,
      pin
    }, theme);
  }, [background, border, pad, pin, theme]);
  var groups = (0, import_react73.useMemo)(function() {
    return buildGroups(columns, adjustedData, groupBy, primaryProperty);
  }, [adjustedData, columns, groupBy, primaryProperty]);
  var _useGroupState = useGroupState(groups, groupBy), groupState = _useGroupState[0], setGroupState = _useGroupState[1];
  var _useState6 = (0, import_react73.useState)(step), limit = _useState6[0], setLimit = _useState6[1];
  var _useState7 = (0, import_react73.useState)(select2 || onSelect && [] || void 0), selected = _useState7[0], setSelected = _useState7[1];
  (0, import_react73.useEffect)(function() {
    return setSelected(select2 || onSelect && [] || void 0);
  }, [onSelect, select2]);
  var _useState8 = (0, import_react73.useState)([]), rowExpand = _useState8[0], setRowExpand = _useState8[1];
  var _useState9 = (0, import_react73.useState)({}), widths = _useState9[0], setWidths = _useState9[1];
  var headerRef = (0, import_react73.useRef)();
  var bodyRef = (0, import_react73.useRef)();
  var footerRef = (0, import_react73.useRef)();
  var _useState10 = (0, import_react73.useState)(), headerHeight = _useState10[0], setHeaderHeight = _useState10[1];
  var _useState11 = (0, import_react73.useState)(), footerHeight = _useState11[0], setFooterHeight = _useState11[1];
  var _useState12 = (0, import_react73.useState)(0), scrollOffset = _useState12[0], setScrollOffset = _useState12[1];
  var _useState13 = (0, import_react73.useState)(), pinnedOffset = _useState13[0], setPinnedOffset = _useState13[1];
  var onHeaderWidths = (0, import_react73.useCallback)(function(columnWidths) {
    var hasSelectColumn = Boolean(select2 || onSelect);
    var pinnedProperties = columns.map(function(pinnedColumn) {
      return pinnedColumn.pin && pinnedColumn.property;
    }).filter(function(n2) {
      return n2;
    });
    if (hasSelectColumn && pinnedProperties.length > 0) {
      pinnedProperties = ["_grommetDataTableSelect"].concat(pinnedProperties);
    }
    var nextPinnedOffset = {};
    if (columnWidths !== []) {
      pinnedProperties.forEach(function(property, index) {
        var columnIndex = property === "_grommetDataTableSelect" ? 0 : columns.findIndex(function(column) {
          return column.property === property;
        }) + hasSelectColumn;
        if (columnWidths[columnIndex]) {
          nextPinnedOffset[property] = {
            width: columnWidths[columnIndex],
            left: index === 0 ? 0 : nextPinnedOffset[pinnedProperties[index - 1]].left + nextPinnedOffset[pinnedProperties[index - 1]].width
          };
        }
      });
      setPinnedOffset(nextPinnedOffset);
    }
  }, [columns, setPinnedOffset, select2, onSelect]);
  useLayoutEffect(function() {
    var _bodyRef$current$pare;
    var nextScrollOffset = (((_bodyRef$current$pare = bodyRef.current.parentElement) == null ? void 0 : _bodyRef$current$pare.clientWidth) || 0) - bodyRef.current.clientWidth;
    if (nextScrollOffset !== scrollOffset)
      setScrollOffset(nextScrollOffset);
  });
  useLayoutEffect(function() {
    if (placeholder) {
      if (headerRef.current) {
        var nextHeaderHeight = headerRef.current.getBoundingClientRect().height;
        setHeaderHeight(nextHeaderHeight);
      } else
        setHeaderHeight(0);
      if (footerRef.current) {
        var nextFooterHeight = footerRef.current.getBoundingClientRect().height;
        setFooterHeight(nextFooterHeight);
      } else
        setFooterHeight(0);
    }
  }, [footerRef, headerRef, placeholder]);
  var onFiltering = function onFiltering2(property) {
    return setFiltering(property);
  };
  var onFilter = function onFilter2(property, value) {
    var nextFilters = _extends68({}, filters);
    nextFilters[property] = value;
    setFilters(nextFilters);
    if (onSearch)
      onSearch(nextFilters);
  };
  var onSort = function onSort2(property) {
    return function() {
      var external = sort ? sort.external : false;
      var direction;
      if (!sort || property !== sort.property)
        direction = "asc";
      else if (sort.direction === "asc")
        direction = "desc";
      else
        direction = "asc";
      var nextSort = {
        property,
        direction,
        external
      };
      setSort(nextSort);
      if (onUpdate) {
        var opts = {
          count: limit,
          sort: nextSort
        };
        if (groups) {
          opts.expanded = Object.keys(groupState).filter(function(k2) {
            return groupState[k2].expanded;
          });
        }
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
      }
      if (onSortProp)
        onSortProp(nextSort);
    };
  };
  var onToggleGroup = function onToggleGroup2(groupValue) {
    return function() {
      var nextGroupState = _extends68({}, groupState);
      nextGroupState[groupValue] = _extends68({}, nextGroupState[groupValue], {
        expanded: !nextGroupState[groupValue].expanded
      });
      setGroupState(nextGroupState);
      var expandedKeys = Object.keys(nextGroupState).filter(function(k2) {
        return nextGroupState[k2].expanded;
      });
      if (onUpdate) {
        var opts = {
          expanded: expandedKeys,
          count: limit
        };
        if (sort != null && sort.property)
          opts.sort = sort;
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
      }
      if (groupBy.onExpand) {
        groupBy.onExpand(expandedKeys);
      }
    };
  };
  var onToggleGroups = function onToggleGroups2() {
    var expanded = Object.keys(groupState).filter(function(k2) {
      return !groupState[k2].expanded;
    }).length === 0;
    var nextGroupState = {};
    Object.keys(groupState).forEach(function(k2) {
      nextGroupState[k2] = _extends68({}, groupState[k2], {
        expanded: !expanded
      });
    });
    setGroupState(nextGroupState);
    var expandedKeys = Object.keys(nextGroupState).filter(function(k2) {
      return nextGroupState[k2].expanded;
    });
    if (onUpdate) {
      var opts = {
        expanded: expandedKeys,
        count: limit
      };
      if (showProp)
        opts.show = showProp;
      if (sort != null && sort.property)
        opts.sort = sort;
      onUpdate(opts);
    }
    if (groupBy.onExpand) {
      groupBy.onExpand(expandedKeys);
    }
  };
  var onResize = (0, import_react73.useCallback)(function(property, width) {
    if (widths[property] !== width) {
      var nextWidths = _extends68({}, widths);
      nextWidths[property] = width;
      setWidths(nextWidths);
    }
  }, [widths]);
  if (size && resizeable) {
    console.warn('DataTable cannot combine "size" and "resizeble".');
  }
  if (onUpdate && onMore) {
    console.warn('DataTable cannot combine "onUpdate" and "onMore".');
  }
  var _usePagination = usePagination(_extends68({
    data: adjustedData,
    page: normalizeShow(showProp, step),
    step
  }, paginate)), items = _usePagination[0], paginationProps = _usePagination[1];
  var Container2 = paginate ? StyledContainer : import_react73.Fragment;
  var containterProps = paginate ? _extends68({}, theme.dataTable.container, {
    fill
  }) : void 0;
  var OverflowContainer = paginate ? Box : import_react73.Fragment;
  var overflowContainerProps = paginate ? {
    overflow: {
      horizontal: "auto"
    },
    flex: false
  } : void 0;
  var paginatedDataTableProps = paginate && (fill === true || fill === "horizontal") ? {
    style: {
      minWidth: "100%"
    }
  } : void 0;
  return import_react73.default.createElement(Container2, containterProps, import_react73.default.createElement(OverflowContainer, overflowContainerProps, import_react73.default.createElement(StyledDataTable, _extends68({
    fillProp: !paginate ? fill : void 0
  }, paginatedDataTableProps, rest), import_react73.default.createElement(Header2, {
    ref: headerRef,
    cellProps: cellProps.header,
    columns,
    data: adjustedData,
    fill,
    filtering,
    filters,
    groupBy,
    groups,
    groupState,
    pin: pin === true || pin === "header",
    pinnedOffset,
    selected,
    size,
    sort,
    widths,
    onFiltering,
    onFilter,
    onResize: resizeable ? onResize : void 0,
    onSelect: onSelect ? function(nextSelected) {
      setSelected(nextSelected);
      if (onSelect)
        onSelect(nextSelected);
    } : void 0,
    onSort: sortable || sortProp || onSortProp ? onSort : void 0,
    onToggle: onToggleGroups,
    onWidths: onHeaderWidths,
    primaryProperty,
    scrollOffset,
    rowDetails
  }), groups ? import_react73.default.createElement(GroupedBody, {
    ref: bodyRef,
    cellProps: cellProps.body,
    columns,
    groupBy: typeof groupBy === "string" ? {
      property: groupBy
    } : groupBy,
    groups,
    groupState,
    pinnedOffset,
    primaryProperty,
    onMore: onUpdate ? function() {
      if (adjustedData.length === limit) {
        var opts = {
          expanded: Object.keys(groupState).filter(function(k2) {
            return groupState[k2].expanded;
          }),
          count: limit + step
        };
        if (sort != null && sort.property)
          opts.sort = sort;
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
        setLimit(function(prev) {
          return prev + step;
        });
      }
    } : onMore,
    onSelect: onSelect ? function(nextSelected, row) {
      setSelected(nextSelected);
      if (onSelect)
        onSelect(nextSelected, row);
    } : void 0,
    onToggle: onToggleGroup,
    onUpdate,
    replace,
    rowProps,
    selected,
    size,
    step
  }) : import_react73.default.createElement(Body, {
    ref: bodyRef,
    cellProps: cellProps.body,
    columns,
    data: !paginate ? adjustedData : items,
    onMore: onUpdate ? function() {
      if (adjustedData.length === limit) {
        var opts = {
          count: limit + step
        };
        if (sort != null && sort.property)
          opts.sort = sort;
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
        setLimit(function(prev) {
          return prev + step;
        });
      }
    } : onMore,
    replace,
    onClickRow,
    onSelect: onSelect ? function(nextSelected, row) {
      setSelected(nextSelected);
      if (onSelect)
        onSelect(nextSelected, row);
    } : void 0,
    pinnedCellProps: cellProps.pinned,
    pinnedOffset,
    placeholder,
    primaryProperty,
    rowProps,
    selected,
    show: !paginate ? showProp : void 0,
    size,
    step,
    rowDetails,
    rowExpand,
    setRowExpand
  }), showFooter && import_react73.default.createElement(Footer3, {
    ref: footerRef,
    cellProps: cellProps.footer,
    columns,
    fill,
    footerValues,
    groups,
    onSelect,
    pin: pin === true || pin === "footer",
    pinnedOffset,
    primaryProperty,
    scrollOffset,
    selected,
    size
  }), placeholder && import_react73.default.createElement(StyledPlaceholder2, {
    top: headerHeight,
    bottom: footerHeight
  }, typeof placeholder === "string" ? import_react73.default.createElement(Box, {
    background: {
      color: "background-front",
      opacity: "strong"
    },
    align: "center",
    justify: "center",
    fill: "vertical"
  }, import_react73.default.createElement(Text, null, placeholder)) : placeholder))), paginate && adjustedData.length > step && items && items.length ? import_react73.default.createElement(Pagination, _extends68({
    alignSelf: "end"
  }, paginationProps)) : null);
};
DataTable.propTypes = DataTablePropTypes;

// node_modules/grommet/es6/components/DateInput/DateInput.js
var import_react77 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Calendar2 = __toESM(require_Calendar());

// node_modules/grommet/es6/components/DropButton/DropButton.js
var import_react74 = __toESM(require_react());

// node_modules/grommet/es6/components/DropButton/propTypes.js
var import_prop_types33 = __toESM(require_prop_types());
function _extends69() {
  _extends69 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends69.apply(this, arguments);
}
var PropType30 = {};
if (true) {
  PropType30 = _extends69({}, genericProps, {
    disabled: import_prop_types33.default.bool,
    dropAlign: import_prop_types33.default.shape({
      top: import_prop_types33.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types33.default.oneOf(["top", "bottom"]),
      right: import_prop_types33.default.oneOf(["left", "right"]),
      left: import_prop_types33.default.oneOf(["left", "right"])
    }),
    dropContent: import_prop_types33.default.element.isRequired,
    dropTarget: import_prop_types33.default.object,
    dropProps: import_prop_types33.default.object,
    onClose: import_prop_types33.default.func,
    onOpen: import_prop_types33.default.func,
    open: import_prop_types33.default.bool
  });
}
var DropButtonPropTypes = PropType30;

// node_modules/grommet/es6/components/DropButton/DropButton.js
var _excluded41 = ["a11yTitle", "onAlign", "disabled", "dropAlign", "dropProps", "dropContent", "dropTarget", "id", "open", "onClick", "onClose", "onOpen"];
function _extends70() {
  _extends70 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends70.apply(this, arguments);
}
function _objectWithoutPropertiesLoose36(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultDropAlign2 = {
  top: "top",
  left: "left"
};
var DropButton = (0, import_react74.forwardRef)(function(_ref, ref) {
  var _ref$a11yTitle = _ref.a11yTitle, a11yTitle = _ref$a11yTitle === void 0 ? "Open Drop" : _ref$a11yTitle, onAlign = _ref.onAlign, disabled = _ref.disabled, _ref$dropAlign = _ref.dropAlign, dropAlign2 = _ref$dropAlign === void 0 ? defaultDropAlign2 : _ref$dropAlign, dropProps = _ref.dropProps, dropContent = _ref.dropContent, dropTarget = _ref.dropTarget, id = _ref.id, open = _ref.open, onClick = _ref.onClick, onClose = _ref.onClose, onOpen = _ref.onOpen, rest = _objectWithoutPropertiesLoose36(_ref, _excluded41);
  var buttonRef = useForwardedRef(ref);
  var _useState = (0, import_react74.useState)(), show = _useState[0], setShow = _useState[1];
  (0, import_react74.useEffect)(function() {
    if (open !== void 0 && open !== show) {
      setShow(open);
    }
  }, [open, show]);
  var onDropClose = (0, import_react74.useCallback)(function(event) {
    var node = event.target;
    while (node !== document && node !== buttonRef.current) {
      node = node.parentNode;
    }
    if (node !== buttonRef.current) {
      if (open === void 0)
        setShow(false);
      if (onClose)
        onClose(event);
    }
  }, [buttonRef, onClose, open]);
  var onClickInternal = (0, import_react74.useCallback)(function(event) {
    if (!show) {
      setShow(true);
      if (onOpen)
        onOpen(event);
    } else {
      setShow(false);
      if (onClose)
        onClose(event);
    }
    if (onClick)
      onClick(event);
  }, [onClick, onClose, onOpen, show]);
  return import_react74.default.createElement(import_react74.default.Fragment, null, import_react74.default.createElement(Button, _extends70({
    id,
    ref: buttonRef,
    a11yTitle,
    disabled
  }, rest, {
    onClick: onClickInternal
  })), show && buttonRef.current && import_react74.default.createElement(Drop, _extends70({
    id: id ? id + "__drop" : void 0,
    onAlign,
    restrictFocus: true,
    align: dropAlign2,
    target: dropTarget || buttonRef.current,
    onClickOutside: onDropClose,
    onEsc: onDropClose
  }, dropProps), dropContent));
});
DropButton.displayName = "DropButton";
DropButton.propTypes = DropButtonPropTypes;

// node_modules/grommet/es6/components/Form/Form.js
var import_react75 = __toESM(require_react());

// node_modules/grommet/es6/components/Form/propTypes.js
var import_prop_types34 = __toESM(require_prop_types());
var PropType31 = {};
if (true) {
  PropType31 = {
    errors: import_prop_types34.default.shape({}),
    infos: import_prop_types34.default.shape({}),
    messages: import_prop_types34.default.shape({
      invalid: import_prop_types34.default.string,
      required: import_prop_types34.default.string
    }),
    onChange: import_prop_types34.default.func,
    onSubmit: import_prop_types34.default.func,
    onReset: import_prop_types34.default.func,
    onValidate: import_prop_types34.default.func,
    validate: import_prop_types34.default.oneOf(["blur", "submit", "change"]),
    value: import_prop_types34.default.shape({})
  };
}
var FormPropTypes = PropType31;

// node_modules/grommet/es6/components/Form/Form.js
var _excluded42 = ["children", "errors", "infos", "messages", "onChange", "onReset", "onSubmit", "onValidate", "validate", "value"];
function _objectWithoutPropertiesLoose37(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends71() {
  _extends71 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends71.apply(this, arguments);
}
var defaultValue2 = {};
var defaultTouched = {};
var defaultValidationResults = {
  errors: {},
  infos: {}
};
var stringToArray = function stringToArray2(string) {
  var match = string == null ? void 0 : string.match(/^(.+)\[([0-9]+)\]\.(.*)$/);
  if (match) {
    var arrayName = match[1], indexOfArray = match[2], arrayObjName = match[3];
    return {
      indexOfArray,
      arrayName,
      arrayObjName
    };
  }
  return void 0;
};
var getFieldValue = function getFieldValue2(name, value) {
  var isArrayField = stringToArray(name);
  if (isArrayField) {
    var _value$arrayName;
    var indexOfArray = isArrayField.indexOfArray, arrayName = isArrayField.arrayName, arrayObjName = isArrayField.arrayObjName;
    var obj = (_value$arrayName = value[arrayName]) == null ? void 0 : _value$arrayName[indexOfArray];
    return arrayObjName ? obj == null ? void 0 : obj[arrayObjName] : obj;
  }
  return value[name];
};
var setFieldValue = function setFieldValue2(name, componentValue, prevValue) {
  var nextValue = _extends71({}, prevValue);
  var isArrayField = stringToArray(name);
  if (isArrayField) {
    var indexOfArray = isArrayField.indexOfArray, arrayName = isArrayField.arrayName, arrayObjName = isArrayField.arrayObjName;
    if (!nextValue[arrayName])
      nextValue[arrayName] = [];
    if (arrayObjName) {
      var _nextValue$arrayName$;
      if (!nextValue[arrayName][indexOfArray])
        nextValue[arrayName][indexOfArray] = (_nextValue$arrayName$ = {}, _nextValue$arrayName$[arrayObjName] = componentValue, _nextValue$arrayName$);
      nextValue[arrayName][indexOfArray][arrayObjName] = componentValue;
    } else
      nextValue[arrayName][indexOfArray] = componentValue;
  } else {
    nextValue[name] = componentValue;
  }
  return nextValue;
};
var validate = function validate2(rule, fieldValue, formValue, format3, messages) {
  var result;
  if (typeof rule === "function") {
    result = rule(fieldValue, formValue);
  } else if (rule.regexp) {
    if (!rule.regexp.test(fieldValue)) {
      result = rule.message || format3({
        id: "form.invalid",
        messages
      });
      if (rule.status) {
        result = {
          message: result,
          status: rule.status
        };
      }
    }
  }
  return result;
};
var validateName = function validateName2(validationRules, required) {
  return function(name, formValue, format3, messages) {
    var fieldValue = getFieldValue(name, formValue);
    var validationResult;
    if (required && (fieldValue === void 0 || fieldValue === "" || fieldValue === false || Array.isArray(fieldValue) && !fieldValue.length)) {
      validationResult = format3({
        id: "form.required",
        messages
      });
    } else if (validationRules) {
      if (Array.isArray(validationRules)) {
        validationRules.some(function(rule) {
          validationResult = validate(rule, fieldValue, formValue, format3, messages);
          return !!validationResult;
        });
      } else {
        validationResult = validate(validationRules, fieldValue, formValue, format3, messages);
      }
    }
    return validationResult;
  };
};
var validateForm = function validateForm2(validationRules, formValue, format3, messages, omitValid) {
  var nextErrors = {};
  var nextInfos = {};
  validationRules.forEach(function(_ref) {
    var name = _ref[0], _ref$ = _ref[1], field = _ref$.field, input = _ref$.input;
    if (!omitValid) {
      nextErrors[name] = void 0;
      nextInfos[name] = void 0;
    }
    var result;
    if (input) {
      result = input(name, formValue, format3, messages);
    }
    if (field && !result) {
      result = field(name, formValue, format3, messages);
    }
    if (typeof result === "object") {
      if (result.status === "info") {
        nextInfos[name] = result.message;
      } else {
        nextErrors[name] = result.message || result;
      }
    } else if (typeof result === "string") {
      nextErrors[name] = result;
    }
  });
  return [nextErrors, nextInfos];
};
var Form = (0, import_react75.forwardRef)(function(_ref2, ref) {
  var children2 = _ref2.children, _ref2$errors = _ref2.errors, errorsProp = _ref2$errors === void 0 ? defaultValidationResults.errors : _ref2$errors, _ref2$infos = _ref2.infos, infosProp = _ref2$infos === void 0 ? defaultValidationResults.infos : _ref2$infos, messages = _ref2.messages, onChange = _ref2.onChange, _onReset = _ref2.onReset, _onSubmit = _ref2.onSubmit, onValidate = _ref2.onValidate, _ref2$validate = _ref2.validate, validateOn = _ref2$validate === void 0 ? "submit" : _ref2$validate, valueProp = _ref2.value, rest = _objectWithoutPropertiesLoose37(_ref2, _excluded42);
  var _useContext = (0, import_react75.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react75.useState)(valueProp || defaultValue2), valueState = _useState[0], setValueState = _useState[1];
  var value = (0, import_react75.useMemo)(function() {
    return valueProp || valueState;
  }, [valueProp, valueState]);
  var _useState2 = (0, import_react75.useState)(defaultTouched), touched = _useState2[0], setTouched = _useState2[1];
  var _useState3 = (0, import_react75.useState)({
    errors: errorsProp,
    infos: infosProp
  }), validationResults = _useState3[0], setValidationResults = _useState3[1];
  var validationResultsRef = (0, import_react75.useRef)({});
  var _useState4 = (0, import_react75.useState)("unmounted"), mounted = _useState4[0], setMounted = _useState4[1];
  (0, import_react75.useEffect)(function() {
    if (!mounted)
      setMounted("mounting");
    else if (mounted === "mounting")
      setMounted("mounted");
  }, [mounted]);
  var _useState5 = (0, import_react75.useState)(void 0), pendingValidation = _useState5[0], setPendingValidation = _useState5[1];
  var validationRulesRef = (0, import_react75.useRef)({});
  var requiredFields = (0, import_react75.useRef)([]);
  var buildValid = (0, import_react75.useCallback)(function(nextErrors) {
    var valid = false;
    valid = requiredFields.current.filter(function(n2) {
      return Object.keys(validationRulesRef.current).includes(n2);
    }).every(function(field) {
      return value[field] && (value[field] !== "" || value[field] !== false);
    });
    if (Object.keys(nextErrors).length > 0)
      valid = false;
    return valid;
  }, [value]);
  var filterRemovedFields = function filterRemovedFields2(prevValidations) {
    var nextValidations = prevValidations;
    return Object.keys(nextValidations).filter(function(n2) {
      return !validationRulesRef.current[n2] || nextValidations[n2] === void 0;
    }).forEach(function(n2) {
      return delete nextValidations[n2];
    });
  };
  var applyValidationRules = (0, import_react75.useCallback)(function(validationRules) {
    var _validateForm = validateForm(validationRules, value, format3, messages), validatedErrors = _validateForm[0], validatedInfos = _validateForm[1];
    setValidationResults(function(prevValidationResults) {
      var nextErrors = _extends71({}, prevValidationResults.errors, validatedErrors);
      var nextInfos = _extends71({}, prevValidationResults.infos, validatedInfos);
      filterRemovedFields(nextErrors);
      filterRemovedFields(nextInfos);
      var nextValidationResults = {
        errors: nextErrors,
        infos: nextInfos
      };
      if (onValidate)
        onValidate(_extends71({}, nextValidationResults, {
          valid: buildValid(nextErrors)
        }));
      validationResultsRef.current = nextValidationResults;
      return nextValidationResults;
    });
  }, [buildValid, format3, messages, onValidate, value]);
  (0, import_react75.useEffect)(function() {
    var validationRules = Object.entries(validationRulesRef.current);
    if (mounted !== "mounted" && ["blur", "change"].includes(validateOn) && Object.keys(value).length > 0 && Object.keys(touched).length === 0) {
      applyValidationRules(validationRules.filter(function(_ref3) {
        var n2 = _ref3[0];
        return value[n2];
      }).filter(function(_ref4) {
        var n2 = _ref4[0];
        return !(Array.isArray(value[n2]) && value[n2].length === 0);
      }));
    }
  }, [applyValidationRules, mounted, touched, validateOn, value]);
  (0, import_react75.useEffect)(function() {
    var validationRules = Object.entries(validationRulesRef.current);
    var timer = setTimeout(function() {
      if (pendingValidation && ["blur", "change"].includes(validateOn)) {
        applyValidationRules(validationRules.filter(function(_ref5) {
          var n2 = _ref5[0];
          return touched[n2] || pendingValidation.includes(n2);
        }));
        setPendingValidation(void 0);
      }
    }, 120);
    return function() {
      return clearTimeout(timer);
    };
  }, [applyValidationRules, pendingValidation, touched, validateOn]);
  (0, import_react75.useEffect)(function() {
    var _validationResultsRef;
    var validationRules = Object.entries(validationRulesRef.current);
    if ((_validationResultsRef = validationResultsRef.current) != null && _validationResultsRef.errors && Object.keys(validationResultsRef.current.errors).length > 0) {
      applyValidationRules(validationRules.filter(function(_ref6) {
        var n2 = _ref6[0];
        return touched[n2] && validationResultsRef.current.errors[n2];
      }));
    }
  }, [applyValidationRules, touched]);
  var formContextValue = (0, import_react75.useMemo)(function() {
    var useFormInput3 = function useFormInput4(_ref7) {
      var name = _ref7.name, componentValue = _ref7.value, initialValue = _ref7.initialValue, validateArg = _ref7.validate;
      var _useState6 = (0, import_react75.useState)(initialValue), inputValue = _useState6[0], setInputValue = _useState6[1];
      var formValue = name ? getFieldValue(name, value) : void 0;
      var keyCreated = (0, import_react75.useRef)(false);
      (0, import_react75.useEffect)(function() {
        if (name && componentValue !== void 0 && componentValue !== formValue) {
          setValueState(function(prevValue) {
            return setFieldValue(name, componentValue, prevValue);
          });
        }
      }, [componentValue, formValue, name]);
      (0, import_react75.useEffect)(function() {
        return function() {
          if (keyCreated.current) {
            keyCreated.current = false;
            setValueState(function(prevValue) {
              var nextValue = _extends71({}, prevValue);
              var isArrayField = stringToArray(name);
              if (isArrayField) {
                var arrayName = isArrayField.arrayName;
                delete nextValue[arrayName];
              } else {
                delete nextValue[name];
              }
              return nextValue;
            });
          }
        };
      }, []);
      (0, import_react75.useEffect)(function() {
        if (validateArg) {
          if (!validationRulesRef.current[name]) {
            validationRulesRef.current[name] = {};
          }
          validationRulesRef.current[name].input = validateName(validateArg);
          return function() {
            return delete validationRulesRef.current[name].input;
          };
        }
        return void 0;
      }, [validateArg, name]);
      var useValue;
      if (componentValue !== void 0)
        useValue = componentValue;
      else if (valueProp && name && formValue !== void 0)
        useValue = formValue;
      else if (formValue === void 0 && name)
        useValue = initialValue;
      else
        useValue = inputValue;
      return [useValue, function(nextComponentValue) {
        if (name) {
          var nextTouched = _extends71({}, touched);
          nextTouched[name] = true;
          if (!touched[name]) {
            setTouched(nextTouched);
          }
          if (!(name in value))
            keyCreated.current = true;
          var nextValue = setFieldValue(name, nextComponentValue, value);
          setValueState(nextValue);
          if (onChange)
            onChange(nextValue, {
              touched: nextTouched
            });
        }
        if (initialValue !== void 0)
          setInputValue(nextComponentValue);
      }];
    };
    var useFormField3 = function useFormField4(_ref8) {
      var errorArg = _ref8.error, infoArg = _ref8.info, name = _ref8.name, required = _ref8.required, disabled = _ref8.disabled, validateArg = _ref8.validate;
      var error = disabled ? void 0 : errorArg || validationResults.errors[name];
      var info = infoArg || validationResults.infos[name];
      (0, import_react75.useEffect)(function() {
        var index = requiredFields.current.indexOf(name);
        if (required) {
          if (index === -1)
            requiredFields.current.push(name);
        } else if (index !== -1)
          requiredFields.current.splice(index, 1);
        if (validateArg || required) {
          if (!validationRulesRef.current[name]) {
            validationRulesRef.current[name] = {};
          }
          validationRulesRef.current[name].field = validateName(validateArg, required);
          return function() {
            return delete validationRulesRef.current[name].field;
          };
        }
        return void 0;
      }, [error, name, required, validateArg, disabled]);
      return {
        error,
        info,
        inForm: true,
        onBlur: validateOn === "blur" ? function() {
          return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);
        } : void 0,
        onChange: validateOn === "change" ? function() {
          return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);
        } : void 0
      };
    };
    return {
      useFormField: useFormField3,
      useFormInput: useFormInput3
    };
  }, [onChange, pendingValidation, touched, validateOn, validationResults.errors, validationResults.infos, value, valueProp]);
  return import_react75.default.createElement("form", _extends71({
    ref
  }, rest, {
    onReset: function onReset(event) {
      setPendingValidation(void 0);
      if (!valueProp) {
        setValueState(defaultValue2);
        if (onChange)
          onChange(defaultValue2, {
            touched: defaultTouched
          });
      }
      setTouched(defaultTouched);
      setValidationResults(defaultValidationResults);
      if (_onReset) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.value = defaultValue2;
        _onReset(adjustedEvent);
      }
    },
    onSubmit: function onSubmit(event) {
      event.preventDefault();
      setPendingValidation(void 0);
      var _validateForm2 = validateForm(Object.entries(validationRulesRef.current), value, format3, messages, true), nextErrors = _validateForm2[0], nextInfos = _validateForm2[1];
      setValidationResults(function() {
        var nextValidationResults = {
          errors: nextErrors,
          infos: nextInfos,
          valid: buildValid(nextErrors)
        };
        if (onValidate)
          onValidate(nextValidationResults);
        validationResultsRef.current = nextValidationResults;
        return nextValidationResults;
      });
      if (Object.keys(nextErrors).length === 0 && _onSubmit) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.value = value;
        adjustedEvent.touched = touched;
        _onSubmit(adjustedEvent);
      }
    }
  }), import_react75.default.createElement(FormContext.Provider, {
    value: formContextValue
  }, children2));
});
Form.displayName = "Form";
Form.propTypes = FormPropTypes;

// node_modules/grommet/es6/components/MaskedInput/MaskedInput.js
var import_react76 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/MaskedInput/StyledMaskedInput.js
init_styled_components_browser_esm();
var StyledMaskedInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledMaskedInput",
  componentId: "sc-99vkfa-0"
})(["", " ", " ", " ", " ", " ", ";"], inputStyle, function(props) {
  return props.plain && plainInputStyle;
}, function(props) {
  return props.icon && (props.reverse ? "padding-right: " + props.theme.global.edgeSize.large + ";" : "padding-left: " + props.theme.global.edgeSize.large + ";");
}, function(props) {
  return props.disabled && disabledStyle(props.theme.maskedInput.disabled && props.theme.maskedInput.disabled.opacity);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.theme.maskedInput && props.theme.maskedInput.extend;
});
var StyledMaskedInputContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledMaskedInput__StyledMaskedInputContainer",
  componentId: "sc-99vkfa-1"
})(["position:relative;width:100%;", ";"], function(props) {
  return props.theme.maskedInput && props.theme.maskedInput.container && props.theme.maskedInput.container.extend;
});
var StyledIcon2 = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledMaskedInput__StyledIcon",
  componentId: "sc-99vkfa-2"
})(["position:absolute;display:flex;justify:center;top:50%;transform:translateY(-50%);pointer-events:none;", ""], function(props) {
  return props.reverse ? "right: " + getInputPadBySide(props, "right") + ";" : "left: " + getInputPadBySide(props, "left") + ";";
});

// node_modules/grommet/es6/components/MaskedInput/propTypes.js
var import_prop_types35 = __toESM(require_prop_types());
var PropType32 = {};
if (true) {
  PropType32 = {
    a11yTitle: import_prop_types35.default.string,
    dropHeight: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types35.default.string]),
    dropProps: import_prop_types35.default.object,
    icon: import_prop_types35.default.element,
    id: import_prop_types35.default.string,
    name: import_prop_types35.default.string,
    onChange: import_prop_types35.default.func,
    focusIndicator: import_prop_types35.default.bool,
    onBlur: import_prop_types35.default.func,
    mask: import_prop_types35.default.arrayOf(import_prop_types35.default.shape({
      length: import_prop_types35.default.oneOfType([import_prop_types35.default.number, import_prop_types35.default.arrayOf(import_prop_types35.default.number)]),
      fixed: import_prop_types35.default.string,
      options: import_prop_types35.default.arrayOf(import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.number])),
      regexp: import_prop_types35.default.shape({})
    })),
    reverse: import_prop_types35.default.bool,
    size: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types35.default.string]),
    textAlign: import_prop_types35.default.oneOf(["start", "center", "end"]),
    value: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.number])
  };
}
var MaskedInputPropTypes = PropType32;

// node_modules/grommet/es6/components/MaskedInput/MaskedInput.js
var _excluded43 = ["a11yTitle", "dropHeight", "dropProps", "focus", "focusIndicator", "icon", "id", "mask", "name", "onBlur", "onChange", "onFocus", "onKeyDown", "placeholder", "plain", "reverse", "textAlign", "value"];
function _extends72() {
  _extends72 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends72.apply(this, arguments);
}
function _objectWithoutPropertiesLoose38(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var parseValue = function parseValue2(mask, value) {
  var valueParts = [];
  var valueIndex = 0;
  var maskIndex = 0;
  while (value !== void 0 && valueIndex < value.length && maskIndex < mask.length) {
    var item = mask[maskIndex];
    var found = void 0;
    if (item.fixed) {
      var length = item.fixed.length;
      var matching = 0;
      while (matching < length && value[valueIndex + matching] === item.fixed[matching]) {
        matching += 1;
      }
      if (matching > 0) {
        var part = value.slice(valueIndex, valueIndex + matching);
        if (valueIndex + matching < value.length) {
          part = item.fixed;
        }
        valueParts.push({
          part,
          beginIndex: valueIndex,
          endIndex: valueIndex + matching - 1
        });
        valueIndex += matching;
      } else {
        valueParts.push({
          part: item.fixed,
          beginIndex: valueIndex,
          endIndex: valueIndex + length - 1
        });
      }
      maskIndex += 1;
      found = true;
    } else if (item.options) {
      found = item.options.slice(0).reverse().some(function(option) {
        var length2 = option.length;
        var part2 = value.slice(valueIndex, valueIndex + length2);
        if (part2 === option) {
          valueParts.push({
            part: part2,
            beginIndex: valueIndex,
            endIndex: valueIndex + length2 - 1
          });
          valueIndex += length2;
          maskIndex += 1;
          return true;
        }
        return false;
      });
    }
    if (!found) {
      if (item.regexp) {
        var minLength = Array.isArray(item.length) && item.length[0] || item.length || 1;
        var maxLength = Array.isArray(item.length) && item.length[1] || item.length || value.length - valueIndex;
        var _length = maxLength;
        while (!found && _length >= minLength) {
          var _part = value.slice(valueIndex, valueIndex + _length);
          if (item.regexp.test(_part)) {
            valueParts.push({
              part: _part,
              beginIndex: valueIndex,
              endIndex: valueIndex + _length - 1
            });
            valueIndex += _length;
            maskIndex += 1;
            found = true;
          }
          _length -= 1;
        }
        if (!found) {
          valueIndex = value.length;
        }
      } else {
        var _length2 = Array.isArray(item.length) ? item.length[1] : item.length || value.length - valueIndex;
        var _part2 = value.slice(valueIndex, valueIndex + _length2);
        valueParts.push({
          part: _part2,
          beginIndex: valueIndex,
          endIndex: valueIndex + _length2 - 1
        });
        valueIndex += _length2;
        maskIndex += 1;
      }
    }
  }
  return valueParts;
};
var defaultMask = [{
  regexp: /[^]*/
}];
var ContainerBox2 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "MaskedInput__ContainerBox",
  componentId: "sc-af8hzu-0"
})(["", ";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}"], function(props) {
  return props.dropHeight ? sizeStyle("max-height", props.dropHeight, props.theme) : "max-height: inherit;";
});
var dropAlign = {
  top: "bottom",
  left: "left"
};
var MaskedInput = (0, import_react76.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, dropHeight = _ref.dropHeight, dropProps = _ref.dropProps, focusProp = _ref.focus, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, icon = _ref.icon, id = _ref.id, _ref$mask = _ref.mask, mask = _ref$mask === void 0 ? defaultMask : _ref$mask, name = _ref.name, _onBlur = _ref.onBlur, onChange = _ref.onChange, _onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, placeholder = _ref.placeholder, plain = _ref.plain, reverse = _ref.reverse, textAlign = _ref.textAlign, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose38(_ref, _excluded43);
  var theme = (0, import_react76.useContext)(Ge) || defaultProps2.theme;
  var formContext = (0, import_react76.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react76.useState)(parseValue(mask, value)), valueParts = _useState[0], setValueParts = _useState[1];
  (0, import_react76.useEffect)(function() {
    setValueParts(parseValue(mask, value));
  }, [mask, value]);
  var inputRef = useForwardedRef(ref);
  var dropRef = (0, import_react76.useRef)();
  var _useState2 = (0, import_react76.useState)(), dropPropsTarget = _useState2[0], setDropPropsTarget = _useState2[1];
  (0, import_react76.useEffect)(function() {
    var nextDropPropsTarget;
    if (dropProps && "target" in dropProps) {
      nextDropPropsTarget = dropProps.target || "pending";
      setDropPropsTarget(nextDropPropsTarget);
    }
  }, [dropProps]);
  var _useState3 = (0, import_react76.useState)(focusProp), focus = _useState3[0], setFocus = _useState3[1];
  var _useState4 = (0, import_react76.useState)(), activeMaskIndex = _useState4[0], setActiveMaskIndex = _useState4[1];
  var _useState5 = (0, import_react76.useState)(), activeOptionIndex = _useState5[0], setActiveOptionIndex = _useState5[1];
  var _useState6 = (0, import_react76.useState)(), showDrop = _useState6[0], setShowDrop = _useState6[1];
  (0, import_react76.useEffect)(function() {
    if (focus) {
      var timer = setTimeout(function() {
        var caretIndex = inputRef.current.selectionStart;
        var maskIndex;
        valueParts.some(function(part, index) {
          if (part.beginIndex <= caretIndex && part.endIndex >= caretIndex) {
            maskIndex = index;
            return true;
          }
          return false;
        });
        if (maskIndex === void 0 && valueParts.length < mask.length) {
          maskIndex = valueParts.length;
        }
        if (maskIndex && mask[maskIndex].fixed) {
          maskIndex -= 1;
        }
        if (maskIndex !== activeMaskIndex) {
          setActiveMaskIndex(maskIndex);
          setActiveOptionIndex(-1);
          setShowDrop(maskIndex >= 0 && mask[maskIndex].options && true);
        }
      }, 10);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [activeMaskIndex, focus, inputRef, mask, valueParts]);
  var setInputValue = (0, import_react76.useCallback)(function(nextValue) {
    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
    nativeInputValueSetter.call(inputRef.current, nextValue);
    var event = new Event("input", {
      bubbles: true
    });
    inputRef.current.dispatchEvent(event);
  }, [inputRef]);
  var onChangeInput = (0, import_react76.useCallback)(function(event) {
    var nextValueParts = parseValue(mask, event.target.value);
    var nextValue = nextValueParts.map(function(part) {
      return part.part;
    }).join("");
    if (nextValue !== event.target.value) {
      setInputValue(nextValue);
    } else if (value !== nextValue) {
      setValue(nextValue);
      if (onChange)
        onChange(event);
    }
  }, [mask, onChange, setInputValue, setValue, value]);
  var onOption = (0, import_react76.useCallback)(function(option) {
    return function() {
      var nextValueParts = [].concat(valueParts);
      nextValueParts[activeMaskIndex] = {
        part: option
      };
      var index = activeMaskIndex + 1;
      while (index < mask.length && !nextValueParts[index] && mask[index].fixed) {
        nextValueParts[index] = {
          part: mask[index].fixed
        };
        index += 1;
      }
      var nextValue = nextValueParts.map(function(part) {
        return part.part;
      }).join("");
      setInputValue(nextValue);
      inputRef.current.focus();
    };
  }, [activeMaskIndex, inputRef, mask, setInputValue, valueParts]);
  var onNextOption = (0, import_react76.useCallback)(function(event) {
    var item = mask[activeMaskIndex];
    if (item && item.options) {
      event.preventDefault();
      var index = Math.min(activeOptionIndex + 1, item.options.length - 1);
      setActiveOptionIndex(index);
    }
  }, [activeMaskIndex, activeOptionIndex, mask]);
  var onPreviousOption = (0, import_react76.useCallback)(function(event) {
    if (activeMaskIndex >= 0 && mask[activeMaskIndex].options) {
      event.preventDefault();
      var index = Math.max(activeOptionIndex - 1, 0);
      setActiveOptionIndex(index);
    }
  }, [activeMaskIndex, activeOptionIndex, mask]);
  var onSelectOption = (0, import_react76.useCallback)(function(event) {
    if (activeMaskIndex >= 0 && activeOptionIndex >= 0) {
      event.preventDefault();
      var option = mask[activeMaskIndex].options[activeOptionIndex];
      onOption(option)();
    }
  }, [activeMaskIndex, activeOptionIndex, mask, onOption]);
  var onEsc = (0, import_react76.useCallback)(function(event) {
    if (showDrop) {
      event.stopPropagation();
      event.nativeEvent.stopImmediatePropagation();
      setShowDrop(false);
    }
  }, [showDrop]);
  var onHideDrop = (0, import_react76.useCallback)(function() {
    return setShowDrop(false);
  }, []);
  var renderPlaceholder = function renderPlaceholder2() {
    return mask.map(function(item) {
      return item.placeholder || item.fixed;
    }).join("");
  };
  return import_react76.default.createElement(StyledMaskedInputContainer, {
    plain
  }, icon && import_react76.default.createElement(StyledIcon2, {
    reverse,
    theme
  }, icon), import_react76.default.createElement(Keyboard, {
    onEsc,
    onTab: showDrop ? function() {
      return setShowDrop(false);
    } : void 0,
    onLeft: void 0,
    onRight: void 0,
    onUp: onPreviousOption,
    onDown: showDrop ? onNextOption : function() {
      return setShowDrop(true);
    },
    onEnter: onSelectOption,
    onKeyDown
  }, import_react76.default.createElement(StyledMaskedInput, _extends72({
    ref: inputRef,
    "aria-label": a11yTitle,
    id,
    name,
    autoComplete: "off",
    focusIndicator,
    plain,
    placeholder: placeholder || renderPlaceholder(),
    icon,
    reverse,
    focus,
    textAlign
  }, rest, {
    value,
    theme,
    onFocus: function onFocus(event) {
      setFocus(true);
      setShowDrop(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (!dropRef.current)
        setShowDrop(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: onChangeInput
  }))), showDrop && mask[activeMaskIndex] && mask[activeMaskIndex].options && dropPropsTarget !== "pending" && import_react76.default.createElement(Drop, _extends72({
    id: id ? "masked-input-drop__" + id : void 0,
    align: dropAlign,
    responsive: false,
    target: inputRef.current,
    onClickOutside: onHideDrop,
    onEsc: onHideDrop
  }, dropProps), import_react76.default.createElement(ContainerBox2, {
    ref: dropRef,
    overflow: "auto",
    dropHeight
  }, mask[activeMaskIndex].options.map(function(option, index) {
    var child = !theme.button.option ? import_react76.default.createElement(Box, {
      pad: {
        horizontal: "small",
        vertical: "xsmall"
      }
    }, option) : void 0;
    return import_react76.default.createElement(Box, {
      key: option,
      flex: false
    }, import_react76.default.createElement(Button, {
      tabIndex: "-1",
      onClick: onOption(option),
      onMouseOver: function onMouseOver() {
        return setActiveOptionIndex(index);
      },
      onFocus: function onFocus() {
      },
      active: index === activeOptionIndex,
      plain: !child ? void 0 : true,
      align: "start",
      kind: !child ? "option" : void 0,
      hoverIndicator: !child ? void 0 : "background",
      label: !child ? option : void 0
    }, child));
  }))));
});
MaskedInput.displayName = "MaskedInput";
MaskedInput.propTypes = MaskedInputPropTypes;

// node_modules/grommet/es6/components/DateInput/utils.js
function _extends73() {
  _extends73 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends73.apply(this, arguments);
}
var formatToSchema = function formatToSchema2(format3) {
  if (!format3)
    return void 0;
  var result = [];
  var i2 = 0;
  var part;
  while (i2 < format3.length) {
    if (!part || part[0] !== format3[i2]) {
      if (part)
        result.push(part);
      part = format3[i2];
    } else {
      part += format3[i2];
    }
    i2 += 1;
  }
  if (part)
    result.push(part);
  return result;
};
var masks = {
  m: {
    length: [1, 2],
    regexp: /^[1-9]$|^1[0-2]$/
  },
  mm: {
    length: [1, 2],
    regexp: /^[0-1]$|^0[1-9]$|^1[0-2]$/
  },
  d: {
    length: [1, 2],
    regexp: /^[1-9]$|^[1-2][0-9]$|^3[0-1]$/
  },
  dd: {
    length: [1, 2],
    regexp: /^[0-3]$|^0[1-9]$|^[1-2][0-9]$|^3[0-1]$/
  },
  yy: {
    length: [1, 2],
    regexp: /^[0-9]{1,2}$/
  },
  yyyy: {
    length: [1, 4],
    regexp: /^[0-9]{1,4}$/
  }
};
var schemaToMask = function schemaToMask2(schema) {
  if (!schema)
    return void 0;
  return schema.map(function(part) {
    var lower = part.toLowerCase();
    var _char = lower[0];
    if (_char === "m" || _char === "d" || _char === "y")
      return _extends73({
        placeholder: part
      }, masks[lower]);
    return {
      fixed: part
    };
  });
};
var valueToText = function valueToText2(value, schema) {
  var text = "";
  if (!value || Array.isArray(value) && !value.length)
    return text;
  var dates = (Array.isArray(value) ? value : [value]).map(function(v2) {
    return new Date(v2);
  });
  var dateIndex = 0;
  var parts2 = {};
  schema.every(function(part) {
    var _char2 = part[0].toLowerCase();
    while (dateIndex < dates.length && (Number.isNaN(dates[dateIndex].date) || (_char2 === "m" || _char2 === "d" || _char2 === "y") && parts2[part])) {
      dateIndex += 1;
      parts2 = {};
    }
    var date = dates[dateIndex];
    if (date && part === "m") {
      text += date.getMonth() + 1;
      parts2[part] = true;
    } else if (date && part === "mm") {
      text += ("0" + (date.getMonth() + 1)).slice(-2);
      parts2[part] = true;
    } else if (date && part === "d") {
      text += date.getDate();
      parts2[part] = true;
    } else if (date && part === "dd") {
      text += ("0" + date.getDate()).slice(-2);
      parts2[part] = true;
    } else if (date && part === "yy") {
      text += date.getFullYear().toString().slice(-2);
      parts2[part] = true;
    } else if (date && part === "yyyy") {
      text += date.getFullYear();
      parts2[part] = true;
    } else if (!date && (part[0] === "m" || part[0] === "d" || part[0] === "y")) {
      return false;
    } else {
      text += part;
    }
    return true;
  });
  return text;
};
var charCodeZero = "0".charCodeAt(0);
var charCodeNine = "9".charCodeAt(0);
var pullDigits = function pullDigits2(text, index) {
  var end = index;
  while (text.charCodeAt(end) >= charCodeZero && text.charCodeAt(end) <= charCodeNine) {
    end += 1;
  }
  return text.slice(index, end);
};
var textToValue = function textToValue2(text, schema, range, timestamp) {
  if (!text)
    return range ? [] : void 0;
  var result;
  var addDate = function addDate2(parts3) {
    var leapYear = parts3.y % 4 === 0 && parts3.y % 100 !== 0 || parts3.y % 400 === 0;
    if (!parts3.m || !parts3.d || !parts3.y || parts3.y.length < 4 || parts3.m.length > 2 || parts3.d.length > 2 || parts3.m > 12 || parts3.d > 31 || (parts3.m === "02" || parts3.m === "2") && parts3.d > (leapYear ? 29 : 28))
      return parts3;
    var date = new Date(parts3.y, parts3.m - 1, parts3.d).toISOString();
    if (timestamp)
      date = formatToLocalYYYYMMDD(date).split("T")[0] + "T" + timestamp;
    else
      date = "" + formatToLocalYYYYMMDD(date).split("T")[0];
    if (!range) {
      if (!result)
        result = date;
    } else {
      if (!result)
        result = [];
      result.push(date);
    }
    return {};
  };
  var parts2 = {};
  var index = 0;
  schema.forEach(function(part) {
    if (index < text.length) {
      var lower = part.toLowerCase();
      var _char3 = lower[0];
      if (parts2[_char3] !== void 0)
        parts2 = addDate(parts2);
      if (_char3 === "m") {
        parts2.m = pullDigits(text, index);
        index += parts2.m.length;
      } else if (_char3 === "d") {
        var _parts, _parts$d;
        parts2.d = pullDigits(text, index);
        if (parts2.d === "0")
          delete parts2.d;
        index += ((_parts = parts2) == null ? void 0 : (_parts$d = _parts.d) == null ? void 0 : _parts$d.length) || 0;
      } else if (_char3 === "y") {
        parts2.y = pullDigits(text, index);
        index += parts2.y.length;
        if (lower === "yy" && parts2.y.length === 2) {
          parts2.y = "" + (parts2.y < 69 ? 20 : 19) + parts2.y;
        }
      } else if (text.slice(index, index + part.length) === part) {
        index += part.length;
      } else {
        index = text.length;
        result = void 0;
      }
    }
  });
  parts2 = addDate(parts2);
  if (!result)
    return range ? [] : void 0;
  return result;
};
var valuesAreEqual = function valuesAreEqual2(value1, value2) {
  return Array.isArray(value1) && Array.isArray(value2) && value1.every(function(d1, i2) {
    return d1 === value2[i2];
  }) || value1 === value2;
};

// node_modules/grommet/es6/components/DateInput/propTypes.js
var import_prop_types36 = __toESM(require_prop_types());
var PropType33 = {};
if (true) {
  PropType33 = {
    buttonProps: import_prop_types36.default.shape({}),
    calendarProps: import_prop_types36.default.shape({}),
    defaultValue: import_prop_types36.default.oneOfType([import_prop_types36.default.string, import_prop_types36.default.arrayOf(import_prop_types36.default.string)]),
    dropProps: import_prop_types36.default.shape({}),
    format: import_prop_types36.default.string,
    icon: import_prop_types36.default.element,
    id: import_prop_types36.default.string,
    inline: import_prop_types36.default.bool,
    inputProps: import_prop_types36.default.shape({}),
    name: import_prop_types36.default.string,
    onChange: import_prop_types36.default.func,
    value: import_prop_types36.default.oneOfType([import_prop_types36.default.string, import_prop_types36.default.arrayOf(import_prop_types36.default.string)]),
    size: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types36.default.string])
  };
}
var DateInputPropTypes = PropType33;

// node_modules/grommet/es6/components/DateInput/DateInput.js
var _excluded44 = ["buttonProps", "calendarProps", "defaultValue", "disabled", "dropProps", "format", "id", "icon", "inline", "inputProps", "name", "onChange", "onFocus", "plain", "value", "messages"];
var _excluded212 = ["icon"];
function _extends74() {
  _extends74 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends74.apply(this, arguments);
}
function _objectWithoutPropertiesLoose39(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DateInput = (0, import_react77.forwardRef)(function(_ref, refArg) {
  var buttonProps = _ref.buttonProps, calendarProps = _ref.calendarProps, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, dropProps = _ref.dropProps, format3 = _ref.format, id = _ref.id, icon = _ref.icon, _ref$inline = _ref.inline, inline = _ref$inline === void 0 ? false : _ref$inline, inputProps = _ref.inputProps, name = _ref.name, _onChange = _ref.onChange, _onFocus = _ref.onFocus, plain = _ref.plain, valueArg = _ref.value, messages = _ref.messages, rest = _objectWithoutPropertiesLoose39(_ref, _excluded44);
  var theme = (0, import_react77.useContext)(Ge) || defaultProps2.theme;
  var announce = (0, import_react77.useContext)(AnnounceContext);
  var _useContext = (0, import_react77.useContext)(MessageContext), formatMessage = _useContext.format;
  var iconSize = theme.dateInput.icon && theme.dateInput.icon.size || "medium";
  var _useContext2 = (0, import_react77.useContext)(FormContext), useFormInput3 = _useContext2.useFormInput;
  var ref = useForwardedRef(refArg);
  var containerRef = (0, import_react77.useRef)();
  var _useFormInput = useFormInput3({
    name,
    value: valueArg,
    initialValue: defaultValue3
  }), value = _useFormInput[0], setValue = _useFormInput[1];
  var timestamp;
  if (Array.isArray(defaultValue3) && defaultValue3.length) {
    timestamp = getTimestamp(defaultValue3[0]);
  } else if (typeof defaultValue3 === "string") {
    timestamp = getTimestamp(defaultValue3);
  } else if (Array.isArray(value) && value.length) {
    timestamp = getTimestamp(value[0]);
  } else if (typeof value === "string" && value.length) {
    timestamp = getTimestamp(value);
  }
  var normalizedDate = normalizeForTimezone(value, timestamp);
  var range = Array.isArray(value) || format3 && format3.includes("-");
  var schema = (0, import_react77.useMemo)(function() {
    return formatToSchema(format3);
  }, [format3]);
  var mask = (0, import_react77.useMemo)(function() {
    return schemaToMask(schema);
  }, [schema]);
  var _useState = (0, import_react77.useState)(schema ? valueToText(normalizedDate, schema) : void 0), textValue = _useState[0], setTextValue = _useState[1];
  var _ref2 = inputProps || {}, MaskedInputIcon = _ref2.icon, restOfInputProps = _objectWithoutPropertiesLoose39(_ref2, _excluded212);
  if (MaskedInputIcon) {
    console.warn("Customizing the DateInput icon through inputProps is deprecated. \nUse the icon prop instead.");
  }
  (0, import_react77.useEffect)(function() {
    if (schema && value !== void 0) {
      var nextTextValue = valueToText(normalizedDate, schema);
      if (!valuesAreEqual(textToValue(textValue, schema, range, timestamp), textToValue(nextTextValue, schema, range, timestamp)) || textValue === "" && nextTextValue !== "") {
        setTextValue(nextTextValue);
      }
    }
  }, [range, schema, textValue, value, normalizedDate, timestamp]);
  var _useState2 = (0, import_react77.useState)(), open = _useState2[0], setOpen = _useState2[1];
  var openCalendar = (0, import_react77.useCallback)(function() {
    setOpen(true);
    announce(formatMessage({
      id: "dateInput.enterCalendar",
      messages
    }));
  }, [announce, formatMessage, messages]);
  var closeCalendar = (0, import_react77.useCallback)(function() {
    setOpen(false);
    announce(formatMessage({
      id: "dateInput.exitCalendar",
      messages
    }));
  }, [announce, formatMessage, messages]);
  var calendar2 = import_react77.default.createElement(Calendar, _extends74({
    ref: inline ? ref : void 0,
    id: inline && !format3 ? id : void 0,
    range,
    date: range ? void 0 : normalizedDate,
    dates: range && value.length ? [normalizedDate] : void 0,
    initialFocus: open ? "days" : void 0,
    onSelect: disabled ? void 0 : function(nextValue) {
      var normalizedValue;
      if (range && Array.isArray(nextValue)) {
        normalizedValue = nextValue[0];
      } else if (range)
        normalizedValue = [nextValue, nextValue];
      else
        normalizedValue = nextValue;
      if (schema)
        setTextValue(valueToText(normalizeForTimezone(normalizedValue), schema));
      setValue(normalizedValue);
      if (_onChange)
        _onChange({
          value: normalizedValue
        });
      if (open && !range) {
        closeCalendar();
        setTimeout(function() {
          return ref.current.focus();
        }, 1);
      }
    }
  }, _extends74({}, calendarProps, {
    timestamp
  })));
  var formContextValue = (0, import_react77.useMemo)(function() {
    return {
      useFormInput: function useFormInput4(_ref3) {
        var valueProp = _ref3.value;
        return [valueProp, function() {
        }];
      }
    };
  }, []);
  if (!format3) {
    if (inline)
      return calendar2;
    return import_react77.default.createElement(DropButton, _extends74({
      ref,
      id,
      dropProps: _extends74({
        align: {
          top: "bottom",
          left: "left"
        }
      }, dropProps),
      dropContent: calendar2,
      icon: icon || MaskedInputIcon || import_react77.default.createElement(import_Calendar2.Calendar, {
        size: iconSize
      })
    }, buttonProps));
  }
  var input = import_react77.default.createElement(FormContext.Provider, {
    key: "input",
    value: formContextValue
  }, import_react77.default.createElement(Keyboard, {
    onEsc: open ? function() {
      return closeCalendar();
    } : void 0,
    onSpace: openCalendar
  }, import_react77.default.createElement(Box, {
    ref: containerRef,
    border: !plain,
    round: "xxsmall",
    direction: "row",
    fill: true
  }, import_react77.default.createElement(MaskedInput, _extends74({
    ref,
    id,
    name,
    reverse: true,
    disabled,
    mask,
    plain: true
  }, restOfInputProps, rest, {
    value: textValue,
    onChange: function onChange(event) {
      var nextTextValue = event.target.value;
      setTextValue(nextTextValue);
      var nextValue = textToValue(nextTextValue, schema, range, timestamp);
      setValue(nextValue);
      if (_onChange) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.value = nextValue;
        _onChange(adjustedEvent);
      }
    },
    onFocus: function onFocus(event) {
      announce(formatMessage({
        id: "dateInput.openCalendar",
        messages
      }));
      if (_onFocus)
        _onFocus(event);
    }
  })), import_react77.default.createElement(Button, {
    onClick: open ? closeCalendar : openCalendar,
    plain: true,
    icon: icon || MaskedInputIcon || import_react77.default.createElement(import_Calendar2.Calendar, {
      size: iconSize
    }),
    margin: {
      right: "small"
    }
  }))));
  if (inline) {
    return import_react77.default.createElement(Box, null, input, calendar2);
  }
  if (open) {
    return [input, import_react77.default.createElement(Keyboard, {
      key: "drop",
      onEsc: function onEsc() {
        return ref.current.focus();
      }
    }, import_react77.default.createElement(Drop, _extends74({
      overflow: "visible",
      id: id ? id + "__drop" : void 0,
      target: ref.current,
      align: _extends74({
        top: "bottom",
        left: "left"
      }, dropProps),
      onEsc: closeCalendar,
      onClickOutside: function onClickOutside(_ref4) {
        var target = _ref4.target;
        if (target !== containerRef.current && !containerRef.current.contains(target)) {
          closeCalendar();
        }
      }
    }, dropProps), calendar2))];
  }
  return input;
});
DateInput.displayName = "DateInput";
DateInput.propTypes = DateInputPropTypes;

// node_modules/grommet/es6/components/Diagram/Diagram.js
var import_react78 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Diagram/StyledDiagram.js
init_styled_components_browser_esm();
var animationItemStyle3 = function animationItemStyle4(animationType, theme) {
  if (typeof animationType === "string") {
    return animationObjectStyle({
      type: animationType
    }, theme, theme.diagram);
  }
  if (typeof animationType === "object") {
    return animationObjectStyle(animationType, theme, theme.diagram);
  }
  if (typeof animationType === "boolean") {
    return animationObjectStyle({
      type: "draw"
    }, theme, theme.diagram);
  }
  return "";
};
var animationStyle2 = function animationStyle3(props) {
  var animationCopy = props.animation;
  if (typeof props.animation === "object") {
    animationCopy.type = animationCopy.type || "draw";
  }
  var animationType = animationCopy.type || animationCopy;
  if (animationType === "draw" || animationType === true) {
    return Ce(["path{stroke-dasharray:500;stroke-dashoffset:500;animation:", ";}"], animationItemStyle3(animationCopy, props.theme));
  }
  return Ce(["animation:", ";"], animationItemStyle3(animationCopy, props.theme));
};
var connectionStyle = function connectionStyle2(connection, index, theme) {
  var type = connection.props.animation.type;
  if (typeof connection.props.animation === "object") {
    type = type || "draw";
  }
  var animationType = type || connection.props.animation;
  return Ce(["path:nth-child(", "){stroke-dasharray:", ";stroke-dashoffset:", ";animation:", ";}"], index + 1, animationType === "draw" || animationType === true ? 500 : 0, animationType === "draw" || animationType === true ? 500 : 0, animationItemStyle3(connection.props.animation, theme));
};
var availableAnimations = [true, "draw", "pulse"];
var StyledDiagram = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledDiagram",
  componentId: "sc-1vzeu9f-0"
})(["max-width:100%;width:100%;height:100%;", " ", " ", ""], function(props) {
  return props.connections && props.connections.map(function(connection, index) {
    if (connection !== void 0 && connection.props.animation) {
      var animation = connection.props.animation;
      if (typeof animation === "object") {
        var connectionCopy = connection;
        connectionCopy.props.animation.type = animation.type || "draw";
        return availableAnimations.includes(animation.type || animation) ? connectionStyle(connectionCopy, index, props.theme) : "";
      }
      return connectionStyle(connection, index, props.theme);
    }
    return "";
  });
}, function(props) {
  return props.animation && (availableAnimations.includes(props.animation.type || props.animation) || Object.keys(props.animation).length !== 0) ? animationStyle2(props) : "";
}, function(props) {
  return props.theme.diagram && props.theme.diagram.extend;
});
StyledDiagram.defaultProps = {};
Object.setPrototypeOf(StyledDiagram.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Diagram/propTypes.js
var import_prop_types37 = __toESM(require_prop_types());
var animationPropType = import_prop_types37.default.oneOfType([import_prop_types37.default.bool, import_prop_types37.default.oneOf(["pulse", "draw"]), import_prop_types37.default.shape({
  type: import_prop_types37.default.oneOf(["pulse", "draw"]),
  delay: import_prop_types37.default.oneOfType([import_prop_types37.default.number, import_prop_types37.default.string]),
  duration: import_prop_types37.default.oneOfType([import_prop_types37.default.number, import_prop_types37.default.string]),
  size: import_prop_types37.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"])
})]);
var PropType34 = {};
if (true) {
  PropType34 = {
    animation: animationPropType,
    connections: import_prop_types37.default.arrayOf(import_prop_types37.default.shape({
      anchor: import_prop_types37.default.oneOf(["center", "vertical", "horizontal"]),
      animation: animationPropType,
      color: colorPropType,
      fromTarget: import_prop_types37.default.oneOfType([import_prop_types37.default.string, import_prop_types37.default.object]).isRequired,
      label: import_prop_types37.default.string,
      offset: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["xsmall", "small", "medium", "large"]), import_prop_types37.default.string]),
      thickness: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["hair", "xxsmall", "xsmall", "small", "medium", "large"]), import_prop_types37.default.string]),
      toTarget: import_prop_types37.default.oneOfType([import_prop_types37.default.string, import_prop_types37.default.object]).isRequired,
      type: import_prop_types37.default.oneOf(["direct", "curved", "rectilinear"])
    })).isRequired
  };
}
var DiagramPropTypes = PropType34;

// node_modules/grommet/es6/components/Diagram/Diagram.js
var _excluded45 = ["connections"];
var _excluded213 = ["anchor", "animation", "color", "offset", "round", "thickness", "type"];
function _extends75() {
  _extends75 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends75.apply(this, arguments);
}
function _objectWithoutPropertiesLoose40(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var computeMidPoint = function computeMidPoint2(fromPoint, toPoint) {
  return [fromPoint[0] > toPoint[0] ? toPoint[0] + (fromPoint[0] - toPoint[0]) / 2 : fromPoint[0] + (toPoint[0] - fromPoint[0]) / 2, fromPoint[1] > toPoint[1] ? toPoint[1] + (fromPoint[1] - toPoint[1]) / 2 : fromPoint[1] + (toPoint[1] - fromPoint[1]) / 2];
};
var COMMANDS = {
  curved: function curved(fromPoint, toPoint, offset, anchor) {
    var midPoint3 = computeMidPoint(fromPoint, toPoint);
    var cmds = "M " + (fromPoint[0] + offset) + "," + (fromPoint[1] + offset) + " ";
    if (anchor === "horizontal") {
      cmds += "Q " + (midPoint3[0] + offset) + "," + (fromPoint[1] + offset) + " " + (midPoint3[0] + offset + "," + (midPoint3[1] + offset) + " ");
    } else {
      cmds += "Q " + (fromPoint[0] + offset) + "," + (midPoint3[1] + offset) + " " + (midPoint3[0] + offset + "," + (midPoint3[1] + offset) + " ");
    }
    cmds += "T " + (toPoint[0] + offset) + "," + (toPoint[1] + offset);
    return cmds;
  },
  direct: function direct(fromPoint, toPoint, offset) {
    return "M " + (fromPoint[0] + offset) + "," + (fromPoint[1] + offset) + " " + ("L " + (toPoint[0] + offset) + "," + (toPoint[1] + offset));
  },
  rectilinear: function rectilinear(fromPoint, toPoint, offset, anchor) {
    var midPoint3 = computeMidPoint(fromPoint, toPoint);
    var cmds = "M " + (fromPoint[0] + offset) + "," + (fromPoint[1] + offset) + " ";
    if (anchor === "horizontal") {
      cmds += "L " + (midPoint3[0] + offset) + "," + (fromPoint[1] + offset) + " " + ("L " + (midPoint3[0] + offset) + "," + (toPoint[1] + offset) + " ");
    } else {
      cmds += "L " + (fromPoint[0] + offset) + "," + (midPoint3[1] + offset) + " " + ("L " + (toPoint[0] + offset) + "," + (midPoint3[1] + offset) + " ");
    }
    cmds += "L " + (toPoint[0] + offset) + "," + (toPoint[1] + offset);
    return cmds;
  }
};
var findTarget = function findTarget2(target) {
  if (typeof target === "string") {
    return document.getElementById(target);
  }
  return target;
};
var Diagram = (0, import_react78.forwardRef)(function(_ref, ref) {
  var connections = _ref.connections, rest = _objectWithoutPropertiesLoose40(_ref, _excluded45);
  var theme = (0, import_react78.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react78.useState)({
    width: 0,
    height: 0
  }), dimensions = _useState[0], setDimensions = _useState[1];
  var _useState2 = (0, import_react78.useState)(), connectionPoints = _useState2[0], setConnectionPoints = _useState2[1];
  var svgRef = useForwardedRef(ref);
  (0, import_react78.useEffect)(function() {
    setConnectionPoints(void 0);
  }, [connections]);
  var onResize = (0, import_react78.useCallback)(function() {
    var svg = svgRef.current;
    if (svg) {
      var rect = svg.getBoundingClientRect();
      if (rect.width !== dimensions.width || rect.height !== dimensions.height) {
        setDimensions({
          width: rect.width,
          height: rect.height
        });
        setConnectionPoints(void 0);
      }
    }
  }, [dimensions.width, dimensions.height, svgRef]);
  var savedOnResize = (0, import_react78.useRef)();
  (0, import_react78.useEffect)(function() {
    savedOnResize.current = onResize;
  }, [onResize]);
  (0, import_react78.useEffect)(function() {
    var onResizeHandler = function onResizeHandler2(event) {
      return savedOnResize.current(event);
    };
    onResizeHandler();
    window.addEventListener("resize", onResizeHandler);
    return function() {
      window.removeEventListener("resize", onResizeHandler);
    };
  }, []);
  var placeConnections = (0, import_react78.useCallback)(function() {
    var containerRect = svgRef.current.getBoundingClientRect();
    var updatedConnectionPoints = connections.map(function(_ref2) {
      var anchor = _ref2.anchor, fromTarget = _ref2.fromTarget, toTarget = _ref2.toTarget;
      var points2;
      var fromElement = findTarget(fromTarget);
      var toElement = findTarget(toTarget);
      if (!fromElement) {
        console.warn("Diagram cannot find " + fromTarget);
      }
      if (!toElement) {
        console.warn("Diagram cannot find " + toTarget);
      }
      if (fromElement && toElement) {
        var fromRect = fromElement.getBoundingClientRect();
        var toRect = toElement.getBoundingClientRect();
        var fromPoint = [fromRect.left - containerRect.left || 0, fromRect.top - containerRect.top || 0];
        var toPoint = [toRect.left - containerRect.left || 0, toRect.top - containerRect.top || 0];
        if (anchor === "vertical") {
          fromPoint[0] += fromRect.width / 2;
          toPoint[0] += toRect.width / 2;
          if (fromRect.top < toRect.top) {
            fromPoint[1] += fromRect.height;
          } else {
            toPoint[1] += toRect.height;
          }
        } else if (anchor === "horizontal") {
          fromPoint[1] += fromRect.height / 2;
          toPoint[1] += toRect.height / 2;
          if (fromRect.left < toRect.left) {
            fromPoint[0] += fromRect.width;
          } else {
            toPoint[0] += toRect.width;
          }
        } else {
          fromPoint[0] += fromRect.width / 2;
          fromPoint[1] += fromRect.height / 2;
          toPoint[0] += toRect.width / 2;
          toPoint[1] += toRect.height / 2;
        }
        points2 = [fromPoint, toPoint];
      }
      return points2;
    });
    setConnectionPoints(updatedConnectionPoints);
  }, [connections, svgRef]);
  (0, import_react78.useEffect)(function() {
    if (!connectionPoints) {
      placeConnections();
    }
  }, [connectionPoints, placeConnections]);
  var paths;
  if (connectionPoints) {
    paths = connections.map(function(_ref3, index) {
      var anchor = _ref3.anchor, animation = _ref3.animation, color = _ref3.color, offset = _ref3.offset, round3 = _ref3.round, thickness = _ref3.thickness, type = _ref3.type, connectionRest = _objectWithoutPropertiesLoose40(_ref3, _excluded213);
      var path;
      var cleanedRest = _extends75({}, connectionRest);
      delete cleanedRest.fromTarget;
      delete cleanedRest.toTarget;
      var points2 = connectionPoints[index];
      if (points2) {
        var offsetWidth = offset ? parseMetricToNum(theme.global.edgeSize[offset]) : 0;
        var d2 = COMMANDS[type || "curved"](points2[0], points2[1], offsetWidth, anchor);
        var strokeWidth = thickness ? parseMetricToNum(theme.global.edgeSize[thickness] || thickness) : 1;
        var colorName = color || theme.diagram.line && theme.diagram.line.color;
        if (!colorName) {
          var colors3 = Object.keys(theme.global.colors).filter(function(n2) {
            return n2.match(/^graph-[0-9]$/);
          });
          colorName = colors3[index % colors3.length];
        }
        path = import_react78.default.createElement("path", _extends75({
          key: index,
          animation
        }, cleanedRest, {
          stroke: normalizeColor(colorName, theme),
          strokeWidth,
          strokeLinecap: round3 ? "round" : "butt",
          strokeLinejoin: round3 ? "round" : "miter",
          fill: "none",
          d: d2
        }));
      }
      return path;
    });
  }
  return import_react78.default.createElement(StyledDiagram, _extends75({
    ref: svgRef,
    viewBox: "0 0 " + dimensions.width + " " + dimensions.height,
    preserveAspectRatio: "xMinYMin meet",
    connections: paths
  }, rest), import_react78.default.createElement("g", null, paths));
});
Diagram.displayName = "Diagram";
Diagram.defaultProps = {
  connections: []
};
Diagram.propTypes = DiagramPropTypes;

// node_modules/grommet/es6/components/Distribution/Distribution.js
var import_react79 = __toESM(require_react());
var import_prop_types39 = __toESM(require_prop_types());

// node_modules/grommet/es6/components/Distribution/propTypes.js
var import_prop_types38 = __toESM(require_prop_types());
function _extends76() {
  _extends76 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends76.apply(this, arguments);
}
var PropType35 = {};
if (true) {
  PropType35 = _extends76({}, genericProps, {
    basis: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "full", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "auto"]), import_prop_types38.default.string]),
    children: import_prop_types38.default.func,
    fill: import_prop_types38.default.bool,
    gap: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types38.default.string]),
    values: import_prop_types38.default.arrayOf(import_prop_types38.default.shape({
      value: import_prop_types38.default.number
    })).isRequired
  });
}
var DistributionPropTypes = PropType35;

// node_modules/grommet/es6/components/Distribution/Distribution.js
var _excluded46 = ["basis", "children", "direction", "fill", "gap", "values"];
function _extends77() {
  _extends77 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends77.apply(this, arguments);
}
function _objectWithoutPropertiesLoose41(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Value = function Value2(_ref) {
  var basis = _ref.basis, children2 = _ref.children;
  return import_react79.default.createElement(Box, {
    basis,
    flex: "shrink",
    overflow: "hidden"
  }, children2);
};
Value.propTypes = {
  basis: import_prop_types39.default.string.isRequired,
  children: import_prop_types39.default.node.isRequired
};
var Distribution = function Distribution2(_ref2) {
  var basis = _ref2.basis, children2 = _ref2.children, direction = _ref2.direction, fill = _ref2.fill, gap = _ref2.gap, values = _ref2.values, rest = _objectWithoutPropertiesLoose41(_ref2, _excluded46);
  if (values.length === 1) {
    var value = values[0];
    return import_react79.default.createElement(Value, {
      value,
      basis
    }, children2(value));
  }
  if (values.length > 1) {
    var reducer = function reducer2(accumulator, _ref3) {
      var value2 = _ref3.value;
      return accumulator + (value2 || 0);
    };
    var total = values.filter(function(v2) {
      return Object.prototype.hasOwnProperty.call(v2, "value");
    }).reduce(reducer, 0);
    var subTotal = 0;
    var subIndex;
    values.some(function(v2, index) {
      subTotal += Object.prototype.hasOwnProperty.call(v2, "value") ? v2.value : 0;
      if (subTotal >= total * 0.4) {
        subIndex = index + 1;
        return true;
      }
      return false;
    });
    if (subIndex === values.length) {
      var _value = values[0];
      return import_react79.default.createElement(Value, {
        value: _value,
        basis
      }, children2(_value));
    }
    var childBasis;
    if (subTotal === 0) {
      childBasis = ["0px", "0px"];
    } else if (subTotal === total) {
      childBasis = ["full", "0px"];
    } else if (subTotal > total * 0.7) {
      childBasis = ["3/4", "1/4"];
    } else if (subTotal > total * 0.6) {
      childBasis = ["2/3", "1/3"];
    } else {
      childBasis = ["1/2", "1/2"];
    }
    return import_react79.default.createElement(Box, _extends77({
      direction,
      basis,
      flex: basis ? "shrink" : true,
      overflow: "hidden",
      gap,
      fill
    }, rest), import_react79.default.createElement(Distribution2, {
      values: values.slice(0, subIndex),
      basis: childBasis[0],
      direction: direction === "row" ? "column" : "row",
      gap
    }, children2), import_react79.default.createElement(Distribution2, {
      values: values.slice(subIndex),
      basis: childBasis[1],
      direction: direction === "row" ? "column" : "row",
      gap
    }, children2));
  }
  return null;
};
Distribution.defaultProps = {
  basis: void 0,
  children: function children(value) {
    return import_react79.default.createElement(Box, {
      fill: true,
      border: true
    }, import_react79.default.createElement(Text, null, value.value));
  },
  direction: "row",
  gap: "xsmall",
  values: []
};
Distribution.propTypes = DistributionPropTypes;

// node_modules/grommet/es6/components/FileInput/FileInput.js
var import_react80 = __toESM(require_react());
init_styled_components_browser_esm();
var import_CircleAlert = __toESM(require_CircleAlert());

// node_modules/grommet/es6/components/FileInput/StyledFileInput.js
init_styled_components_browser_esm();
var StyledFileInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledFileInput",
  componentId: "sc-rl7ywv-0"
})(["position:absolute;height:100%;width:100%;", " opacity:0;border:none;", " ", " &::-moz-focus-inner{border:none;outline:none;}"], inputStyle, function(props) {
  return !props.disabled && "cursor: pointer;";
}, function(props) {
  return props.rightOffset && "\n    width: calc(100% - " + props.rightOffset + "px);\n    right: " + props.rightOffset + "px;\n    ";
});
StyledFileInput.defaultProps = {};
Object.setPrototypeOf(StyledFileInput.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/FileInput/propTypes.js
var import_prop_types40 = __toESM(require_prop_types());
var PropType36 = {};
if (true) {
  PropType36 = {
    confirmRemove: import_prop_types40.default.func,
    disabled: import_prop_types40.default.bool,
    id: import_prop_types40.default.string,
    messages: import_prop_types40.default.shape({
      browse: import_prop_types40.default.string,
      dropPrompt: import_prop_types40.default.string,
      dropPromptMultiple: import_prop_types40.default.string,
      files: import_prop_types40.default.string,
      remove: import_prop_types40.default.string,
      removeAll: import_prop_types40.default.string
    }),
    multiple: import_prop_types40.default.oneOfType([import_prop_types40.default.bool, import_prop_types40.default.shape({
      aggregateThreshold: import_prop_types40.default.number
    })]),
    name: import_prop_types40.default.string,
    onChange: import_prop_types40.default.func,
    renderFile: import_prop_types40.default.func
  };
}
var FileInputPropTypes = PropType36;

// node_modules/grommet/es6/components/FileInput/FileInput.js
var _excluded47 = ["a11yTitle", "background", "border", "confirmRemove", "disabled", "id", "plain", "renderFile", "maxSize", "messages", "margin", "multiple", "name", "onChange", "pad", "value"];
function _extends78() {
  _extends78 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends78.apply(this, arguments);
}
function _objectWithoutPropertiesLoose42(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var formatBytes = function formatBytes2(size) {
  var units = ["B", "KB", "MB", "GB", "TB"];
  var factor = 1024;
  var index = 0;
  var num = size;
  while (num >= factor && index < units.length - 1) {
    num /= factor;
    index += 1;
  }
  return num.toFixed(1) + " " + units[index];
};
var ContentsBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FileInput__ContentsBox",
  componentId: "sc-1jzq7im-0"
})(["position:relative;", " ", ";", ";", ";"], function(props) {
  return props.disabled && disabledStyle();
}, function(props) {
  return props.theme.fileInput && props.theme.fileInput.extend;
}, function(props) {
  return props.hover && props.theme.fileInput && props.theme.fileInput.hover && props.theme.fileInput.hover.extend;
}, function(props) {
  return props.dragOver && props.theme.fileInput && props.theme.fileInput.dragOver && props.theme.fileInput.dragOver.extend;
});
var Label = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FileInput__Label",
  componentId: "sc-1jzq7im-1"
})(["", ";"], function(props) {
  return props.theme.fileInput && props.theme.fileInput.label && props.theme.fileInput.label.extend;
});
var Message = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FileInput__Message",
  componentId: "sc-1jzq7im-2"
})(["", ";"], function(props) {
  return props.theme.fileInput && props.theme.fileInput.message && props.theme.fileInput.message.extend;
});
var defaultPendingRemoval = {
  event: void 0,
  index: void 0
};
var FileInput = (0, import_react80.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, background = _ref.background, border = _ref.border, confirmRemove = _ref.confirmRemove, disabled = _ref.disabled, id = _ref.id, plain = _ref.plain, renderFile = _ref.renderFile, maxSize = _ref.maxSize, messages = _ref.messages, margin = _ref.margin, multiple = _ref.multiple, name = _ref.name, _onChange = _ref.onChange, pad = _ref.pad, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose42(_ref, _excluded47);
  var theme = (0, import_react80.useContext)(Ge);
  var _useContext = (0, import_react80.useContext)(MessageContext), format3 = _useContext.format;
  var formContext = (0, import_react80.useContext)(FormContext);
  var _React$useState = import_react80.default.useState(), hover = _React$useState[0], setHover = _React$useState[1];
  var _React$useState2 = import_react80.default.useState(), dragOver = _React$useState2[0], setDragOver = _React$useState2[1];
  var _useState = (0, import_react80.useState)(false), showRemoveConfirmation = _useState[0], setShowRemoveConfirmation = _useState[1];
  var _useState2 = (0, import_react80.useState)(defaultPendingRemoval), pendingRemoval = _useState2[0], setPendingRemoval = _useState2[1];
  var aggregateThreshold = multiple && multiple.aggregateThreshold || 10;
  var max = multiple == null ? void 0 : multiple.max;
  var inputRef = useForwardedRef(ref);
  var controlRef = (0, import_react80.useRef)();
  var removeRef = (0, import_react80.useRef)();
  var ConfirmRemove = confirmRemove;
  var RemoveIcon = theme.fileInput.icons.remove;
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: [],
    validate: [maxSize ? function() {
      var fileList = [].concat(files);
      var message2 = "";
      var numOfInvalidFiles = fileList.filter(function(_ref2) {
        var size = _ref2.size;
        return size > maxSize;
      }).length;
      if (numOfInvalidFiles) {
        var messageId = "fileInput.maxSizeSingle";
        if (multiple) {
          messageId = "fileInput.maxSizeMultiple." + (numOfInvalidFiles === 1 ? "singular" : "plural");
        }
        message2 = format3({
          id: messageId,
          messages,
          values: {
            maxSize: formatBytes(maxSize),
            numOfFiles: numOfInvalidFiles
          }
        });
      }
      return message2;
    } : "", max ? function() {
      var fileList = [].concat(files);
      var message2 = "";
      if (fileList.length > max) {
        message2 = format3({
          id: "fileInput.maxFile",
          messages,
          values: {
            max
          }
        });
      }
      return message2;
    } : ""]
  }), files = _formContext$useFormI[0], setFiles = _formContext$useFormI[1];
  var mergeTheme = function mergeTheme2(propertyName, defaultKey) {
    var result = {};
    var themeProp = theme.fileInput[propertyName];
    if (themeProp)
      if (typeof themeProp !== "object") {
        if (defaultKey)
          result[defaultKey] = themeProp;
        else
          result = themeProp;
      } else
        result = _extends78({}, themeProp);
    var hoverThemeProp = theme.fileInput.hover[propertyName];
    if (hover && hoverThemeProp)
      if (typeof hoverThemeProp !== "object") {
        if (defaultKey)
          result[defaultKey] = hoverThemeProp;
        else
          result = hoverThemeProp;
      } else
        result = _extends78({}, result, hoverThemeProp);
    var dragOverThemeProp = theme.fileInput.dragOver[propertyName];
    if (dragOver && dragOverThemeProp)
      if (typeof dragOverThemeProp !== "object") {
        if (defaultKey)
          result[defaultKey] = dragOverThemeProp;
        else
          result = dragOverThemeProp;
      } else
        result = _extends78({}, result, dragOverThemeProp);
    return typeof result === "object" && Object.keys(result).length === 0 ? void 0 : result;
  };
  var rightPad;
  if (mergeTheme("pad")) {
    var _mergeTheme = mergeTheme("pad"), horizontal12 = _mergeTheme.horizontal, right = _mergeTheme.right;
    if (right) {
      rightPad = theme.global.edgeSize[right] || right;
    } else if (horizontal12) {
      rightPad = theme.global.edgeSize[horizontal12] || horizontal12;
    }
  }
  var rightOffset;
  if (removeRef.current && controlRef.current) {
    var rightOffsetBrowse = controlRef.current.getBoundingClientRect().width;
    var rightOffsetRemove = removeRef.current.getBoundingClientRect().width;
    if (rightPad && typeof rightPad === "string")
      rightOffset = rightOffsetRemove + parseMetricToNum(rightPad);
    if (files.length === 1 || files.length > aggregateThreshold) {
      rightOffset = rightOffsetBrowse + rightOffsetRemove + parseMetricToNum(theme.global.edgeSize.small) * 2;
    } else if (rightOffsetBrowse > rightOffsetRemove) {
      rightOffset = rightOffsetBrowse + parseMetricToNum(theme.global.edgeSize.small) * 2;
    } else
      rightOffset = rightOffsetRemove;
  } else if (!files.length && controlRef.current) {
    rightOffset = controlRef.current.getBoundingClientRect().width + parseMetricToNum(theme.global.edgeSize.small) * 2;
  }
  var message;
  if (!files.length) {
    message = format3({
      id: multiple ? "fileInput.dropPromptMultiple" : "fileInput.dropPrompt",
      messages
    });
  } else
    message = files.length + " items";
  var removeFile = function removeFile2(event, index) {
    event.stopPropagation();
    var nextFiles;
    if (index === "all") {
      nextFiles = [];
    } else {
      nextFiles = [].concat(files);
      nextFiles.splice(index, 1);
    }
    setFiles(nextFiles);
    if (_onChange)
      _onChange(event, {
        files: nextFiles
      });
    if (nextFiles.length === 0)
      inputRef.current.value = "";
    inputRef.current.focus();
  };
  return import_react80.default.createElement(import_react80.default.Fragment, null, import_react80.default.createElement(ContentsBox, {
    theme,
    flex: false,
    disabled,
    background: mergeTheme("background", "color"),
    border: !plain ? mergeTheme("border", "side") : void 0,
    margin: mergeTheme("margin"),
    pad: mergeTheme("pad"),
    round: mergeTheme("round", "size"),
    align: files.length ? "stretch" : "center",
    justify: "center",
    hover,
    onMouseOver: disabled ? void 0 : function() {
      return setHover(true);
    },
    onMouseOut: disabled ? void 0 : function() {
      return setHover(false);
    },
    dragOver
  }, (!files.length || files.length > 1) && import_react80.default.createElement(Box, {
    align: "center",
    fill: "horizontal",
    direction: "row",
    justify: "between"
  }, files.length <= aggregateThreshold && import_react80.default.createElement(import_react80.default.Fragment, null, import_react80.default.createElement(Message, theme.fileInput.message, message), import_react80.default.createElement(Keyboard, {
    onSpace: function onSpace(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    },
    onEnter: function onEnter(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    }
  }, theme.fileInput.button ? import_react80.default.createElement(Button, {
    ref: controlRef,
    kind: theme.fileInput.button,
    label: format3({
      id: "fileInput.browse",
      messages
    }),
    onClick: function onClick() {
      inputRef.current.click();
      inputRef.current.focus();
    }
  }) : import_react80.default.createElement(Anchor, {
    tabIndex: 0,
    alignSelf: "center",
    ref: controlRef,
    margin: "small",
    onClick: function onClick() {
      inputRef.current.click();
      inputRef.current.focus();
    },
    label: format3({
      id: "fileInput.browse",
      messages
    })
  })))), files.length > aggregateThreshold && import_react80.default.createElement(Box, {
    justify: "between",
    direction: "row",
    align: "center"
  }, import_react80.default.createElement(Label, theme.fileInput.label, files.length, " ", format3({
    id: "fileInput.files",
    messages
  })), import_react80.default.createElement(Box, {
    flex: false,
    direction: "row",
    align: "center"
  }, import_react80.default.createElement(Button, {
    ref: removeRef,
    a11yTitle: format3({
      id: "fileInput.removeAll",
      messages
    }),
    icon: import_react80.default.createElement(RemoveIcon, null),
    hoverIndicator: true,
    onClick: function onClick(event) {
      if (confirmRemove) {
        event.persist();
        setPendingRemoval({
          event,
          index: "all"
        });
        setShowRemoveConfirmation(true);
      } else
        removeFile(event, "all");
    }
  }), import_react80.default.createElement(Keyboard, {
    onSpace: function onSpace(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    },
    onEnter: function onEnter(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    }
  }, theme.fileInput.button ? import_react80.default.createElement(Button, {
    ref: controlRef,
    kind: theme.fileInput.button,
    label: format3({
      id: "fileInput.browse",
      messages
    }),
    onClick: function onClick() {
      inputRef.current.click();
      inputRef.current.focus();
    }
  }) : import_react80.default.createElement(Anchor, {
    tabIndex: 0,
    alignSelf: "center",
    ref: controlRef,
    margin: "small",
    onClick: function onClick() {
      inputRef.current.click();
      inputRef.current.focus();
    },
    label: format3({
      id: "fileInput.browse",
      messages
    })
  })))), files.length > 0 && files.length <= aggregateThreshold && files.map(function(file, index) {
    return import_react80.default.createElement(Box, {
      key: file.name,
      justify: "between",
      direction: "row",
      align: "center"
    }, renderFile ? renderFile(file) : import_react80.default.createElement(Box, _extends78({}, theme.fileInput.label, {
      gap: "xsmall",
      align: "center",
      direction: "row"
    }), (maxSize && file.size > maxSize || max && index >= max) && import_react80.default.createElement(import_CircleAlert.CircleAlert, null), import_react80.default.createElement(Label, {
      weight: theme.global.input.weight || theme.global.input.font.weight,
      truncate: true
    }, file.name)), import_react80.default.createElement(Box, {
      flex: false,
      direction: "row",
      align: "center"
    }, import_react80.default.createElement(Button, {
      ref: index ? void 0 : removeRef,
      a11yTitle: format3({
        id: "fileInput.remove",
        messages
      }) + " " + file.name,
      icon: import_react80.default.createElement(RemoveIcon, null),
      hoverIndicator: true,
      onClick: function onClick(event) {
        if (confirmRemove) {
          event.persist();
          setPendingRemoval({
            event,
            index
          });
          setShowRemoveConfirmation(true);
        } else
          removeFile(event, index);
      }
    }), files.length === 1 && import_react80.default.createElement(Keyboard, {
      onSpace: function onSpace(event) {
        if (controlRef.current === event.target)
          inputRef.current.click();
      },
      onEnter: function onEnter(event) {
        if (controlRef.current === event.target)
          inputRef.current.click();
      }
    }, theme.fileInput.button ? import_react80.default.createElement(Button, {
      ref: controlRef,
      kind: theme.fileInput.button,
      label: format3({
        id: "fileInput.browse",
        messages
      }),
      onClick: function onClick() {
        inputRef.current.click();
        inputRef.current.focus();
      }
    }) : import_react80.default.createElement(Anchor, {
      tabIndex: 0,
      ref: controlRef,
      margin: "small",
      onClick: function onClick() {
        inputRef.current.click();
        inputRef.current.focus();
      },
      label: format3({
        id: "fileInput.browse",
        messages
      })
    }))));
  }), import_react80.default.createElement(StyledFileInput, _extends78({
    ref: inputRef,
    type: "file",
    id,
    name,
    maxSize,
    multiple,
    disabled,
    plain: true,
    rightOffset
  }, rest, {
    onDragOver: function onDragOver() {
      return setDragOver(true);
    },
    onDragLeave: function onDragLeave() {
      return setDragOver(false);
    },
    onChange: function onChange(event) {
      event.persist();
      var fileList = event.target.files;
      var nextFiles = multiple ? [].concat(files) : [];
      var _loop = function _loop2(i3) {
        var existing = nextFiles.filter(function(file) {
          return file.name === fileList[i3].name && file.size === fileList[i3].size;
        }).length > 0;
        if (!existing) {
          nextFiles.push(fileList[i3]);
        }
      };
      for (var i2 = 0; i2 < fileList.length; i2 += 1) {
        _loop(i2);
      }
      setFiles(nextFiles);
      setDragOver(false);
      if (_onChange)
        _onChange(event, {
          files: nextFiles
        });
    }
  }))), showRemoveConfirmation && import_react80.default.createElement(ConfirmRemove, {
    onConfirm: function onConfirm() {
      removeFile(pendingRemoval.event, pendingRemoval.index);
      setPendingRemoval(defaultPendingRemoval);
      setShowRemoveConfirmation(false);
    },
    onCancel: function onCancel() {
      return setShowRemoveConfirmation(false);
    }
  }));
});
FileInput.defaultProps = {};
Object.setPrototypeOf(FileInput.defaultProps, defaultProps2);
FileInput.displayName = "FileInput";
FileInput.propTypes = FileInputPropTypes;

// node_modules/grommet/es6/components/FormField/FormField.js
var import_react83 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RadioButtonGroup/RadioButtonGroup.js
var import_react82 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RadioButton/RadioButton.js
var import_react81 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RadioButton/StyledRadioButton.js
init_styled_components_browser_esm();
var disabledStyle5 = "\n  opacity: 0.5;\n  cursor: default;\n";
var StyledRadioButtonContainer = styled_components_browser_esm_default.label.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonContainer",
  componentId: "sc-g1f6ld-0"
})(["display:flex;flex-direction:row;align-items:center;user-select:none;width:fit-content;", " ", ":hover input:not([disabled]) + div,:hover input:not([disabled]) + span{border-color:", ";}:hover{background-color:", ";}", " ", ";"], function(props) {
  return props.disabled && disabledStyle5;
}, function(props) {
  return !props.disabled && "cursor: pointer;";
}, function(props) {
  return normalizeColor(props.theme.radioButton.hover.border.color, props.theme);
}, function(props) {
  return normalizeColor(!props.disabled && props.theme.radioButton.hover && props.theme.radioButton.hover.background && props.theme.radioButton.hover.background.color, props.theme);
}, function(props) {
  return props.focus && !props.focusIndicator && "\n      input:not([disabled]) + div,\n      input:not([disabled]) + span {\n      border-color: " + normalizeColor(props.theme.radioButton.hover.border.color, props.theme) + ";\n    }\n    background-color: " + normalizeColor(!props.disabled && props.theme.radioButton.hover && props.theme.radioButton.hover.background && props.theme.radioButton.hover.background.color, props.theme) + ";\n    ";
}, function(props) {
  return props.theme.radioButton.container.extend;
});
StyledRadioButtonContainer.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonContainer.defaultProps, defaultProps2);
var StyledRadioButtonInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonInput",
  componentId: "sc-g1f6ld-1"
})(["opacity:0;-moz-appearance:none;width:0;height:0;margin:0;", ";"], function(props) {
  return !props.disabled && "cursor: pointer;";
});
StyledRadioButtonInput.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonInput.defaultProps, defaultProps2);
var StyledRadioButtonLabel = styled_components_browser_esm_default.span.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonLabel",
  componentId: "sc-g1f6ld-2"
})(["", ""], function(props) {
  return props.theme.radioButton.font.weight && Ce(["font-weight:", ";"], props.theme.radioButton.font.weight);
});
StyledRadioButtonLabel.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonLabel.defaultProps, defaultProps2);
var StyledRadioButtonIcon = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonIcon",
  componentId: "sc-g1f6ld-3"
})(["box-sizing:border-box;width:", ";height:", ";fill:", ";", ";"], function(props) {
  return props.theme.radioButton.icon.size || props.theme.radioButton.size;
}, function(props) {
  return props.theme.radioButton.icon.size || props.theme.radioButton.size;
}, function(props) {
  return normalizeColor(props.theme.radioButton.check.color || "control", props.theme);
}, function(props) {
  return props.theme.radioButton.icon.extend;
});
StyledRadioButtonIcon.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonIcon.defaultProps, defaultProps2);
var StyledRadioButtonBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonBox",
  componentId: "sc-g1f6ld-4"
})(["background-color:", ";", ";", ";"], function(props) {
  var _props$theme$radioBut;
  return normalizeColor((_props$theme$radioBut = props.theme.radioButton.check.background) == null ? void 0 : _props$theme$radioBut.color, props.theme);
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return props.theme.radioButton.check.extend;
});
StyledRadioButtonBox.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonBox.defaultProps, defaultProps2);
var StyledRadioButton = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledRadioButton",
  componentId: "sc-g1f6ld-5"
})(["", ";"], function(props) {
  return props.theme.radioButton && props.theme.radioButton.extend;
});
StyledRadioButton.defaultProps = {};
Object.setPrototypeOf(StyledRadioButton.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/RadioButton/propTypes.js
var import_prop_types41 = __toESM(require_prop_types());
var PropType37 = {};
if (true) {
  PropType37 = {
    a11yTitle: import_prop_types41.default.string,
    checked: import_prop_types41.default.bool,
    children: import_prop_types41.default.func,
    disabled: import_prop_types41.default.bool,
    id: import_prop_types41.default.string,
    label: import_prop_types41.default.node,
    name: import_prop_types41.default.string.isRequired,
    onChange: import_prop_types41.default.func
  };
}
var RadioButtonPropTypes = PropType37;

// node_modules/grommet/es6/components/RadioButton/RadioButton.js
var _excluded48 = ["a11yTitle", "checked", "children", "disabled", "focus", "focusIndicator", "id", "label", "name", "onChange"];
function _extends79() {
  _extends79 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends79.apply(this, arguments);
}
function _objectWithoutPropertiesLoose43(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RadioButton = (0, import_react81.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, checked = _ref.checked, children2 = _ref.children, disabled = _ref.disabled, focus = _ref.focus, focusIndicator = _ref.focusIndicator, id = _ref.id, label = _ref.label, name = _ref.name, onChange = _ref.onChange, rest = _objectWithoutPropertiesLoose43(_ref, _excluded48);
  var theme = (0, import_react81.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react81.useState)(), hover = _useState[0], setHover = _useState[1];
  var normalizedLabel = typeof label === "string" ? import_react81.default.createElement(StyledRadioButtonLabel, null, label) : label;
  var Icon = theme.radioButton.icons.circle;
  var borderColor = normalizeColor(theme.radioButton.border.color, theme);
  if (checked) {
    borderColor = normalizeColor(theme.radioButton.color || "control", theme);
  }
  return import_react81.default.createElement(StyledRadioButtonContainer, _extends79({}, removeUndefined({
    htmlFor: id,
    disabled
  }), {
    onClick: function onClick(event) {
      if (event.target.type !== "radio") {
        event.stopPropagation();
      }
    },
    focus,
    focusIndicator,
    onMouseEnter: function onMouseEnter() {
      return setHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHover(false);
    }
  }), import_react81.default.createElement(StyledRadioButton, {
    as: Box,
    flex: false,
    margin: label ? {
      right: theme.radioButton.gap || "small"
    } : void 0
  }, import_react81.default.createElement(StyledRadioButtonInput, _extends79({
    "aria-label": a11yTitle
  }, rest, {
    ref,
    type: "radio"
  }, removeUndefined({
    id,
    name,
    checked,
    disabled,
    onChange
  }))), children2 ? children2({
    checked,
    focus: focus && focusIndicator,
    hover
  }) : import_react81.default.createElement(StyledRadioButtonBox, {
    focus: focus && focusIndicator,
    as: Box,
    align: "center",
    justify: "center",
    width: theme.radioButton.size,
    height: theme.radioButton.size,
    border: {
      size: theme.radioButton.border.width,
      color: borderColor
    },
    round: theme.radioButton.check.radius
  }, checked && (Icon ? import_react81.default.createElement(Icon, {
    as: StyledRadioButtonIcon
  }) : import_react81.default.createElement(StyledRadioButtonIcon, {
    viewBox: "0 0 24 24",
    preserveAspectRatio: "xMidYMid meet"
  }, import_react81.default.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 6
  }))))), normalizedLabel);
});
RadioButton.displayName = "RadioButton";
RadioButton.propTypes = RadioButtonPropTypes;

// node_modules/grommet/es6/components/RadioButtonGroup/propTypes.js
var import_prop_types42 = __toESM(require_prop_types());
var PropType38 = {};
if (true) {
  PropType38 = {
    children: import_prop_types42.default.func,
    disabled: import_prop_types42.default.bool,
    name: import_prop_types42.default.string.isRequired,
    onChange: import_prop_types42.default.func,
    options: import_prop_types42.default.oneOfType([import_prop_types42.default.arrayOf(import_prop_types42.default.string), import_prop_types42.default.arrayOf(import_prop_types42.default.number), import_prop_types42.default.arrayOf(import_prop_types42.default.bool), import_prop_types42.default.arrayOf(import_prop_types42.default.shape({
      disabled: import_prop_types42.default.bool,
      id: import_prop_types42.default.string,
      label: import_prop_types42.default.oneOfType([import_prop_types42.default.string, import_prop_types42.default.element]),
      value: import_prop_types42.default.oneOfType([import_prop_types42.default.string, import_prop_types42.default.number, import_prop_types42.default.bool]).isRequired
    }))]).isRequired,
    value: import_prop_types42.default.oneOfType([import_prop_types42.default.string, import_prop_types42.default.number, import_prop_types42.default.bool, import_prop_types42.default.object])
  };
}
var RadioButtonGroupPropTypes = PropType38;

// node_modules/grommet/es6/components/RadioButtonGroup/RadioButtonGroup.js
var _excluded49 = ["children", "defaultValue", "disabled", "focusIndicator", "name", "onChange", "options", "value", "gap"];
var _excluded214 = ["disabled", "id", "label", "value"];
function _extends80() {
  _extends80 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends80.apply(this, arguments);
}
function _objectWithoutPropertiesLoose44(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RadioButtonGroup = (0, import_react82.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, name = _ref.name, _onChange = _ref.onChange, optionsProp = _ref.options, valueProp = _ref.value, gap = _ref.gap, rest = _objectWithoutPropertiesLoose44(_ref, _excluded49);
  var formContext = (0, import_react82.useContext)(FormContext);
  var theme = (0, import_react82.useContext)(Ge) || defaultProps2.theme;
  var options = optionsProp.map(function(o2) {
    return typeof o2 !== "object" ? {
      disabled,
      id: rest.id ? rest.id + "-" + o2 : "" + o2,
      label: typeof o2 !== "string" ? JSON.stringify(o2) : o2,
      value: o2
    } : _extends80({
      disabled
    }, o2);
  });
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: defaultValue3 || ""
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react82.useState)(), focus = _useState[0], setFocus = _useState[1];
  var optionRefs = (0, import_react82.useRef)([]);
  var valueIndex = import_react82.default.useMemo(function() {
    var result;
    options.some(function(option, index) {
      if (option.value === value) {
        result = index;
        return true;
      }
      return false;
    });
    return result;
  }, [options, value]);
  (0, import_react82.useEffect)(function() {
    if (focus && !valueIndex) {
      optionRefs.current[0].focus();
    }
  }, [focus, valueIndex]);
  var onNext = function onNext2() {
    if (valueIndex !== void 0 && valueIndex < options.length - 1) {
      var nextIndex = valueIndex + 1;
      optionRefs.current[nextIndex].click();
    }
  };
  var onPrevious = function onPrevious2() {
    if (valueIndex > 0) {
      var nextIndex = valueIndex - 1;
      optionRefs.current[nextIndex].click();
    }
  };
  var onFocus = function onFocus2() {
    setTimeout(function() {
      setFocus(true);
    }, 1);
  };
  var onBlur = function onBlur2() {
    return setFocus(false);
  };
  return import_react82.default.createElement(Keyboard, {
    target: "document",
    onUp: focus ? onPrevious : void 0,
    onDown: focus ? onNext : void 0,
    onLeft: focus ? onPrevious : void 0,
    onRight: focus ? onNext : void 0
  }, import_react82.default.createElement(Box, _extends80({
    ref,
    role: "radiogroup"
  }, theme.radioButtonGroup.container, {
    gap: gap || (theme.radioButtonGroup.container && theme.radioButtonGroup.container.gap ? theme.radioButtonGroup.container.gap : "small")
  }, rest), options.map(function(_ref2, index) {
    var optionDisabled = _ref2.disabled, id = _ref2.id, label = _ref2.label, optionValue = _ref2.value, optionRest = _objectWithoutPropertiesLoose44(_ref2, _excluded214);
    var focusable = optionValue === value || value === void 0 && !index || value === "" && index === 0;
    return import_react82.default.createElement(RadioButton, _extends80({
      ref: function ref2(aRef) {
        optionRefs.current[index] = aRef;
      },
      key: optionValue,
      name,
      label: !children2 ? label : void 0,
      disabled: optionDisabled,
      checked: optionValue === value,
      focus: focus && focusable,
      focusIndicator,
      id,
      value: optionValue,
      onFocus,
      onBlur,
      onChange: function onChange(event) {
        setValue(optionValue);
        if (_onChange)
          _onChange(event);
      },
      tabIndex: focusable ? "0" : "-1"
    }, optionRest), children2 ? function(state) {
      return children2(optionsProp[index], state);
    } : null);
  })));
});
RadioButtonGroup.displayName = "RadioButtonGroup";
RadioButtonGroup.propTypes = RadioButtonGroupPropTypes;

// node_modules/grommet/es6/components/FormField/propTypes.js
var import_prop_types43 = __toESM(require_prop_types());
var PropType39 = {};
if (true) {
  PropType39 = {
    a11yTitle: import_prop_types43.default.string,
    component: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object]),
    contentProps: import_prop_types43.default.object,
    disabled: import_prop_types43.default.bool,
    error: import_prop_types43.default.oneOfType([import_prop_types43.default.string, import_prop_types43.default.node]),
    help: import_prop_types43.default.oneOfType([import_prop_types43.default.string, import_prop_types43.default.node]),
    htmlFor: import_prop_types43.default.string,
    info: import_prop_types43.default.oneOfType([import_prop_types43.default.string, import_prop_types43.default.node]),
    label: import_prop_types43.default.oneOfType([import_prop_types43.default.string, import_prop_types43.default.node]),
    name: import_prop_types43.default.string,
    margin: marginProp,
    pad: import_prop_types43.default.bool,
    required: import_prop_types43.default.oneOfType([import_prop_types43.default.bool, import_prop_types43.default.shape({
      indicator: import_prop_types43.default.bool
    })]),
    validate: import_prop_types43.default.oneOfType([import_prop_types43.default.shape({
      regexp: import_prop_types43.default.instanceOf(RegExp),
      message: import_prop_types43.default.oneOfType([import_prop_types43.default.string, import_prop_types43.default.node]),
      status: import_prop_types43.default.oneOf(["error", "info"])
    }), import_prop_types43.default.func, import_prop_types43.default.arrayOf(import_prop_types43.default.oneOfType([import_prop_types43.default.shape({
      regexp: import_prop_types43.default.instanceOf(RegExp),
      message: import_prop_types43.default.oneOfType([import_prop_types43.default.string, import_prop_types43.default.node]),
      status: import_prop_types43.default.oneOf(["error", "info"])
    }), import_prop_types43.default.func]))])
  };
}
var FormFieldPropTypes = PropType39;

// node_modules/grommet/es6/components/FormField/FormField.js
var _excluded50 = ["error", "info", "message", "type"];
var _excluded215 = ["component", "disabled", "invalid", "name", "onChange"];
var _excluded310 = ["children", "className", "component", "contentProps", "disabled", "error", "help", "htmlFor", "info", "label", "margin", "name", "onBlur", "onChange", "onFocus", "pad", "required", "style", "validate"];
function _extends81() {
  _extends81 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends81.apply(this, arguments);
}
function _objectWithoutPropertiesLoose45(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var grommetInputNames = ["CheckBox", "CheckBoxGroup", "TextInput", "Select", "MaskedInput", "TextArea", "DateInput", "FileInput", "RadioButtonGroup"];
var grommetInputPadNames = ["CheckBox", "CheckBoxGroup", "RadioButtonGroup", "RangeInput"];
var isGrommetInput = function isGrommetInput2(comp) {
  return comp && (grommetInputNames.indexOf(comp.displayName) !== -1 || grommetInputPadNames.indexOf(comp.displayName) !== -1);
};
var FormFieldBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FormField__FormFieldBox",
  componentId: "sc-m9hood-0"
})(["", " ", ""], function(props) {
  return props.focus && focusStyle({
    justBorder: true
  });
}, function(props) {
  return props.theme.formField && props.theme.formField.extend;
});
var FormFieldContentBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FormField__FormFieldContentBox",
  componentId: "sc-m9hood-1"
})(["", ""], function(props) {
  return props.focus && focusStyle({
    justBorder: true
  });
});
var StyledMessageContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FormField__StyledMessageContainer",
  componentId: "sc-m9hood-2"
})(["", ""], function(props) {
  return props.messageType && props.theme.formField[props.messageType].container && props.theme.formField[props.messageType].container.extend;
});
var RequiredText = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FormField__RequiredText",
  componentId: "sc-m9hood-3"
})(["color:inherit;font-weight:inherit;line-height:inherit;"]);
var Message2 = function Message3(_ref) {
  var error = _ref.error, info = _ref.info, message = _ref.message, type = _ref.type, rest = _objectWithoutPropertiesLoose45(_ref, _excluded50);
  var theme = (0, import_react83.useContext)(Ge) || defaultProps2.theme;
  if (message) {
    var icon;
    var containerProps;
    if (type) {
      icon = theme.formField[type] && theme.formField[type].icon;
      containerProps = theme.formField[type] && theme.formField[type].container;
    }
    var messageContent;
    if (typeof message === "string")
      messageContent = import_react83.default.createElement(Text, rest, message);
    else
      messageContent = import_react83.default.createElement(Box, rest, message);
    return icon || containerProps ? import_react83.default.createElement(StyledMessageContainer, _extends81({
      direction: "row",
      messageType: type
    }, containerProps), icon && import_react83.default.createElement(Box, {
      flex: false
    }, icon), messageContent) : messageContent;
  }
  return null;
};
var Input = function Input2(_ref2) {
  var component = _ref2.component, disabled = _ref2.disabled, invalid = _ref2.invalid, name = _ref2.name, _onChange = _ref2.onChange, rest = _objectWithoutPropertiesLoose45(_ref2, _excluded215);
  var formContext = (0, import_react83.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: rest.value
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var InputComponent = component || TextInput;
  var extraProps = isGrommetInput(InputComponent) ? {
    focusIndicator: false,
    onChange: _onChange,
    plain: true
  } : {
    value,
    onChange: function onChange(event) {
      setValue(event.value !== void 0 ? event.value : event.target.value);
      if (_onChange)
        _onChange(event);
    }
  };
  return import_react83.default.createElement(InputComponent, _extends81({
    name,
    disabled,
    "aria-invalid": invalid || void 0
  }, rest, extraProps));
};
var debounce = function debounce2(func, wait) {
  var timeout;
  return function executedFunction() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var later = function later2() {
      timeout = null;
      func.apply(void 0, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
};
var FormField = (0, import_react83.forwardRef)(function(_ref3, ref) {
  var children2 = _ref3.children, className = _ref3.className, component = _ref3.component, contentProps = _ref3.contentProps, disabled = _ref3.disabled, errorProp = _ref3.error, help = _ref3.help, htmlFor = _ref3.htmlFor, infoProp = _ref3.info, label = _ref3.label, margin = _ref3.margin, name = _ref3.name, _onBlur = _ref3.onBlur, onChange = _ref3.onChange, _onFocus = _ref3.onFocus, pad = _ref3.pad, required = _ref3.required, style = _ref3.style, validate3 = _ref3.validate, rest = _objectWithoutPropertiesLoose45(_ref3, _excluded310);
  var theme = (0, import_react83.useContext)(Ge) || defaultProps2.theme;
  var formContext = (0, import_react83.useContext)(FormContext);
  var _formContext$useFormF = formContext.useFormField({
    disabled,
    error: errorProp,
    info: infoProp,
    name,
    required,
    validate: validate3
  }), error = _formContext$useFormF.error, info = _formContext$useFormF.info, inForm = _formContext$useFormF.inForm, contextOnBlur = _formContext$useFormF.onBlur, contextOnChange = _formContext$useFormF.onChange;
  var _useState = (0, import_react83.useState)(), focus = _useState[0], setFocus = _useState[1];
  var formFieldRef = useForwardedRef(ref);
  var formFieldTheme = theme.formField;
  var themeBorder = formFieldTheme.border;
  var wantContentPad = component && (component === CheckBox || component === CheckBoxGroup || component === RadioButtonGroup);
  var contents = themeBorder && children2 && import_react83.Children.map(children2, function(child) {
    if (child && child.type && grommetInputPadNames.indexOf(child.type.displayName) !== -1) {
      wantContentPad = true;
    }
    if (child && child.type && grommetInputNames.indexOf(child.type.displayName) !== -1 && child.props.plain === void 0 && child.props.focusIndicator === void 0) {
      return (0, import_react83.cloneElement)(child, {
        plain: true,
        focusIndicator: false
      });
    }
    return child;
  }) || children2;
  var containerRest = rest;
  if (inForm) {
    if (!contents)
      containerRest = {};
    contents = contents || import_react83.default.createElement(Input, _extends81({
      component,
      disabled,
      invalid: !!error,
      name,
      label: component === CheckBox ? label : void 0
    }, rest));
  }
  var themeContentProps = _extends81({}, formFieldTheme.content);
  if (!pad && !wantContentPad) {
    themeContentProps.pad = void 0;
  }
  if (themeBorder && themeBorder.position === "inner") {
    if (error && formFieldTheme.error) {
      themeContentProps.background = formFieldTheme.error.background;
    } else if (disabled && formFieldTheme.disabled) {
      themeContentProps.background = formFieldTheme.disabled.background;
    }
  }
  var isFileInputComponent;
  if (children2 && import_react83.Children.forEach(children2, function(child) {
    if (child && child.type && "FileInput".indexOf(child.type.displayName) !== -1)
      isFileInputComponent = true;
  }))
    ;
  if (component && component.displayName === "FileInput" && !isFileInputComponent) {
    isFileInputComponent = true;
  }
  if (!themeBorder) {
    contents = import_react83.default.createElement(Box, _extends81({}, themeContentProps, contentProps), contents);
  }
  var borderColor;
  if (disabled && formFieldTheme.disabled.border && formFieldTheme.disabled.border.color) {
    borderColor = formFieldTheme.disabled.border.color;
  } else if (error && themeBorder && themeBorder.error.color || error && formFieldTheme.error && formFieldTheme.error.border) {
    if (themeBorder.error.color && formFieldTheme.error.border === void 0) {
      borderColor = themeBorder.error.color || "status-critical";
    } else if (formFieldTheme.error.border && formFieldTheme.error.border.color) {
      borderColor = formFieldTheme.error.border.color || "status-critical";
    }
  } else if (focus && formFieldTheme.focus && formFieldTheme.focus.border && formFieldTheme.focus.border.color) {
    borderColor = formFieldTheme.focus.border.color;
  } else {
    borderColor = themeBorder && themeBorder.color || "border";
  }
  var labelStyle = _extends81({}, formFieldTheme.label);
  if (disabled) {
    labelStyle.color = formFieldTheme.disabled && formFieldTheme.disabled.label ? formFieldTheme.disabled.label.color : labelStyle.color;
  }
  var abut;
  var abutMargin;
  var outerStyle = style;
  if (themeBorder) {
    var innerProps = themeBorder.position === "inner" ? {
      border: _extends81({}, themeBorder, {
        size: isFileInputComponent ? theme.fileInput.border.size : void 0,
        style: isFileInputComponent ? theme.fileInput.border.style : void 0,
        side: isFileInputComponent ? theme.fileInput.border.side : themeBorder.side || "bottom",
        color: borderColor
      }),
      round: formFieldTheme.round,
      focus: isFileInputComponent ? void 0 : focus
    } : {};
    contents = import_react83.default.createElement(FormFieldContentBox, _extends81({}, themeContentProps, innerProps, contentProps), contents);
    var mergedMargin = margin || formFieldTheme.margin;
    abut = themeBorder.position === "outer" && (themeBorder.side === "all" || themeBorder.side === "horizontal" || !themeBorder.side) && !(mergedMargin && (typeof mergedMargin === "string" && mergedMargin !== "none" || mergedMargin.bottom && mergedMargin.bottom !== "none" || mergedMargin.horizontal && mergedMargin.horizontal !== "none"));
    if (abut) {
      abutMargin = {
        bottom: "-1px"
      };
      if (margin) {
        abutMargin = margin;
      } else if (themeBorder.size) {
        abutMargin = {
          bottom: "-" + parseMetricToNum(theme.global.borderSize[themeBorder.size] || themeBorder.size) + "px"
        };
      }
      outerStyle = _extends81({
        position: focus ? "relative" : void 0,
        zIndex: focus ? 10 : void 0
      }, style);
    }
  }
  var outerBackground;
  if (themeBorder && themeBorder.position === "outer") {
    if (error && formFieldTheme.error && formFieldTheme.error.background) {
      outerBackground = formFieldTheme.error.background;
    } else if (focus && formFieldTheme.focus && formFieldTheme.focus.background && formFieldTheme.focus.background.color) {
      outerBackground = formFieldTheme.focus.background.color;
    } else if (disabled && formFieldTheme.disabled && formFieldTheme.disabled.background) {
      outerBackground = formFieldTheme.disabled.background;
    }
  }
  var outerProps = themeBorder && themeBorder.position === "outer" ? {
    border: _extends81({}, themeBorder, {
      color: borderColor
    }),
    round: formFieldTheme.round,
    focus
  } : {};
  var requiredIndicator = theme.formField.label.requiredIndicator;
  if (requiredIndicator === true)
    requiredIndicator = import_react83.default.createElement(RequiredText, {
      a11yTitle: "required"
    }, "*");
  var showRequiredIndicator = required && requiredIndicator;
  if (typeof required === "object" && required.indicator === false)
    showRequiredIndicator = false;
  return import_react83.default.createElement(FormFieldBox, _extends81({
    ref: formFieldRef,
    className,
    background: outerBackground,
    margin: abut ? abutMargin : margin || _extends81({}, formFieldTheme.margin)
  }, outerProps, {
    style: outerStyle,
    onFocus: function onFocus(event) {
      setFocus(containsFocus(formFieldRef.current) && shouldKeepFocus());
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (contextOnBlur)
        contextOnBlur(event);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: contextOnChange || onChange ? function(event) {
      event.persist();
      if (onChange)
        onChange(event);
      if (contextOnChange) {
        var debouncedFn = debounce(function() {
          contextOnChange(event);
        }, 500);
        debouncedFn();
      }
    } : void 0
  }, containerRest), label && component !== CheckBox || help ? import_react83.default.createElement(import_react83.default.Fragment, null, label && component !== CheckBox && import_react83.default.createElement(Text, _extends81({
    as: "label",
    htmlFor
  }, labelStyle), label, showRequiredIndicator ? requiredIndicator : void 0), import_react83.default.createElement(Message2, _extends81({
    message: help
  }, formFieldTheme.help))) : void 0, contents, import_react83.default.createElement(Message2, _extends81({
    type: "error",
    message: error
  }, formFieldTheme.error)), import_react83.default.createElement(Message2, _extends81({
    type: "info",
    message: info
  }, formFieldTheme.info)));
});
FormField.displayName = "FormField";
FormField.propTypes = FormFieldPropTypes;

// node_modules/grommet/es6/components/Grommet/Grommet.js
var import_react85 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/themes/grommet.js
init_styled_components_browser_esm();
var grommet = deepFreeze({
  global: {
    colors: {
      background: {
        light: "#ffffff",
        dark: "#000000"
      }
    },
    font: {
      family: '-apple-system,\n         BlinkMacSystemFont, \n         "Segoe UI", \n         Roboto, \n         Oxygen, \n         Ubuntu, \n         Cantarell, \n         "Fira Sans", \n         "Droid Sans",  \n         "Helvetica Neue", \n         Arial, sans-serif,  \n         "Apple Color Emoji", \n         "Segoe UI Emoji", \n         "Segoe UI Symbol"'
    }
  },
  button: {
    extend: Ce(["", ""], function(props) {
      return !props.plain && "font-weight: bold;";
    })
  }
});

// node_modules/grommet/es6/themes/dark.js
init_styled_components_browser_esm();
var accentColors2 = ["#FD6FFF", "#60EB9F", "#60EBE1", "#FFCA58"];
var neutralColors2 = ["#EB6060", "#01C781", "#6095EB", "#FFB200"];
var statusColors2 = {
  critical: "#FF3333",
  error: "#FF3333",
  warning: "#F7E464",
  ok: "#7DD892",
  unknown: "#a8a8a8",
  disabled: "#a8a8a8"
};
var backgroundColor = "#111111";
var colors2 = {
  active: "rgba(102, 102, 102, 0.5)",
  background: backgroundColor,
  black: "#000000",
  brand: "#FD6FFF",
  control: {
    dark: "#FFCA58",
    light: "#403216"
  },
  focus: "#FFCA58",
  icon: {
    dark: "#f8f8f8",
    light: "#666666"
  },
  placeholder: "#AAAAAA",
  text: {
    dark: "#eeeeee",
    light: "#444444"
  },
  white: "#FFFFFF"
};
var colorArray3 = function colorArray4(array, prefix) {
  return array.forEach(function(color, index) {
    colors2[prefix + "-" + (index + 1)] = color;
  });
};
colorArray3(accentColors2, "accent");
colorArray3(neutralColors2, "neutral");
Object.keys(statusColors2).forEach(function(color) {
  colors2["status-" + color] = statusColors2[color];
});
var dark = deepFreeze({
  global: {
    colors: colors2,
    drop: {
      background: "#333333"
    },
    focus: {
      border: {
        color: Ce(["", ";"], function(props) {
          return normalizeColor("focus", props.theme);
        }),
        width: "2px"
      }
    },
    font: {
      family: "Arial"
    },
    input: {
      weight: 700
    }
  },
  anchor: {
    color: "control"
  },
  layer: {
    background: backgroundColor,
    overlay: {
      background: "rgba(48, 48, 48, 0.5)"
    }
  }
});

// node_modules/grommet/es6/components/Grommet/StyledGrommet.js
init_styled_components_browser_esm();
var fullStyle = function fullStyle2(full) {
  if (full === "min")
    return Ce(["min-height:100vh;"]);
  return Ce(["width:100vw;height:100vh;overflow:auto;"]);
};
var StyledGrommet = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledGrommet",
  componentId: "sc-19lkkz7-0"
})(["", " ", " ", " ", " ", ""], function(props) {
  return !props.plain && baseStyle;
}, function(props) {
  return props.full && fullStyle(props.full);
}, function(props) {
  return props.theme.global.font.face;
}, function(props) {
  return props.theme.grommet.extend;
}, function(props) {
  return props.cssVars && Object.keys(props.theme.global.colors).filter(function(k2) {
    return typeof props.theme.global.colors[k2] === "string";
  }).map(function(k2) {
    return "--" + k2 + ": " + props.theme.global.colors[k2] + ";";
  }).join("\n");
});
StyledGrommet.defaultProps = {};
Object.setPrototypeOf(StyledGrommet.defaultProps, defaultProps2);

// node_modules/grommet/es6/contexts/OptionsContext.js
var import_react84 = __toESM(require_react());
var OptionsContext = import_react84.default.createContext({});

// node_modules/grommet/es6/components/Grommet/propTypes.js
var import_prop_types44 = __toESM(require_prop_types());
var PropType40 = {};
if (true) {
  PropType40 = {
    background: backgroundDoc,
    dir: import_prop_types44.default.oneOf(["rtl"]),
    full: import_prop_types44.default.oneOfType([import_prop_types44.default.bool, import_prop_types44.default.oneOf(["min"])]),
    options: import_prop_types44.default.shape({
      layer: import_prop_types44.default.shape({
        singleId: import_prop_types44.default.bool
      })
    }),
    plain: import_prop_types44.default.bool,
    cssVars: import_prop_types44.default.bool,
    theme: import_prop_types44.default.object,
    themeMode: import_prop_types44.default.oneOf(["dark", "light"]),
    userAgent: import_prop_types44.default.string,
    containerTarget: import_prop_types44.default.object,
    messages: import_prop_types44.default.shape({
      format: import_prop_types44.default.func,
      messages: import_prop_types44.default.shape({
        fileInput: import_prop_types44.default.shape({
          browse: import_prop_types44.default.string,
          dropPrompt: import_prop_types44.default.string,
          dropPromptMultiple: import_prop_types44.default.string,
          files: import_prop_types44.default.string,
          remove: import_prop_types44.default.string,
          removeAll: import_prop_types44.default.string
        }),
        form: import_prop_types44.default.shape({
          invalid: import_prop_types44.default.string,
          required: import_prop_types44.default.string
        }),
        menu: import_prop_types44.default.shape({
          openMenu: import_prop_types44.default.string,
          closeMenu: import_prop_types44.default.string
        }),
        rangeSelector: import_prop_types44.default.shape({
          lower: import_prop_types44.default.string,
          upper: import_prop_types44.default.string
        }),
        select: import_prop_types44.default.shape({
          multiple: import_prop_types44.default.string
        }),
        skipLinks: import_prop_types44.default.shape({
          skipTo: import_prop_types44.default.string
        }),
        tabs: import_prop_types44.default.shape({
          tabContents: import_prop_types44.default.string
        }),
        textInput: import_prop_types44.default.shape({
          enterSelect: import_prop_types44.default.string,
          suggestionsCount: import_prop_types44.default.string,
          suggestionsExist: import_prop_types44.default.string,
          suggestionIsOpen: import_prop_types44.default.string
        }),
        video: import_prop_types44.default.shape({
          closeMenu: import_prop_types44.default.string,
          fullScreen: import_prop_types44.default.string,
          progressMeter: import_prop_types44.default.string,
          scrubber: import_prop_types44.default.string,
          openMenu: import_prop_types44.default.string,
          pauseButton: import_prop_types44.default.string,
          playButton: import_prop_types44.default.string,
          volumeDown: import_prop_types44.default.string,
          volumeUp: import_prop_types44.default.string
        })
      })
    })
  };
}
var GrommetPropTypes = PropType40;

// node_modules/grommet/es6/components/Grommet/Grommet.js
var _excluded51 = ["children", "full", "containerTarget", "theme", "options", "messages"];
function _extends82() {
  _extends82 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends82.apply(this, arguments);
}
function _objectWithoutPropertiesLoose46(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var FullGlobalStyle = We(["body{margin:0;}"]);
var deviceResponsive = function deviceResponsive2(userAgent, theme) {
  if (userAgent) {
    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobile))/i.test(userAgent)) {
      return getDeviceBreakpoint("tablet", theme);
    }
    if (/Mobile|iPhone|Android/.test(userAgent)) {
      return getDeviceBreakpoint("phone", theme);
    }
    return getDeviceBreakpoint("computer", theme);
  }
  return void 0;
};
var defaultOptions = {};
var Grommet = (0, import_react85.forwardRef)(function(props, ref) {
  var children2 = props.children, full = props.full, _props$containerTarge = props.containerTarget, containerTarget = _props$containerTarge === void 0 ? typeof document === "object" ? document.body : void 0 : _props$containerTarge, themeProp = props.theme, _props$options = props.options, options = _props$options === void 0 ? defaultOptions : _props$options, messagesProp = props.messages, rest = _objectWithoutPropertiesLoose46(props, _excluded51);
  var background = props.background, dir = props.dir, themeMode = props.themeMode, userAgent = props.userAgent;
  var _useState = (0, import_react85.useState)(), stateResponsive = _useState[0], setResponsive = _useState[1];
  var _useState2 = (0, import_react85.useState)([]), roots = _useState2[0], setRoots = _useState2[1];
  var theme = (0, import_react85.useMemo)(function() {
    var nextTheme = deepMerge(base, themeProp || {});
    if (themeProp && themeProp.menu && themeProp.menu.drop && themeProp.menu.drop.align) {
      delete nextTheme.menu.drop.align;
      nextTheme.menu.drop.align = themeProp.menu.drop.align;
    }
    var themeBackground = nextTheme.global.colors.background;
    nextTheme.dark = (themeMode || nextTheme.defaultMode) === "dark";
    var color = normalizeColor(background || themeBackground, nextTheme);
    nextTheme.dark = backgroundIsDark(color, nextTheme);
    nextTheme.baseBackground = background || themeBackground;
    nextTheme.background = nextTheme.baseBackground;
    if (dir) {
      nextTheme.dir = dir;
    }
    return nextTheme;
  }, [background, dir, themeMode, themeProp]);
  var messages = (0, import_react85.useMemo)(function() {
    var nextMessages = deepMerge(default_default, (messagesProp == null ? void 0 : messagesProp.messages) || {});
    return {
      messages: nextMessages,
      format: function format3(opts) {
        var message = (messagesProp == null ? void 0 : messagesProp.format) && messagesProp.format(opts);
        return typeof message !== "undefined" ? message : _format(opts, nextMessages);
      }
    };
  }, [messagesProp]);
  (0, import_react85.useEffect)(function() {
    var onResize = function onResize2() {
      setResponsive(getBreakpoint(document.body.clientWidth, theme));
    };
    window.addEventListener("resize", onResize);
    onResize();
    return function() {
      window.removeEventListener("resize", onResize);
    };
  }, [theme]);
  var responsive = stateResponsive || deviceResponsive(userAgent, theme) || theme.global.deviceBreakpoints.tablet;
  var grommetRef = useForwardedRef(ref);
  (0, import_react85.useEffect)(function() {
    if (grommetRef.current)
      setRoots([grommetRef.current]);
  }, [grommetRef]);
  return import_react85.default.createElement(Ge.Provider, {
    value: theme
  }, import_react85.default.createElement(ResponsiveContext.Provider, {
    value: responsive
  }, import_react85.default.createElement(RootsContext.Provider, {
    value: roots
  }, import_react85.default.createElement(ContainerTargetContext.Provider, {
    value: containerTarget
  }, import_react85.default.createElement(OptionsContext.Provider, {
    value: options
  }, import_react85.default.createElement(MessageContext.Provider, {
    value: messages
  }, import_react85.default.createElement(StyledGrommet, _extends82({
    full
  }, rest, {
    ref: grommetRef
  }), children2), full && import_react85.default.createElement(FullGlobalStyle, null)))))));
});
Grommet.displayName = "Grommet";
Grommet.propTypes = GrommetPropTypes;

// node_modules/grommet/es6/components/Image/Image.js
var import_react86 = __toESM(require_react());

// node_modules/grommet/es6/components/Image/StyledImage.js
init_styled_components_browser_esm();
var FIT_MAP = {
  cover: "cover",
  contain: "contain"
};
var fitStyle = Ce(["flex:1 1;overflow:hidden;object-fit:", ";"], function(props) {
  return FIT_MAP[props.fit];
});
var StyledImage = styled_components_browser_esm_default.img.withConfig({
  displayName: "StyledImage",
  componentId: "sc-ey4zx9-0"
})(["", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.fit && fitStyle;
}, function(props) {
  return props.fillProp && fillStyle(props.fillProp);
}, function(props) {
  return props.theme.image && props.theme.image.extend;
}, function(props) {
  return props.opacityProp && "opacity: " + (props.opacityProp === true ? props.theme.global.opacity.medium : props.theme.global.opacity[props.opacityProp] || props.opacityProp) + ";\n  ";
});
StyledImage.defaultProps = {};
Object.setPrototypeOf(StyledImage.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Image/propTypes.js
var import_prop_types45 = __toESM(require_prop_types());
function _extends83() {
  _extends83 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends83.apply(this, arguments);
}
var PropType41 = {};
if (true) {
  PropType41 = _extends83({}, genericProps, {
    fill: import_prop_types45.default.oneOfType([import_prop_types45.default.oneOf(["horizontal", "vertical"]), import_prop_types45.default.bool]),
    fit: import_prop_types45.default.oneOf(["cover", "contain"]),
    fallback: import_prop_types45.default.string,
    opacity: import_prop_types45.default.oneOfType([import_prop_types45.default.oneOf(["weak", "medium", "strong"]), import_prop_types45.default.string, import_prop_types45.default.bool])
  });
}
var ImagePropTypes = PropType41;

// node_modules/grommet/es6/components/Image/Image.js
var _excluded52 = ["a11yTitle", "fallback", "onError", "opacity", "fill", "src"];
function _extends84() {
  _extends84 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends84.apply(this, arguments);
}
function _objectWithoutPropertiesLoose47(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Image = (0, import_react86.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, fallback = _ref.fallback, onError = _ref.onError, opacity = _ref.opacity, fill = _ref.fill, src = _ref.src, rest = _objectWithoutPropertiesLoose47(_ref, _excluded52);
  var _useState = (0, import_react86.useState)(false), isFallbackInUse = _useState[0], setFallbackInUse = _useState[1];
  var handleError = function handleError2(event) {
    if (onError)
      onError(event);
    if (!isFallbackInUse && fallback && fallback !== "") {
      event.target.src = fallback;
      setFallbackInUse(true);
    }
  };
  var handleOnLoad = function handleOnLoad2() {
    setFallbackInUse(false);
  };
  var extraProps = {
    onError: (onError || fallback) && handleError,
    onLoad: handleOnLoad
  };
  return import_react86.default.createElement(StyledImage, _extends84({
    "aria-label": a11yTitle
  }, rest, extraProps, {
    ref,
    opacityProp: opacity,
    fillProp: fill,
    src: src === void 0 ? "" : src
  }));
});
Image.displayName = "Image";
Image.propTypes = ImagePropTypes;

// node_modules/grommet/es6/components/Layer/Layer.js
var import_react88 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/grommet/es6/components/Layer/LayerContainer.js
var import_react87 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Layer/StyledLayer.js
init_styled_components_browser_esm();
var hiddenPositionStyle = Ce(["left:-100%;right:100%;z-index:-1;position:fixed;"]);
var desktopLayerStyle = "\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n";
var responsiveLayerStyle = "\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n";
var StyledLayer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledLayer",
  componentId: "sc-rmtehz-0"
})(["", " background:transparent;position:relative;z-index:", ";pointer-events:none;outline:none;", " ", ";"], baseStyle, function(props) {
  return props.theme.layer.zIndex;
}, function(props) {
  if (props.position === "hidden") {
    return hiddenPositionStyle;
  }
  var styles = [];
  styles.push(desktopLayerStyle);
  if (props.responsive && props.theme.layer.responsiveBreakpoint && !props.layerTarget) {
    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];
    styles.push(breakpointStyle(breakpoint, responsiveLayerStyle));
  }
  return styles;
}, function(props) {
  return props.theme.layer && props.theme.layer.extend;
});
StyledLayer.defaultProps = {};
Object.setPrototypeOf(StyledLayer.defaultProps, defaultProps2);
var StyledOverlay = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledLayer__StyledOverlay",
  componentId: "sc-rmtehz-1"
})(["position:absolute;", " top:0px;left:0px;right:0px;bottom:0px;", " pointer-events:all;will-change:transform;"], function(props) {
  if (props.responsive && props.theme.layer.responsiveBreakpoint) {
    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];
    return breakpointStyle(breakpoint, "position: relative;");
  }
  return "";
}, function(props) {
  return !props.plain && props.theme.layer.overlay.background && backgroundStyle(props.theme.layer.overlay.background, props.theme);
});
var getMargin = function getMargin2(margin, theme, position) {
  var axis = position.indexOf("top") !== -1 || position.indexOf("bottom") !== -1 ? "vertical" : "horizontal";
  var marginValue = margin[position] || margin[axis] || margin;
  var marginApplied = theme.global.edgeSize[marginValue] || marginValue;
  var marginInTheme = !!theme.global.edgeSize[marginValue];
  return !marginInTheme && typeof marginValue !== "string" ? 0 : parseMetricToNum(marginApplied);
};
var getBounds = function getBounds2(bounds2, margin, theme, position) {
  if (position === void 0) {
    position = void 0;
  }
  if (position) {
    return bounds2[position] + getMargin(margin, theme, position);
  }
  return {
    bottom: bounds2.bottom + getMargin(margin, theme, "bottom"),
    end: bounds2.right + getMargin(margin, theme, "end"),
    left: bounds2.left + getMargin(margin, theme, "left"),
    right: bounds2.right + getMargin(margin, theme, "right"),
    start: bounds2.left + getMargin(margin, theme, "start"),
    top: bounds2.top + getMargin(margin, theme, "top")
  };
};
var KEYFRAMES = {
  center: {
    vertical: Ue(["0%{transform:translateX(-50%) scale(0.8);}100%{transform:translateX(-50%) scale(1);}"]),
    horizontal: Ue(["0%{transform:translateY(-50%) scale(0.8);}100%{transform:translateY(-50) scale(1);}"]),
    "true": Ue(["0%{transform:scale(0.8);}100%{transform:scale(1);}"]),
    "false": Ue(["0%{transform:translate(-50%,-50%) scale(0.8);}100%{transform:translate(-50%,-50%) scale(1);}"])
  },
  top: {
    vertical: Ue(["0%{transform:translate(-50%,-100%);}100%{transform:translate(-50%,0);}"]),
    horizontal: Ue(["0%{transform:translateY(-100%);}100%{transform:translateY(0);}"]),
    "true": Ue(["0%{transform:translateY(-100%);}100%{transform:translateY(0);}"]),
    "false": Ue(["0%{transform:translate(-50%,-100%);}100%{transform:translate(-50%,0);}"])
  },
  bottom: {
    vertical: Ue(["0%{transform:translate(-50%,100%);}100%{transform:translate(-50%,0);}"]),
    horizontal: Ue(["0%{transform:translateY(100%);}100%{transform:translateY(0);}"]),
    "true": Ue(["0%{transform:translateY(100%);}100%{transform:translateY(0);}"]),
    "false": Ue(["0%{transform:translate(-50%,100%);}100%{transform:translate(-50%,0);}"])
  },
  left: {
    vertical: Ue(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    horizontal: Ue(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": Ue(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    "false": Ue(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"])
  },
  right: {
    vertical: Ue(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    horizontal: Ue(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": Ue(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    "false": Ue(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"])
  },
  start: {
    vertical: Ue(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    horizontal: Ue(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": Ue(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    "false": Ue(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"])
  },
  end: {
    vertical: Ue(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    horizontal: Ue(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": Ue(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    "false": Ue(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"])
  }
};
var animationDuration = 200;
var getAnimationStyle = function getAnimationStyle2(props, position, full) {
  var animation = props.animation !== void 0 ? props.animation : props.animate;
  if (animation === void 0)
    animation = "slide";
  var keys;
  if (animation === "slide" || animation === true) {
    keys = KEYFRAMES[position][full];
  } else if (animation === "fadeIn") {
    keys = Ue(["0%{opacity:0}100%{opacity:1}"]);
  }
  return keys ? Ce(["animation:", " ", "s ease-in-out forwards;"], keys, animationDuration / 1e3) : "";
};
var POSITIONS = {
  center: {
    vertical: function vertical(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:50%;transform:translateX(-50%);", ""], bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "center", "vertical");
      });
    },
    horizontal: function horizontal(bounds2) {
      return Ce(["left:", "px;right:", "px;top:50%;transform:translateY(-50%);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "center", "horizontal");
      });
    },
    "true": function _true(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "center", "true");
      });
    },
    "false": function _false() {
      return Ce(["top:50%;left:50%;transform:translate(-50%,-50%);", ""], function(props) {
        return getAnimationStyle(props, "center", "false");
      });
    }
  },
  top: {
    vertical: function vertical2(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:50%;transform:translate(-50%,0%);", ""], bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "top", "vertical");
      });
    },
    horizontal: function horizontal2(bounds2) {
      return Ce(["left:", "px;right:", "px;top:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.right, bounds2.top, function(props) {
        return getAnimationStyle(props, "top", "horizontal");
      });
    },
    "true": function _true2(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateY(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "false": function _false2(bounds2) {
      return Ce(["top:", "px;left:50%;transform:translate(-50%,0);", ""], bounds2.top, function(props) {
        return getAnimationStyle(props, "top", "false");
      });
    }
  },
  bottom: {
    vertical: function vertical3(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:50%;transform:translate(-50%,0);", ""], bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "vertical");
      });
    },
    horizontal: function horizontal3(bounds2) {
      return Ce(["left:", "px;right:", "px;bottom:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "horizontal");
      });
    },
    "true": function _true3(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateY(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "false": function _false3(bounds2) {
      return Ce(["bottom:", "px;left:50%;transform:translate(-50%,0);", ""], bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "false");
      });
    }
  },
  left: {
    vertical: function vertical4(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "left", "vertical");
      });
    },
    horizontal: function horizontal4(bounds2) {
      return Ce(["left:", "px;right:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "left", "horizontal");
      });
    },
    "true": function _true4(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "left", "true");
      });
    },
    "false": function _false4(bounds2) {
      return Ce(["left:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.left, function(props) {
        return getAnimationStyle(props, "left", "false");
      });
    }
  },
  right: {
    vertical: function vertical5(bounds2) {
      return Ce(["top:", "px;bottom:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "vertical");
      });
    },
    horizontal: function horizontal5(bounds2) {
      return Ce(["left:", "px;right:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "horizontal");
      });
    },
    "true": function _true5(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "true");
      });
    },
    "false": function _false5(bounds2) {
      return Ce(["right:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "false");
      });
    }
  },
  start: {
    vertical: function vertical6(bounds2) {
      return Ce(["top:", "px;bottom:", "px;inset-inline-start:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.start, function(props) {
        return getAnimationStyle(props, "start", "vertical");
      });
    },
    horizontal: function horizontal6(bounds2) {
      return Ce(["inset-inline-start:", "px;inset-inline-end:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "start", "horizontal");
      });
    },
    "true": function _true6(bounds2) {
      return Ce(["top:", "px;bottom:", "px;inset-inline-start:", "px;inset-inline-end:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "start", "true");
      });
    },
    "false": function _false6(bounds2) {
      return Ce(["inset-inline-start:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.start, function(props) {
        return getAnimationStyle(props, "start", "false");
      });
    }
  },
  end: {
    vertical: function vertical7(bounds2) {
      return Ce(["top:", "px;bottom:", "px;inset-inline-end:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "vertical");
      });
    },
    horizontal: function horizontal7(bounds2) {
      return Ce(["inset-inline-start:", "px;inset-inline-end:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "horizontal");
      });
    },
    "true": function _true7(bounds2) {
      return Ce(["top:", "px;bottom:", "px;inset-inline-start:", "px;inset-inline-end:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "true");
      });
    },
    "false": function _false7(bounds2) {
      return Ce(["inset-inline-end:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "false");
      });
    }
  },
  "top-right": {
    vertical: function vertical8(bounds2) {
      return Ce(["top:", "px;bottom:", "px;right:", "px;transform:translateX(0);", ";"], bounds2.top, bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    horizontal: function horizontal8(bounds2) {
      return Ce(["left:", "px;right:", "px;top:0;transform:translateX(0);", ";"], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "true": function _true8(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ";"], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "false": function _false8(bounds2) {
      return Ce(["top:", "px;right:", "px;transform:translateY(0);", ";"], bounds2.top, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    }
  },
  "top-left": {
    vertical: function vertical9(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    horizontal: function horizontal9(bounds2) {
      return Ce(["left:", "px;right:", "px;top:0;transform:translateX(0);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "true": function _true9(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "false": function _false9(bounds2) {
      return Ce(["top:", "px;left:", "px;transform:translateY(0);", ""], bounds2.top, bounds2.left, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    }
  },
  "bottom-right": {
    vertical: function vertical10(bounds2) {
      return Ce(["top:", "px;bottom:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    horizontal: function horizontal10(bounds2) {
      return Ce(["left:", "px;right:", "px;bottom:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.right, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "true": function _true10(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "false": function _false10(bounds2) {
      return Ce(["bottom:", "px;right:", "px;transform:translateY(0);", ""], bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    }
  },
  "bottom-left": {
    vertical: function vertical11(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    horizontal: function horizontal11(bounds2) {
      return Ce(["left:", "px;right:", "px;bottom:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.right, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "true": function _true11(bounds2) {
      return Ce(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "false": function _false11(bounds2) {
      return Ce(["bottom:", "px;left:", "px;transform:translateY(0);", ""], bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    }
  }
};
var roundStyle3 = function roundStyle4(data, theme, position, margin) {
  var styles = [];
  var size = data === true ? "medium" : data;
  var round3 = theme.global.edgeSize[size] || size;
  var customCSS = round3.split(" ").length > 1;
  if (margin === "none" && !customCSS && theme.layer.border.intelligentRounding === true) {
    if (position === "bottom") {
      styles.push(Ce(["border-radius:", " ", " 0 0;"], round3, round3));
    } else if (position === "bottom-left") {
      styles.push(Ce(["border-radius:0 ", " 0 0;"], round3));
    } else if (position === "bottom-right") {
      styles.push(Ce(["border-radius:", " 0 0 0;"], round3));
    } else if (position === "end") {
      styles.push(Ce(["border-start-start-radius:", ";border-end-start-radius:", ";"], round3, round3));
    } else if (position === "left") {
      styles.push(Ce(["border-radius:0 ", " ", " 0;"], round3, round3));
    } else if (position === "right") {
      styles.push(Ce(["border-radius:", " 0 0 ", ";"], round3, round3));
    } else if (position === "start") {
      styles.push(Ce(["border-end-end-radius:", ";border-start-end-radius:", ";"], round3, round3));
    } else if (position === "top") {
      styles.push(Ce(["border-radius:0 0 ", " ", ";"], round3, round3));
    } else if (position === "top-left") {
      styles.push(Ce(["border-radius:0 0 ", " 0;"], round3));
    } else if (position === "top-right") {
      styles.push(Ce(["border-radius:0 0 0 ", ";"], round3));
    } else {
      styles.push(Ce(["border-radius:", ";"], round3));
    }
  } else {
    styles.push(Ce(["border-radius:", ";"], round3));
  }
  return styles;
};
var bounds = {
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var desktopContainerStyle = Ce(["", " max-height:", ";max-width:", ";", ";", ";"], function(props) {
  if (!props.modal && props.position === "hidden") {
    return hiddenPositionStyle;
  }
  return Ce(["position:", ";"], props.modal || props.layerTarget ? "absolute" : "fixed");
}, function(props) {
  return "calc(100% - " + getBounds(bounds, props.margin, props.theme, "top") + "px - " + getBounds(bounds, props.margin, props.theme, "bottom") + "px)";
}, function(props) {
  return "calc(100% - " + getBounds(bounds, props.margin, props.theme, "left") + "px - " + getBounds(bounds, props.margin, props.theme, "right") + "px)";
}, function(props) {
  return props.plain || props.full && props.margin === "none" ? "border-radius: 0;" : roundStyle3(props.theme.layer.border.radius, props.theme, props.position, props.margin);
}, function(props) {
  return props.position !== "hidden" && POSITIONS[props.position][props.full](getBounds(bounds, props.margin, props.theme), bounds) || "";
});
var responsiveContainerStyle = function responsiveContainerStyle2(props) {
  return Ce(["position:relative;max-height:none;max-width:none;border-radius:0;height:", ";width:", ";"], !props.layerTarget ? "100vh" : "100%", !props.layerTarget ? "100vw" : "100%");
};
var elevationStyle3 = Ce(["box-shadow:", ";"], function(props) {
  return props.theme.global.elevation[props.theme.dark ? "dark" : "light"][props.theme.layer.container.elevation];
});
var StyledContainer3 = styled_components_browser_esm_default.div.withConfig({
  shouldForwardProp: function shouldForwardProp4(prop, defaultValidatorFn) {
    return !["elevation"].includes(prop) && defaultValidatorFn(prop);
  }
}).withConfig({
  displayName: "StyledLayer__StyledContainer",
  componentId: "sc-rmtehz-2"
})(["", " display:flex;flex-direction:column;min-height:", ";", " outline:none;pointer-events:all;z-index:", ";", " ", " ", ";", ";"], function(props) {
  return !props.modal ? baseStyle : "";
}, function(props) {
  return props.theme.global.size.xxsmall;
}, function(props) {
  return !props.plain && (props.background || props.theme.layer.background) && backgroundStyle(props.background || props.theme.layer.background, props.theme);
}, function(props) {
  return props.theme.layer.container.zIndex;
}, function(props) {
  return !props.plain && props.theme.layer.container.elevation && elevationStyle3;
}, desktopContainerStyle, function(props) {
  if (props.responsive && props.theme.layer.responsiveBreakpoint) {
    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];
    if (breakpoint) {
      return breakpointStyle(breakpoint, responsiveContainerStyle);
    }
  }
  return "";
}, function(props) {
  return props.theme.layer.container && props.theme.layer.container.extend;
});
StyledContainer3.defaultProps = {};
Object.setPrototypeOf(StyledContainer3.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Layer/LayerContainer.js
var _excluded53 = ["background", "children", "full", "id", "margin", "modal", "onClickOutside", "onEsc", "plain", "position", "responsive", "target"];
function _extends85() {
  _extends85 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends85.apply(this, arguments);
}
function _objectWithoutPropertiesLoose48(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var HiddenAnchor = styled_components_browser_esm_default.a.withConfig({
  displayName: "LayerContainer__HiddenAnchor",
  componentId: "sc-1srj14c-0"
})(["width:0;height:0;overflow:hidden;position:absolute;"]);
var defaultPortalContext2 = [];
var LayerContainer = (0, import_react87.forwardRef)(function(_ref, ref) {
  var background = _ref.background, children2 = _ref.children, _ref$full = _ref.full, full = _ref$full === void 0 ? false : _ref$full, id = _ref.id, _ref$margin = _ref.margin, margin = _ref$margin === void 0 ? "none" : _ref$margin, _ref$modal = _ref.modal, modal = _ref$modal === void 0 ? true : _ref$modal, onClickOutside = _ref.onClickOutside, onEsc = _ref.onEsc, plain = _ref.plain, _ref$position = _ref.position, position = _ref$position === void 0 ? "center" : _ref$position, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, layerTarget = _ref.target, rest = _objectWithoutPropertiesLoose48(_ref, _excluded53);
  var theme = (0, import_react87.useContext)(Ge) || defaultProps2.theme;
  var size = (0, import_react87.useContext)(ResponsiveContext);
  var _useContext = (0, import_react87.useContext)(OptionsContext), layerOptions = _useContext.layer;
  var anchorRef = (0, import_react87.useRef)();
  var containerRef = (0, import_react87.useRef)();
  var layerRef = (0, import_react87.useRef)();
  var portalContext = (0, import_react87.useContext)(PortalContext) || defaultPortalContext2;
  var portalId = (0, import_react87.useMemo)(function() {
    return portalContext.length;
  }, [portalContext]);
  var nextPortalContext = (0, import_react87.useMemo)(function() {
    return [].concat(portalContext, [portalId]);
  }, [portalContext, portalId]);
  (0, import_react87.useEffect)(function() {
    if (position !== "hidden") {
      var node = layerRef.current || containerRef.current || ref.current;
      if (node && node.scrollIntoView)
        node.scrollIntoView();
      var element = document.activeElement;
      while (element) {
        if (element === containerRef.current) {
          break;
        }
        element = element.parentElement;
      }
      if (modal && !element && anchorRef.current) {
        anchorRef.current.focus();
      }
    }
  }, [modal, position, ref]);
  (0, import_react87.useEffect)(function() {
    if (position !== "hidden") {
      var node = layerRef.current || containerRef.current || ref.current;
      if (node && node.scrollIntoView)
        node.scrollIntoView();
    }
  }, [position, ref]);
  (0, import_react87.useEffect)(function() {
    var onClickDocument = function onClickDocument2(event) {
      var clickedPortalId = null;
      var node = event.target;
      while (clickedPortalId === null && node !== document && node !== null) {
        var attr = node.getAttribute("data-g-portal-id");
        if (attr !== null && attr !== "")
          clickedPortalId = parseInt(attr, 10);
        else
          node = node.parentNode;
      }
      if ((clickedPortalId === null || portalContext.indexOf(clickedPortalId) !== -1) && node !== null) {
        onClickOutside(event);
      }
    };
    if (onClickOutside) {
      document.addEventListener("mousedown", onClickDocument);
    }
    if (layerTarget) {
      var updateBounds = function updateBounds2() {
        var windowWidth = window.innerWidth;
        var windowHeight = window.innerHeight;
        var target = findVisibleParent(layerTarget);
        var layer = layerRef.current;
        if (layer && target) {
          layer.style.left = "";
          layer.style.top = "";
          layer.style.bottom = "";
          layer.style.width = "";
          var targetRect = target.getBoundingClientRect();
          var layerRect = layer.getBoundingClientRect();
          layer.style.left = targetRect.left + "px";
          layer.style.right = windowWidth - targetRect.right + "px";
          layer.style.top = targetRect.top + "px";
          layer.style.bottom = windowHeight - targetRect.bottom + "px";
          layer.style.maxHeight = targetRect.height;
          layer.style.maxWidth = Math.min(layerRect.width, windowWidth);
        }
      };
      updateBounds();
      window.addEventListener("resize", updateBounds);
      window.addEventListener("scroll", updateBounds, true);
      return function() {
        window.removeEventListener("resize", updateBounds);
        window.removeEventListener("scroll", updateBounds, true);
        if (onClickOutside) {
          document.removeEventListener("mousedown", onClickDocument);
        }
      };
    }
    return function() {
      if (onClickOutside) {
        document.removeEventListener("mousedown", onClickDocument);
      }
    };
  }, [layerTarget, onClickOutside, portalContext, portalId]);
  var content = import_react87.default.createElement(StyledContainer3, _extends85({
    ref: ref || containerRef,
    background,
    elevation: theme.layer.container.elevation,
    id: layerOptions && layerOptions.singleId ? id + "__container" : id,
    full,
    margin,
    modal
  }, rest, {
    position,
    plain,
    responsive,
    layerTarget,
    dir: theme.dir,
    "data-g-portal-id": portalId
  }), import_react87.default.createElement(HiddenAnchor, {
    ref: anchorRef,
    tabIndex: "-1",
    "aria-hidden": "true"
  }), children2);
  content = import_react87.default.createElement(StyledLayer, {
    ref: layerRef,
    id,
    plain,
    position,
    responsive,
    layerTarget,
    tabIndex: "-1",
    dir: theme.dir
  }, modal && import_react87.default.createElement(StyledOverlay, {
    plain,
    responsive,
    onMouseDown: onClickOutside
  }), content);
  if (onEsc) {
    content = import_react87.default.createElement(Keyboard, {
      onEsc: onEsc ? function(event) {
        event.stopPropagation();
        onEsc(event);
      } : void 0,
      target: modal === false ? "document" : void 0
    }, content);
  }
  var themeContextValue = (0, import_react87.useMemo)(function() {
    var dark3 = backgroundIsDark(theme.layer.background, theme);
    return _extends85({}, theme, {
      dark: dark3
    });
  }, [theme]);
  if (theme.layer.background) {
    var dark2 = themeContextValue.dark;
    if (dark2 !== void 0 && dark2 !== theme.dark) {
      content = import_react87.default.createElement(Ge.Provider, {
        value: themeContextValue
      }, content);
    }
  }
  content = import_react87.default.createElement(PortalContext.Provider, {
    value: nextPortalContext
  }, content);
  var hitResponsiveBreakpoint = responsive && size === theme.layer.responsiveBreakpoint;
  if (modal || hitResponsiveBreakpoint) {
    content = import_react87.default.createElement(FocusedContainer, {
      hidden: position === "hidden",
      restrictScroll: !layerTarget || hitResponsiveBreakpoint ? true : void 0,
      trapFocus: true
    }, content);
  }
  return content;
});

// node_modules/grommet/es6/components/Layer/propTypes.js
var import_prop_types46 = __toESM(require_prop_types());
var PAD_SIZES2 = ["xxsmall", "xsmall", "small", "medium", "large"];
var PropType42 = {};
if (true) {
  PropType42 = {
    animate: import_prop_types46.default.bool,
    animation: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(["slide", "fadeIn", "none"]), import_prop_types46.default.bool]),
    background: backgroundDoc,
    full: import_prop_types46.default.oneOfType([import_prop_types46.default.bool, import_prop_types46.default.oneOf(["vertical", "horizontal"])]),
    margin: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(["none"].concat(PAD_SIZES2)), import_prop_types46.default.shape({
      bottom: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      end: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      horizontal: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      left: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      right: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      start: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      top: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string]),
      vertical: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(PAD_SIZES2), import_prop_types46.default.string])
    }), import_prop_types46.default.string]),
    modal: import_prop_types46.default.bool,
    onClickOutside: import_prop_types46.default.func,
    onEsc: import_prop_types46.default.func,
    plain: import_prop_types46.default.bool,
    position: import_prop_types46.default.oneOf(["bottom", "bottom-left", "bottom-right", "center", "end", "hidden", "left", "right", "start", "top", "top-left", "top-right"]),
    responsive: import_prop_types46.default.bool,
    target: import_prop_types46.default.object
  };
}
var LayerPropTypes = PropType42;

// node_modules/grommet/es6/components/Layer/Layer.js
function _extends86() {
  _extends86 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends86.apply(this, arguments);
}
var Layer = (0, import_react88.forwardRef)(function(props, ref) {
  var animate = props.animate, animation = props.animation, targetChildPosition = props.targetChildPosition;
  var _useState = (0, import_react88.useState)(), originalFocusedElement = _useState[0], setOriginalFocusedElement = _useState[1];
  (0, import_react88.useEffect)(function() {
    return setOriginalFocusedElement(document.activeElement);
  }, []);
  var _useState2 = (0, import_react88.useState)(), layerContainer = _useState2[0], setLayerContainer = _useState2[1];
  var containerTarget = (0, import_react88.useContext)(ContainerTargetContext);
  (0, import_react88.useEffect)(function() {
    return setLayerContainer(getNewContainer(containerTarget, targetChildPosition));
  }, [containerTarget, targetChildPosition]);
  useLayoutEffect(function() {
    return function() {
      if (originalFocusedElement) {
        if (originalFocusedElement.focus) {
          setTimeout(function() {
            return originalFocusedElement.focus();
          }, 0);
        } else if (originalFocusedElement.parentNode && originalFocusedElement.parentNode.focus) {
          originalFocusedElement.parentNode.focus();
        }
      }
      if (layerContainer) {
        var activeAnimation = animation !== void 0 ? animation : animate;
        if (activeAnimation !== false) {
          var layerClone = layerContainer.cloneNode(true);
          layerClone.id = "layerClone";
          containerTarget.appendChild(layerClone);
          var clonedContainer = layerClone.querySelector('[class*="StyledLayer__StyledContainer"]');
          if (clonedContainer && clonedContainer.style) {
            clonedContainer.style.animationDirection = "reverse";
          }
          setTimeout(function() {
            var clone = document.getElementById("layerClone");
            if (clone) {
              containerTarget.removeChild(clone);
              layerContainer.remove();
            }
          }, animationDuration);
        } else {
          containerTarget.removeChild(layerContainer);
        }
      }
    };
  }, [animate, animation, containerTarget, layerContainer, originalFocusedElement]);
  return layerContainer ? (0, import_react_dom2.createPortal)(import_react88.default.createElement(LayerContainer, _extends86({
    ref
  }, props)), layerContainer) : null;
});
Layer.displayName = "Layer";
Layer.propTypes = LayerPropTypes;

// node_modules/grommet/es6/components/List/List.js
var import_react89 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/List/propTypes.js
var import_prop_types47 = __toESM(require_prop_types());
function _extends87() {
  _extends87 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends87.apply(this, arguments);
}
var sizes3 = ["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var sides2 = ["horizontal", "vertical", "top", "bottom", "left", "right", "start", "end"];
var padShapeSides2 = {};
sides2.forEach(function(side) {
  padShapeSides2[side] = import_prop_types47.default.oneOf(sizes3);
});
var borderTypes2 = [import_prop_types47.default.bool, import_prop_types47.default.oneOf(sides2), import_prop_types47.default.shape({
  color: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.shape({
    dark: import_prop_types47.default.string,
    light: import_prop_types47.default.string
  })]),
  side: import_prop_types47.default.oneOf(sides2),
  size: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(sizes3), import_prop_types47.default.string])
})];
var PropType43 = {};
if (true) {
  PropType43 = _extends87({}, genericProps, {
    action: import_prop_types47.default.func,
    as: import_prop_types47.default.string,
    background: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.arrayOf(import_prop_types47.default.string)]),
    border: import_prop_types47.default.oneOfType(borderTypes2),
    data: import_prop_types47.default.arrayOf(import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.shape({})])),
    children: import_prop_types47.default.func,
    defaultItemProps: import_prop_types47.default.shape(BoxPropTypes),
    itemKey: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.func]),
    itemProps: import_prop_types47.default.shape({}),
    onMore: import_prop_types47.default.func,
    onClickItem: import_prop_types47.default.func,
    onOrder: import_prop_types47.default.func,
    pad: import_prop_types47.default.oneOfType([padPropType]),
    paginate: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.object]),
    primaryKey: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.func]),
    secondaryKey: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.func]),
    show: import_prop_types47.default.oneOfType([import_prop_types47.default.number, import_prop_types47.default.shape({
      page: import_prop_types47.default.number
    })]),
    step: import_prop_types47.default.number
  });
}
var ListPropTypes = PropType43;

// node_modules/grommet/es6/components/List/List.js
var _excluded54 = ["action", "as", "background", "border", "children", "data", "defaultItemProps", "focus", "itemKey", "itemProps", "onOrder", "pad", "paginate", "primaryKey", "secondaryKey", "show", "step", "onClickItem", "onMore"];
function _extends88() {
  _extends88 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends88.apply(this, arguments);
}
function _objectWithoutPropertiesLoose49(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var StyledList = styled_components_browser_esm_default.ul.withConfig({
  displayName: "List__StyledList",
  componentId: "sc-130gdqg-0"
})(["list-style:none;", " padding:0;", " &:focus{", "}", "}", "}"], function(props) {
  return !props.margin && "margin: 0;";
}, genericStyles, function(props) {
  return props.tabIndex >= 0 && focusStyle({
    forceOutline: true,
    skipSvgChildren: true
  });
}, function(props) {
  return props.itemFocus && focusStyle({
    forceOutline: true,
    skipSvgChildren: true
  });
}, function(props) {
  return props.theme.list && props.theme.list.extend;
});
var StyledItem = styled_components_browser_esm_default(Box).withConfig({
  displayName: "List__StyledItem",
  componentId: "sc-130gdqg-1"
})(["", " ", " &:focus{", "}", ""], function(props) {
  return props.onClick && "cursor: pointer;";
}, function(props) {
  return props.draggable && "cursor: move;";
}, unfocusStyle({
  forceOutline: true,
  skipSvgChildren: true
}), function(props) {
  return props.theme.list && props.theme.list.item && props.theme.list.item.extend;
});
var StyledContainer4 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "List__StyledContainer",
  componentId: "sc-130gdqg-2"
})(["", ";"], function(props) {
  return props.theme.list && props.theme.list.container && props.theme.list.container.extend;
});
var normalize = function normalize2(item, index, property) {
  if (typeof property === "function") {
    return property(item, index);
  }
  return item[property];
};
var reorder = function reorder2(array, source, target) {
  var result = array.slice(0);
  var tmp = result[source];
  if (source < target)
    for (var i2 = source; i2 < target; i2 += 1) {
      result[i2] = result[i2 + 1];
    }
  else
    for (var _i = source; _i > target; _i -= 1) {
      result[_i] = result[_i - 1];
    }
  result[target] = tmp;
  return result;
};
var getPrimaryContent = function getPrimaryContent2(item, index, primaryKey) {
  var primaryContent;
  if (primaryKey) {
    if (typeof primaryKey === "function") {
      primaryContent = primaryKey(item, index);
    } else {
      primaryContent = normalize(item, index, primaryKey);
    }
  }
  return primaryContent;
};
var getKey = function getKey2(item, index, primaryContent) {
  if (typeof primaryContent === "string") {
    return primaryContent;
  }
  return typeof item === "string" ? item : index;
};
var getItemId = function getItemId2(item, index, primaryKey) {
  var primaryContent = getPrimaryContent(item, index, primaryKey);
  return getKey(item, index, primaryContent);
};
var List = import_react89.default.forwardRef(function(_ref, ref) {
  var action = _ref.action, as = _ref.as, background = _ref.background, border = _ref.border, children2 = _ref.children, data = _ref.data, defaultItemProps = _ref.defaultItemProps, focus = _ref.focus, itemKey = _ref.itemKey, itemProps = _ref.itemProps, onOrder = _ref.onOrder, pad = _ref.pad, paginate = _ref.paginate, primaryKey = _ref.primaryKey, secondaryKey = _ref.secondaryKey, showProp = _ref.show, _ref$step = _ref.step, step = _ref$step === void 0 ? paginate ? 50 : void 0 : _ref$step, onClickItem = _ref.onClickItem, onMore = _ref.onMore, rest = _objectWithoutPropertiesLoose49(_ref, _excluded54);
  var listRef = useForwardedRef(ref);
  var theme = (0, import_react89.useContext)(Ge);
  var _useState = (0, import_react89.useState)(), active = _useState[0], setActive = _useState[1];
  var _useState2 = (0, import_react89.useState)(), lastActive = _useState2[0], setLastActive = _useState2[1];
  var _useState3 = (0, import_react89.useState)(), itemFocus = _useState3[0], setItemFocus = _useState3[1];
  var _useState4 = (0, import_react89.useState)(), dragging = _useState4[0], setDragging = _useState4[1];
  var _usePagination = usePagination(_extends88({
    data,
    page: normalizeShow(showProp, step),
    step
  }, paginate)), items = _usePagination[0], paginationProps = _usePagination[1];
  var Container2 = paginate ? StyledContainer4 : import_react89.Fragment;
  var containterProps = paginate ? _extends88({}, theme.list.container) : void 0;
  var _useState5 = (0, import_react89.useState)(), orderingData = _useState5[0], setOrderingData = _useState5[1];
  var draggingRef = (0, import_react89.useRef)();
  var ariaProps = {
    role: onClickItem || onOrder ? "listbox" : "list"
  };
  if (active >= 0) {
    var activeId;
    if (onOrder) {
      var buttonId = active % 2 ? "MoveDown" : "MoveUp";
      var itemIndex = Math.trunc(active / 2);
      activeId = "" + getItemId(data[itemIndex], itemIndex, primaryKey) + buttonId;
    } else if (onClickItem) {
      activeId = getItemId(data[active], active, primaryKey);
    }
    ariaProps["aria-activedescendant"] = activeId;
  }
  return import_react89.default.createElement(Container2, containterProps, import_react89.default.createElement(Keyboard, {
    onEnter: (onClickItem || onOrder) && active >= 0 ? function(event) {
      if (onOrder) {
        var index = Math.trunc(active / 2);
        if (active % 2) {
          onOrder(reorder(data, index, index + 1));
          setActive(Math.min(active + 2, data.length * 2 - 2));
        } else {
          onOrder(reorder(data, index, index - 1));
          setActive(Math.max(active - 2, 1));
        }
      } else {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.item = data[active];
        adjustedEvent.index = active;
        onClickItem(adjustedEvent);
      }
    } : void 0,
    onUp: (onClickItem || onOrder) && active ? function() {
      var min = onOrder ? 1 : 0;
      setActive(Math.max(active - 1, min));
    } : void 0,
    onDown: (onClickItem || onOrder) && data && data.length ? function() {
      var min = onOrder ? 1 : 0;
      var max = onOrder ? data.length * 2 - 2 : data.length - 1;
      setActive(active >= min ? Math.min(active + 1, max) : min);
    } : void 0
  }, import_react89.default.createElement(StyledList, _extends88({
    ref: listRef,
    as: as || "ul",
    itemFocus,
    tabIndex: onClickItem || onOrder ? 0 : void 0,
    onFocus: function onFocus() {
      return !active && active !== 0 ? setActive(lastActive) : setActive(active);
    },
    onBlur: function onBlur() {
      setLastActive(active);
      setActive(void 0);
    }
  }, ariaProps, rest), import_react89.default.createElement(InfiniteScroll, {
    items: !paginate ? orderingData || data : items,
    onMore,
    show: !paginate ? showProp : void 0,
    step,
    renderMarker: function renderMarker(marker) {
      return import_react89.default.createElement(Box, {
        as: "li",
        flex: false
      }, marker);
    }
  }, function(item, index) {
    var content;
    var boxProps = {};
    var itemId;
    if (children2) {
      content = children2(item, index, onClickItem ? {
        active: active === index
      } : void 0);
    } else if (primaryKey) {
      if (typeof primaryKey === "function") {
        itemId = primaryKey(item, index);
        content = itemId;
      } else {
        itemId = normalize(item, index, primaryKey);
        content = import_react89.default.createElement(Text, {
          key: "p",
          weight: "bold"
        }, itemId);
      }
      if (secondaryKey) {
        if (typeof secondaryKey === "function") {
          content = [content, secondaryKey(item, index)];
        } else {
          content = [content, import_react89.default.createElement(Text, {
            key: "s"
          }, normalize(item, index, secondaryKey))];
        }
        boxProps = {
          direction: "row",
          align: "center",
          justify: "between",
          gap: "medium"
        };
      }
    } else if (typeof item === "object") {
      content = item[Object.keys(item)[0]];
    } else {
      content = item;
    }
    if (itemKey) {
      if (typeof itemKey === "function") {
        itemId = itemKey(item);
      } else {
        itemId = normalize(item, index, itemKey);
      }
    }
    var key = itemKey ? itemId : getKey(item, index, itemId);
    if (action) {
      content = [import_react89.default.createElement(Box, {
        align: "start",
        key: "actionContainer" + index
      }, content), action(item, index)];
      boxProps = {
        direction: "row",
        align: secondaryKey ? "start" : "center",
        justify: "between",
        gap: "medium"
      };
    }
    var adjustedBackground = background || theme.list.item.background;
    if (!onOrder && active === index || dragging === index) {
      adjustedBackground = theme.global.hover.background;
    } else if (Array.isArray(adjustedBackground)) {
      adjustedBackground = adjustedBackground[index % adjustedBackground.length];
    }
    var adjustedBorder = border !== void 0 ? border : theme.list.item.border;
    if (adjustedBorder === "horizontal" && index) {
      adjustedBorder = "bottom";
    }
    var clickProps;
    if (onClickItem && !onOrder) {
      clickProps = {
        role: "option",
        tabIndex: -1,
        active: active === index,
        onClick: function onClick(event) {
          event.persist();
          var adjustedEvent = event;
          adjustedEvent.item = item;
          adjustedEvent.index = index;
          onClickItem(adjustedEvent);
          listRef.current.focus();
        },
        onMouseOver: function onMouseOver() {
          return setActive(index);
        },
        onMouseOut: function onMouseOut() {
          return setActive(void 0);
        },
        onFocus: function onFocus() {
          setActive(index);
          setItemFocus(true);
        },
        onBlur: function onBlur() {
          setActive(void 0);
          setItemFocus(false);
        }
      };
    }
    var orderProps;
    var orderControls;
    if (onOrder) {
      orderProps = {
        draggable: true,
        onDragStart: function onDragStart(event) {
          event.dataTransfer.setData("text/plain", "");
          event.dataTransfer.effectAllowed = "move";
          setDragging(index);
          setActive(void 0);
        },
        onDragEnd: function onDragEnd() {
          setDragging(void 0);
          setOrderingData(void 0);
        },
        onDragOver: function onDragOver(event) {
          if (dragging !== void 0) {
            event.preventDefault();
            if (dragging !== index) {
              event.dataTransfer.dropEffect = "move";
              setOrderingData(reorder(orderingData || data, dragging, index));
              setDragging(index);
            }
          }
        },
        onDrop: function onDrop() {
          if (orderingData) {
            onOrder(orderingData);
          }
        },
        ref: dragging === index ? draggingRef : void 0
      };
      var Up = theme.list.icons.up;
      var Down = theme.list.icons.down;
      orderControls = import_react89.default.createElement(Box, {
        direction: "row",
        align: "center",
        justify: "end"
      }, import_react89.default.createElement(Button, {
        id: key + "MoveUp",
        a11yTitle: index + 1 + " " + key + " move up",
        icon: import_react89.default.createElement(Up, null),
        hoverIndicator: true,
        focusIndicator: false,
        disabled: !index,
        active: active === index * 2,
        onClick: function onClick(event) {
          event.stopPropagation();
          onOrder(reorder(data, index, index - 1));
        },
        tabIndex: -1,
        onMouseOver: function onMouseOver() {
          return setActive(index * 2);
        },
        onMouseOut: function onMouseOut() {
          return setActive(void 0);
        },
        onFocus: function onFocus() {
          setActive(index * 2);
          setItemFocus(true);
        },
        onBlur: function onBlur() {
          setActive(void 0);
          setItemFocus(false);
        }
      }), import_react89.default.createElement(Button, {
        id: key + "MoveDown",
        a11yTitle: index + 1 + " " + key + " move down",
        icon: import_react89.default.createElement(Down, null),
        hoverIndicator: true,
        focusIndicator: false,
        disabled: index >= data.length - 1,
        active: active === index * 2 + 1,
        onClick: function onClick(event) {
          event.stopPropagation();
          onOrder(reorder(data, index, index + 1));
        },
        tabIndex: -1,
        onMouseOver: function onMouseOver() {
          return setActive(index * 2 + 1);
        },
        onMouseOut: function onMouseOut() {
          return setActive(void 0);
        },
        onFocus: function onFocus() {
          setActive(index * 2 + 1);
          setItemFocus(true);
        },
        onBlur: function onBlur() {
          setActive(void 0);
          setItemFocus(false);
        }
      }));
      boxProps = {
        direction: "row",
        align: defaultItemProps && defaultItemProps.align || "center",
        gap: "medium"
      };
      content = import_react89.default.createElement(Box, {
        flex: true
      }, content);
    }
    if (itemProps && itemProps[index]) {
      boxProps = _extends88({}, boxProps, itemProps[index]);
    }
    return import_react89.default.createElement(StyledItem, _extends88({
      key,
      tag: "li",
      flex: false,
      pad: pad || theme.list.item.pad,
      background: adjustedBackground,
      border: adjustedBorder
    }, defaultItemProps, boxProps, clickProps, orderProps), onOrder && import_react89.default.createElement(Text, null, index + 1), content, orderControls);
  }))), paginate && data.length > step && items && items.length ? import_react89.default.createElement(Pagination, _extends88({
    alignSelf: "end"
  }, paginationProps)) : null);
});
List.displayName = "List";
List.propTypes = ListPropTypes;

// node_modules/grommet/es6/components/Main/Main.js
var import_react90 = __toESM(require_react());
function _extends89() {
  _extends89 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends89.apply(this, arguments);
}
var Main = function Main2(_ref) {
  var rest = _extends89({}, _ref);
  return import_react90.default.createElement(Box, _extends89({
    as: "main",
    fill: "vertical",
    flex: "grow",
    overflow: "auto"
  }, rest));
};

// node_modules/grommet/es6/components/Markdown/Markdown.js
var import_react92 = __toESM(require_react());

// node_modules/markdown-to-jsx/dist/index.modern.js
var t = __toESM(require_react());
function e() {
  return (e = Object.assign || function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var n2 = arguments[e2];
      for (var r2 in n2)
        Object.prototype.hasOwnProperty.call(n2, r2) && (t2[r2] = n2[r2]);
    }
    return t2;
  }).apply(this, arguments);
}
var n = ["children", "options"];
var r = ["allowFullScreen", "allowTransparency", "autoComplete", "autoFocus", "autoPlay", "cellPadding", "cellSpacing", "charSet", "className", "classId", "colSpan", "contentEditable", "contextMenu", "crossOrigin", "encType", "formAction", "formEncType", "formMethod", "formNoValidate", "formTarget", "frameBorder", "hrefLang", "inputMode", "keyParams", "keyType", "marginHeight", "marginWidth", "maxLength", "mediaGroup", "minLength", "noValidate", "radioGroup", "readOnly", "rowSpan", "spellCheck", "srcDoc", "srcLang", "srcSet", "tabIndex", "useMap"].reduce((t2, e2) => (t2[e2.toLowerCase()] = e2, t2), { for: "htmlFor" });
var o = { amp: "&", apos: "'", gt: ">", lt: "<", nbsp: "\xA0", quot: "\u201C" };
var c = ["style", "script"];
var a = /([-A-Z0-9_:]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|(?:\{((?:\\.|{[^}]*?}|[^}])*)\})))?/gi;
var u = /mailto:/i;
var i = /\n{2,}$/;
var l = /^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/;
var s = /^ *> ?/gm;
var _ = /^ {2,}\n/;
var f = /^(?:( *[-*_]) *){3,}(?:\n *)+\n/;
var d = /^\s*(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n *)+\n?/;
var p = /^(?: {4}[^\n]+\n*)+(?:\n *)+\n?/;
var g = /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/;
var m = /^(?:\n *)*\n/;
var y = /\r\n?/g;
var h = /^\[\^([^\]]+)](:.*)\n/;
var k = /^\[\^([^\]]+)]/;
var x = /\f/g;
var b = /^\s*?\[(x|\s)\]/;
var v = /^ *(#{1,6}) *([^\n]+?)(?: +#*)?(?:\n *)*(?:\n|$)/;
var S = /^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/;
var $ = /^ *(?!<[a-z][^ >/]* ?\/>)<([a-z][^ >/]*) ?([^>]*)\/{0}>\n?(\s*(?:<\1[^>]*?>[\s\S]*?<\/\1>|(?!<\1)[\s\S])*?)<\/\1>\n*/i;
var w = /&([a-z]+);/g;
var z = /^<!--[\s\S]*?(?:-->)/;
var E = /^(data|aria|x)-[a-z_][a-z\d_.-]*$/;
var A = /^ *<([a-z][a-z0-9:]*)(?:\s+((?:<.*?>|[^>])*))?\/?>(?!<\/\1>)(\s*\n)?/i;
var R = /^\{.*\}$/;
var I = /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/;
var M = /^<([^ >]+@[^ >]+)>/;
var O = /^<([^ >]+:\/[^ >]+)>/;
var B = / *\n+$/;
var L = /(?:^|\n)( *)$/;
var T = /-([a-z])?/gi;
var j = /^(.*\|?.*)\n *(\|? *[-:]+ *\|[-| :]*)\n((?:.*\|.*\n)*)\n?/;
var C = /^\[([^\]]*)\]:\s*(\S+)\s*("([^"]*)")?/;
var D = /^!\[([^\]]*)\] ?\[([^\]]*)\]/;
var N = /^\[([^\]]*)\] ?\[([^\]]*)\]/;
var Z = /(\[|\])/g;
var F = /(\n|^[-*]\s|^#|^ {2,}|^-{2,}|^>\s)/;
var P = /\t/g;
var G = /^ *\| */;
var H = /(^ *\||\| *$)/g;
var q = / *$/;
var U = /^ *:-+: *$/;
var V = /^ *:-+ *$/;
var W = /^ *-+: *$/;
var Q = /^([*_])\1((?:\[.*?\][([].*?[)\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\1\1(?!\1)/;
var X = /^([*_])((?:\[.*?\][([].*?[)\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\1(?!\1|\w)/;
var J = /^~~((?:\[.*?\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/;
var K = /^\\([^0-9A-Za-z\s])/;
var Y = /^[\s\S]+?(?=[^0-9A-Z\s\u00c0-\uffff&;.()'"]|\d+\.|\n\n| {2,}\n|\w+:\S|$)/i;
var tt = /^\n+/;
var et = /^([ \t]*)/;
var nt = /\\([^0-9A-Z\s])/gi;
var rt = new RegExp("^( *)((?:[*+-]|\\d+\\.)) +");
var ot = new RegExp("^( *)((?:[*+-]|\\d+\\.)) +[^\\n]*(?:\\n(?!\\1(?:[*+-]|\\d+\\.) )[^\\n]*)*(\\n|$)", "gm");
var ct = new RegExp("^( *)((?:[*+-]|\\d+\\.)) [\\s\\S]+?(?:\\n{2,}(?! )(?!\\1(?:[*+-]|\\d+\\.) (?!(?:[*+-]|\\d+\\.) ))\\n*|\\s*\\n*$)");
var at = "(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*";
var ut = new RegExp("^\\[(" + at + `)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['"]([\\s\\S]*?)['"])?\\s*\\)`);
var it = new RegExp("^!\\[(" + at + `)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['"]([\\s\\S]*?)['"])?\\s*\\)`);
var lt = [l, p, d, v, S, z, ot, ct, j];
var st = [...lt, /^[^\n]+(?:  \n|\n{2,})/, $, A];
function _t(t2) {
  return t2.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, "a").replace(/[çÇ]/g, "c").replace(/[ðÐ]/g, "d").replace(/[ÈÉÊËéèêë]/g, "e").replace(/[ÏïÎîÍíÌì]/g, "i").replace(/[Ññ]/g, "n").replace(/[øØœŒÕõÔôÓóÒò]/g, "o").replace(/[ÜüÛûÚúÙù]/g, "u").replace(/[ŸÿÝý]/g, "y").replace(/[^a-z0-9- ]/gi, "").replace(/ /gi, "-").toLowerCase();
}
function ft(t2) {
  return W.test(t2) ? "right" : U.test(t2) ? "center" : V.test(t2) ? "left" : null;
}
function dt(t2, e2, n2) {
  const r2 = n2.t;
  n2.t = true;
  const o2 = e2(t2.trim(), n2);
  n2.t = r2;
  let c2 = [[]];
  return o2.forEach(function(t3, e3) {
    t3.type === "tableSeparator" ? e3 !== 0 && e3 !== o2.length - 1 && c2.push([]) : (t3.type !== "text" || o2[e3 + 1] != null && o2[e3 + 1].type !== "tableSeparator" || (t3.content = t3.content.replace(q, "")), c2[c2.length - 1].push(t3));
  }), c2;
}
function pt(t2, e2, n2) {
  n2.o = true;
  const r2 = dt(t2[1], e2, n2), o2 = t2[2].replace(H, "").split("|").map(ft), c2 = function(t3, e3, n3) {
    return t3.trim().split("\n").map(function(t4) {
      return dt(t4, e3, n3);
    });
  }(t2[3], e2, n2);
  return n2.o = false, { align: o2, cells: c2, header: r2, type: "table" };
}
function gt(t2, e2) {
  return t2.align[e2] == null ? {} : { textAlign: t2.align[e2] };
}
function mt(t2) {
  return function(e2, n2) {
    return n2.o ? t2.exec(e2) : null;
  };
}
function yt(t2) {
  return function(e2, n2) {
    return n2.o || n2.u ? t2.exec(e2) : null;
  };
}
function ht(t2) {
  return function(e2, n2) {
    return n2.o || n2.u ? null : t2.exec(e2);
  };
}
function kt(t2) {
  return function(e2) {
    return t2.exec(e2);
  };
}
function xt(t2, e2, n2) {
  if (e2.o || e2.u)
    return null;
  if (n2 && !n2.endsWith("\n"))
    return null;
  let r2 = "";
  t2.split("\n").every((t3) => !lt.some((e3) => e3.test(t3)) && (r2 += t3 + "\n", t3.trim()));
  const o2 = r2.trimEnd();
  return o2 == "" ? null : [r2, o2];
}
function bt(t2) {
  try {
    if (decodeURIComponent(t2).replace(/[^A-Za-z0-9/:]/g, "").match(/^\s*(javascript|vbscript|data):/i))
      return null;
  } catch (t3) {
    return null;
  }
  return t2;
}
function vt(t2) {
  return t2.replace(nt, "$1");
}
function St(t2, e2, n2) {
  const r2 = n2.o || false, o2 = n2.u || false;
  n2.o = true, n2.u = true;
  const c2 = t2(e2, n2);
  return n2.o = r2, n2.u = o2, c2;
}
function $t(t2, e2, n2) {
  const r2 = n2.o || false, o2 = n2.u || false;
  n2.o = false, n2.u = true;
  const c2 = t2(e2, n2);
  return n2.o = r2, n2.u = o2, c2;
}
function wt(t2, e2, n2) {
  return n2.o = false, t2(e2 + "\n\n", n2);
}
var zt = (t2, e2, n2) => ({ content: St(e2, t2[1], n2) });
function Et() {
  return {};
}
function At() {
  return null;
}
function Rt(...t2) {
  return t2.filter(Boolean).join(" ");
}
function It(t2, e2, n2) {
  let r2 = t2;
  const o2 = e2.split(".");
  for (; o2.length && (r2 = r2[o2[0]], r2 !== void 0); )
    o2.shift();
  return r2 || n2;
}
var Mt;
function Ot(n2, H2 = {}) {
  H2.overrides = H2.overrides || {}, H2.slugify = H2.slugify || _t, H2.namedCodesToUnicode = H2.namedCodesToUnicode ? e({}, o, H2.namedCodesToUnicode) : o;
  const q2 = H2.createElement || t.createElement;
  function U2(t2, n3, ...r2) {
    const o2 = It(H2.overrides, `${t2}.props`, {});
    return q2(function(t3, e2) {
      const n4 = It(e2, t3);
      return n4 ? typeof n4 == "function" || typeof n4 == "object" && "render" in n4 ? n4 : It(e2, `${t3}.component`, t3) : t3;
    }(t2, H2.overrides), e({}, n3, o2, { className: Rt(n3 == null ? void 0 : n3.className, o2.className) || void 0 }), ...r2);
  }
  function V2(e2) {
    let n3 = false;
    H2.forceInline ? n3 = true : H2.forceBlock || (n3 = F.test(e2) === false);
    const r2 = dt2(ft2(n3 ? e2 : `${e2.trimEnd().replace(tt, "")}

`, { o: n3 }));
    for (; typeof r2[r2.length - 1] == "string" && !r2[r2.length - 1].trim(); )
      r2.pop();
    if (H2.wrapper === null)
      return r2;
    const o2 = H2.wrapper || (n3 ? "span" : "div");
    let c2;
    if (r2.length > 1 || H2.forceWrapper)
      c2 = r2;
    else {
      if (r2.length === 1)
        return c2 = r2[0], typeof c2 == "string" ? U2("span", { key: "outer" }, c2) : c2;
      c2 = null;
    }
    return t.createElement(o2, { key: "outer" }, c2);
  }
  function W2(e2) {
    const n3 = e2.match(a);
    return n3 ? n3.reduce(function(e3, n4, o2) {
      const c2 = n4.indexOf("=");
      if (c2 !== -1) {
        const a2 = function(t2) {
          return t2.indexOf("-") !== -1 && t2.match(E) === null && (t2 = t2.replace(T, function(t3, e4) {
            return e4.toUpperCase();
          })), t2;
        }(n4.slice(0, c2)).trim(), u2 = function(t2) {
          const e4 = t2[0];
          return (e4 === '"' || e4 === "'") && t2.length >= 2 && t2[t2.length - 1] === e4 ? t2.slice(1, -1) : t2;
        }(n4.slice(c2 + 1).trim()), i2 = r[a2] || a2, l2 = e3[i2] = function(t2, e4) {
          return t2 === "style" ? e4.split(/;\s?/).reduce(function(t3, e5) {
            const n5 = e5.slice(0, e5.indexOf(":"));
            return t3[n5.replace(/(-[a-z])/g, (t4) => t4[1].toUpperCase())] = e5.slice(n5.length + 1).trim(), t3;
          }, {}) : t2 === "href" ? bt(e4) : (e4.match(R) && (e4 = e4.slice(1, e4.length - 1)), e4 === "true" || e4 !== "false" && e4);
        }(a2, u2);
        typeof l2 == "string" && ($.test(l2) || A.test(l2)) && (e3[i2] = t.cloneElement(V2(l2.trim()), { key: o2 }));
      } else
        n4 !== "style" && (e3[r[n4] || n4] = true);
      return e3;
    }, {}) : void 0;
  }
  const nt2 = [], at2 = {}, lt2 = { blockQuote: { i: ht(l), l: Mt.HIGH, _: (t2, e2, n3) => ({ content: e2(t2[0].replace(s, ""), n3) }), p: (t2, e2, n3) => U2("blockquote", { key: n3.g }, e2(t2.content, n3)) }, breakLine: { i: kt(_), l: Mt.HIGH, _: Et, p: (t2, e2, n3) => U2("br", { key: n3.g }) }, breakThematic: { i: ht(f), l: Mt.HIGH, _: Et, p: (t2, e2, n3) => U2("hr", { key: n3.g }) }, codeBlock: { i: ht(p), l: Mt.MAX, _: (t2) => ({ content: t2[0].replace(/^ {4}/gm, "").replace(/\n+$/, ""), lang: void 0 }), p: (t2, e2, n3) => U2("pre", { key: n3.g }, U2("code", { className: t2.lang ? `lang-${t2.lang}` : "" }, t2.content)) }, codeFenced: { i: ht(d), l: Mt.MAX, _: (t2) => ({ content: t2[3], lang: t2[2] || void 0, type: "codeBlock" }) }, codeInline: { i: yt(g), l: Mt.LOW, _: (t2) => ({ content: t2[2] }), p: (t2, e2, n3) => U2("code", { key: n3.g }, t2.content) }, footnote: { i: ht(h), l: Mt.MAX, _: (t2) => (nt2.push({ footnote: t2[2], identifier: t2[1] }), {}), p: At }, footnoteReference: { i: mt(k), l: Mt.HIGH, _: (t2) => ({ content: t2[1], target: `#${H2.slugify(t2[1])}` }), p: (t2, e2, n3) => U2("a", { key: n3.g, href: bt(t2.target) }, U2("sup", { key: n3.g }, t2.content)) }, gfmTask: { i: mt(b), l: Mt.HIGH, _: (t2) => ({ completed: t2[1].toLowerCase() === "x" }), p: (t2, e2, n3) => U2("input", { checked: t2.completed, key: n3.g, readOnly: true, type: "checkbox" }) }, heading: { i: ht(v), l: Mt.HIGH, _: (t2, e2, n3) => ({ content: St(e2, t2[2], n3), id: H2.slugify(t2[2]), level: t2[1].length }), p: (t2, e2, n3) => (t2.tag = `h${t2.level}`, U2(t2.tag, { id: t2.id, key: n3.g }, e2(t2.content, n3))) }, headingSetext: { i: ht(S), l: Mt.MAX, _: (t2, e2, n3) => ({ content: St(e2, t2[1], n3), level: t2[2] === "=" ? 1 : 2, type: "heading" }) }, htmlComment: { i: kt(z), l: Mt.HIGH, _: () => ({}), p: At }, image: { i: yt(it), l: Mt.HIGH, _: (t2) => ({ alt: t2[1], target: vt(t2[2]), title: t2[3] }), p: (t2, e2, n3) => U2("img", { key: n3.g, alt: t2.alt || void 0, title: t2.title || void 0, src: bt(t2.target) }) }, link: { i: mt(ut), l: Mt.LOW, _: (t2, e2, n3) => ({ content: $t(e2, t2[1], n3), target: vt(t2[2]), title: t2[3] }), p: (t2, e2, n3) => U2("a", { key: n3.g, href: bt(t2.target), title: t2.title }, e2(t2.content, n3)) }, linkAngleBraceStyleDetector: { i: mt(O), l: Mt.MAX, _: (t2) => ({ content: [{ content: t2[1], type: "text" }], target: t2[1], type: "link" }) }, linkBareUrlDetector: { i: (t2, e2) => e2.m ? null : mt(I)(t2, e2), l: Mt.MAX, _: (t2) => ({ content: [{ content: t2[1], type: "text" }], target: t2[1], title: void 0, type: "link" }) }, linkMailtoDetector: { i: mt(M), l: Mt.MAX, _(t2) {
    let e2 = t2[1], n3 = t2[1];
    return u.test(n3) || (n3 = "mailto:" + n3), { content: [{ content: e2.replace("mailto:", ""), type: "text" }], target: n3, type: "link" };
  } }, list: { i(t2, e2, n3) {
    const r2 = L.exec(n3);
    return !r2 || !e2.h && e2.o ? null : ct.exec(t2 = r2[1] + t2);
  }, l: Mt.HIGH, _(t2, e2, n3) {
    const r2 = t2[2], o2 = r2.length > 1, c2 = o2 ? +r2 : void 0, a2 = t2[0].replace(i, "\n").match(ot);
    let u2 = false;
    return { items: a2.map(function(t3, r3) {
      const o3 = rt.exec(t3)[0].length, c3 = new RegExp("^ {1," + o3 + "}", "gm"), i2 = t3.replace(c3, "").replace(rt, ""), l2 = r3 === a2.length - 1, s2 = i2.indexOf("\n\n") !== -1 || l2 && u2;
      u2 = s2;
      const _2 = n3.o, f2 = n3.h;
      let d2;
      n3.h = true, s2 ? (n3.o = false, d2 = i2.replace(B, "\n\n")) : (n3.o = true, d2 = i2.replace(B, ""));
      const p2 = e2(d2, n3);
      return n3.o = _2, n3.h = f2, p2;
    }), ordered: o2, start: c2 };
  }, p: (t2, e2, n3) => U2(t2.ordered ? "ol" : "ul", { key: n3.g, start: t2.start }, t2.items.map(function(t3, r2) {
    return U2("li", { key: r2 }, e2(t3, n3));
  })) }, newlineCoalescer: { i: ht(m), l: Mt.LOW, _: Et, p: () => "\n" }, paragraph: { i: xt, l: Mt.LOW, _: zt, p: (t2, e2, n3) => U2("p", { key: n3.g }, e2(t2.content, n3)) }, ref: { i: mt(C), l: Mt.MAX, _: (t2) => (at2[t2[1]] = { target: t2[2], title: t2[4] }, {}), p: At }, refImage: { i: yt(D), l: Mt.MAX, _: (t2) => ({ alt: t2[1] || void 0, ref: t2[2] }), p: (t2, e2, n3) => U2("img", { key: n3.g, alt: t2.alt, src: bt(at2[t2.ref].target), title: at2[t2.ref].title }) }, refLink: { i: mt(N), l: Mt.MAX, _: (t2, e2, n3) => ({ content: e2(t2[1], n3), fallbackContent: e2(t2[0].replace(Z, "\\$1"), n3), ref: t2[2] }), p: (t2, e2, n3) => at2[t2.ref] ? U2("a", { key: n3.g, href: bt(at2[t2.ref].target), title: at2[t2.ref].title }, e2(t2.content, n3)) : U2("span", { key: n3.g }, e2(t2.fallbackContent, n3)) }, table: { i: ht(j), l: Mt.HIGH, _: pt, p: (t2, e2, n3) => U2("table", { key: n3.g }, U2("thead", null, U2("tr", null, t2.header.map(function(r2, o2) {
    return U2("th", { key: o2, style: gt(t2, o2) }, e2(r2, n3));
  }))), U2("tbody", null, t2.cells.map(function(r2, o2) {
    return U2("tr", { key: o2 }, r2.map(function(r3, o3) {
      return U2("td", { key: o3, style: gt(t2, o3) }, e2(r3, n3));
    }));
  }))) }, tableSeparator: { i: function(t2, e2) {
    return e2.t ? G.exec(t2) : null;
  }, l: Mt.HIGH, _: function() {
    return { type: "tableSeparator" };
  }, p: () => " | " }, text: { i: kt(Y), l: Mt.MIN, _: (t2) => ({ content: t2[0].replace(w, (t3, e2) => H2.namedCodesToUnicode[e2] ? H2.namedCodesToUnicode[e2] : t3) }), p: (t2) => t2.content }, textBolded: { i: yt(Q), l: Mt.MED, _: (t2, e2, n3) => ({ content: e2(t2[2], n3) }), p: (t2, e2, n3) => U2("strong", { key: n3.g }, e2(t2.content, n3)) }, textEmphasized: { i: yt(X), l: Mt.LOW, _: (t2, e2, n3) => ({ content: e2(t2[2], n3) }), p: (t2, e2, n3) => U2("em", { key: n3.g }, e2(t2.content, n3)) }, textEscaped: { i: yt(K), l: Mt.HIGH, _: (t2) => ({ content: t2[1], type: "text" }) }, textStrikethroughed: { i: yt(J), l: Mt.LOW, _: zt, p: (t2, e2, n3) => U2("del", { key: n3.g }, e2(t2.content, n3)) } };
  H2.disableParsingRawHTML !== true && (lt2.htmlBlock = { i: kt($), l: Mt.HIGH, _(t2, e2, n3) {
    const [, r2] = t2[3].match(et), o2 = new RegExp(`^${r2}`, "gm"), a2 = t2[3].replace(o2, ""), u2 = (i2 = a2, st.some((t3) => t3.test(i2)) ? wt : St);
    var i2;
    const l2 = t2[1].toLowerCase(), s2 = c.indexOf(l2) !== -1;
    n3.m = n3.m || l2 === "a";
    const _2 = s2 ? t2[3] : u2(e2, a2, n3);
    return n3.m = false, { attrs: W2(t2[2]), content: _2, noInnerParse: s2, tag: s2 ? l2 : t2[1] };
  }, p: (t2, n3, r2) => U2(t2.tag, e({ key: r2.g }, t2.attrs), t2.noInnerParse ? t2.content : n3(t2.content, r2)) }, lt2.htmlSelfClosing = { i: kt(A), l: Mt.HIGH, _: (t2) => ({ attrs: W2(t2[2] || ""), tag: t2[1] }), p: (t2, n3, r2) => U2(t2.tag, e({}, t2.attrs, { key: r2.g })) });
  const ft2 = function(t2) {
    let e2 = Object.keys(t2);
    function n3(r2, o2) {
      let c2 = [], a2 = "";
      for (; r2; ) {
        let u2 = 0;
        for (; u2 < e2.length; ) {
          const i2 = e2[u2], l2 = t2[i2], s2 = l2.i(r2, o2, a2);
          if (s2) {
            const t3 = s2[0];
            r2 = r2.substring(t3.length);
            const e3 = l2._(s2, n3, o2);
            e3.type == null && (e3.type = i2), c2.push(e3), a2 = t3;
            break;
          }
          u2++;
        }
      }
      return c2;
    }
    return e2.sort(function(e3, n4) {
      let r2 = t2[e3].l, o2 = t2[n4].l;
      return r2 !== o2 ? r2 - o2 : e3 < n4 ? -1 : 1;
    }), function(t3, e3) {
      return n3(function(t4) {
        return t4.replace(y, "\n").replace(x, "").replace(P, "    ");
      }(t3), e3);
    };
  }(lt2), dt2 = (Ot2 = function(t2) {
    return function(e2, n3, r2) {
      return t2[e2.type].p(e2, n3, r2);
    };
  }(lt2), function t2(e2, n3 = {}) {
    if (Array.isArray(e2)) {
      const r2 = n3.g, o2 = [];
      let c2 = false;
      for (let r3 = 0; r3 < e2.length; r3++) {
        n3.g = r3;
        const a2 = t2(e2[r3], n3), u2 = typeof a2 == "string";
        u2 && c2 ? o2[o2.length - 1] += a2 : a2 !== null && o2.push(a2), c2 = u2;
      }
      return n3.g = r2, o2;
    }
    return Ot2(e2, t2, n3);
  });
  var Ot2;
  const Bt = V2(n2);
  return nt2.length ? U2("div", null, Bt, U2("footer", { key: "footer" }, nt2.map(function(t2) {
    return U2("div", { id: H2.slugify(t2.identifier), key: t2.identifier }, t2.identifier, dt2(ft2(t2.footnote, { o: true })));
  }))) : Bt;
}
!function(t2) {
  t2[t2.MAX = 0] = "MAX", t2[t2.HIGH = 1] = "HIGH", t2[t2.MED = 2] = "MED", t2[t2.LOW = 3] = "LOW", t2[t2.MIN = 4] = "MIN";
}(Mt || (Mt = {}));
var index_modern_default = (e2) => {
  let { children: r2, options: o2 } = e2, c2 = function(t2, e3) {
    if (t2 == null)
      return {};
    var n2, r3, o3 = {}, c3 = Object.keys(t2);
    for (r3 = 0; r3 < c3.length; r3++)
      e3.indexOf(n2 = c3[r3]) >= 0 || (o3[n2] = t2[n2]);
    return o3;
  }(e2, n);
  return t.cloneElement(Ot(r2, o2), c2);
};

// node_modules/grommet/es6/components/Paragraph/Paragraph.js
var import_react91 = __toESM(require_react());

// node_modules/grommet/es6/components/Paragraph/StyledParagraph.js
init_styled_components_browser_esm();
var colorStyle3 = Ce(["color:", ";"], function(props) {
  return normalizeColor(props.colorProp, props.theme);
});
var sizeStyle16 = function sizeStyle17(props) {
  var size = props.size || "medium";
  var data = props.theme.paragraph[size];
  return Ce(["font-size:", ";line-height:", ";max-width:", ";"], data ? data.size : size, data ? data.height : "normal", props.fillProp ? "none" : data && data.maxWidth);
};
var fontFamily4 = Ce(["font-family:", ";"], function(props) {
  return props.theme.paragraph.font.family;
});
var StyledParagraph = styled_components_browser_esm_default.p.withConfig({
  displayName: "StyledParagraph",
  componentId: "sc-tbetod-0"
})(["", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return sizeStyle16(props);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.colorProp && colorStyle3;
}, function(props) {
  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily4;
}, function(props) {
  return props.theme.paragraph && props.theme.paragraph.extend;
});
StyledParagraph.defaultProps = {};
Object.setPrototypeOf(StyledParagraph.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Paragraph/propTypes.js
var import_prop_types48 = __toESM(require_prop_types());
function _extends90() {
  _extends90 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends90.apply(this, arguments);
}
var PropType44 = {};
if (true) {
  PropType44 = _extends90({}, genericProps, {
    color: colorPropType,
    fill: import_prop_types48.default.bool,
    responsive: import_prop_types48.default.bool,
    size: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["small", "medium", "large", "xlarge", "xxlarge"]), import_prop_types48.default.string]),
    textAlign: import_prop_types48.default.oneOf(["start", "center", "end", "justify"])
  });
}
var ParagraphPropTypes = PropType44;

// node_modules/grommet/es6/components/Paragraph/Paragraph.js
var _excluded55 = ["color", "fill"];
function _extends91() {
  _extends91 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends91.apply(this, arguments);
}
function _objectWithoutPropertiesLoose50(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Paragraph = (0, import_react91.forwardRef)(function(_ref, ref) {
  var color = _ref.color, fill = _ref.fill, rest = _objectWithoutPropertiesLoose50(_ref, _excluded55);
  return import_react91.default.createElement(StyledParagraph, _extends91({
    ref,
    colorProp: color,
    fillProp: fill
  }, rest));
});
Paragraph.displayName = "Paragraph";
Paragraph.prototype = ParagraphPropTypes;

// node_modules/grommet/es6/components/Markdown/propTypes.js
var import_prop_types49 = __toESM(require_prop_types());
var PropType45 = {};
if (true) {
  PropType45 = {
    components: import_prop_types49.default.object,
    options: import_prop_types49.default.shape({})
  };
}
var MarkdownPropTypes = PropType45;

// node_modules/grommet/es6/components/Markdown/Markdown.js
var _excluded56 = ["children", "components", "options", "theme"];
function _extends92() {
  _extends92 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends92.apply(this, arguments);
}
function _objectWithoutPropertiesLoose51(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var GrommetMarkdown = (0, import_react92.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, components = _ref.components, options = _ref.options, theme = _ref.theme, rest = _objectWithoutPropertiesLoose51(_ref, _excluded56);
  var heading = [1, 2, 3, 4].reduce(function(obj, level) {
    var result = _extends92({}, obj);
    result["h" + level] = {
      component: Heading,
      props: {
        level
      }
    };
    return result;
  }, {});
  var overrides = deepMerge({
    a: {
      component: Anchor
    },
    img: {
      component: Image
    },
    p: {
      component: Paragraph
    },
    table: {
      component: Table
    },
    td: {
      component: TableCell,
      props: {
        plain: true
      }
    },
    tbody: {
      component: TableBody
    },
    tfoot: {
      component: TableFooter
    },
    th: {
      component: TableCell
    },
    thead: {
      component: TableHeader
    },
    tr: {
      component: TableRow
    }
  }, heading, components, options && options.overrides);
  return import_react92.default.createElement("div", _extends92({
    ref
  }, rest), import_react92.default.createElement(index_modern_default, {
    children: children2,
    options: _extends92({
      wrapper: import_react92.Fragment
    }, options, {
      overrides
    })
  }));
});
GrommetMarkdown.propTypes = MarkdownPropTypes;

// node_modules/grommet/es6/components/Menu/Menu.js
var import_react93 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Menu/propTypes.js
var import_prop_types50 = __toESM(require_prop_types());
function _extends93() {
  _extends93 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends93.apply(this, arguments);
}
var VERTICAL_ALIGN_OPTIONS = ["top", "bottom"];
var HORIZONTAL_ALIGN_OPTIONS = ["right", "left"];
var PropType46 = {};
if (true) {
  PropType46 = _extends93({}, genericProps, {
    children: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.node]),
    disabled: import_prop_types50.default.bool,
    dropAlign: import_prop_types50.default.shape({
      top: import_prop_types50.default.oneOf(VERTICAL_ALIGN_OPTIONS),
      bottom: import_prop_types50.default.oneOf(VERTICAL_ALIGN_OPTIONS),
      left: import_prop_types50.default.oneOf(HORIZONTAL_ALIGN_OPTIONS),
      right: import_prop_types50.default.oneOf(HORIZONTAL_ALIGN_OPTIONS)
    }),
    dropBackground: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.shape({
      color: import_prop_types50.default.string,
      opacity: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.number, import_prop_types50.default.oneOf(["weak", "medium", "strong"])])
    })]),
    dropTarget: import_prop_types50.default.object,
    dropProps: import_prop_types50.default.object,
    justifyContent: import_prop_types50.default.oneOf(["start", "center", "end", "between", "around", "stretch"]),
    icon: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.node]),
    items: import_prop_types50.default.arrayOf(import_prop_types50.default.object).isRequired,
    label: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.node]),
    messages: import_prop_types50.default.shape({
      closeMenu: import_prop_types50.default.string,
      openMenu: import_prop_types50.default.string
    }),
    open: import_prop_types50.default.bool,
    size: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types50.default.string])
  });
}
var MenuPropTypes = PropType46;

// node_modules/grommet/es6/components/Menu/Menu.js
var _excluded57 = ["a11yTitle", "aria-label", "children", "disabled", "dropAlign", "dropBackground", "dropProps", "dropTarget", "justifyContent", "icon", "items", "label", "messages", "onKeyDown", "open", "plain", "size"];
var _excluded216 = ["align"];
function _extends94() {
  _extends94 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends94.apply(this, arguments);
}
function _objectWithoutPropertiesLoose52(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ContainerBox3 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Menu__ContainerBox",
  componentId: "sc-17fcys9-0"
})(["max-height:inherit;@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}:focus{outline:none;}", ";"], function(props) {
  return props.theme.menu.extend;
});
var Menu = (0, import_react93.forwardRef)(function(props, ref) {
  var a11yTitle = props.a11yTitle, ariaLabel = props["aria-label"], children2 = props.children, disabled = props.disabled, dropAlign2 = props.dropAlign, dropBackground = props.dropBackground, dropProps = props.dropProps, dropTarget = props.dropTarget, justifyContent = props.justifyContent, icon = props.icon, items = props.items, label = props.label, messages = props.messages, onKeyDown = props.onKeyDown, open = props.open, plain = props.plain, size = props.size, rest = _objectWithoutPropertiesLoose52(props, _excluded57);
  var theme = (0, import_react93.useContext)(Ge) || defaultProps2.theme;
  var _useContext = (0, import_react93.useContext)(MessageContext), format3 = _useContext.format;
  var iconColor = normalizeColor(theme.menu.icons.color || "control", theme);
  var _theme$menu$drop = theme.menu.drop, themeDropAlign = _theme$menu$drop.align, themeDropProps = _objectWithoutPropertiesLoose52(_theme$menu$drop, _excluded216);
  var align = dropProps && dropProps.align || dropAlign2 || themeDropAlign;
  var controlButtonIndex = (0, import_react93.useMemo)(function() {
    if (align.top === "top")
      return -1;
    if (align.bottom === "bottom")
      return items.length;
    return void 0;
  }, [align, items]);
  var _useState = (0, import_react93.useState)(), alignControlMirror = _useState[0], setAlignControlMirror = _useState[1];
  var initialAlignTop = alignControlMirror === align.top;
  var dropContainerRef = (0, import_react93.useRef)();
  var buttonRefs = (0, import_react93.useRef)([]);
  var constants = (0, import_react93.useMemo)(function() {
    return {
      none: "none",
      tab: 9,
      controlTop: align.top === "top" || void 0,
      controlBottom: align.bottom === "bottom" || void 0,
      controlButtonIndex
    };
  }, [align, controlButtonIndex]);
  var _useState2 = (0, import_react93.useState)(constants.none), activeItemIndex = _useState2[0], setActiveItemIndex = _useState2[1];
  var _useState3 = (0, import_react93.useState)(open || false), isOpen = _useState3[0], setOpen = _useState3[1];
  var MenuIcon = isOpen && theme.menu.icons.up ? theme.menu.icons.up : theme.menu.icons.down;
  var onDropClose = (0, import_react93.useCallback)(function() {
    setActiveItemIndex(constants.none);
    setOpen(false);
  }, [constants.none]);
  var onDropOpen = (0, import_react93.useCallback)(function() {
    setOpen(true);
  }, []);
  (0, import_react93.useEffect)(function() {
    var timer = setTimeout(function() {
      if (isOpen) {
        var optionsNode = dropContainerRef.current;
        if (optionsNode) {
          optionsNode.focus();
        }
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, [isOpen]);
  var onSelectMenuItem = function onSelectMenuItem2(event) {
    if (isOpen) {
      if (activeItemIndex >= 0) {
        event.preventDefault();
        event.stopPropagation();
        buttonRefs.current[activeItemIndex].click();
      }
    } else {
      onDropOpen();
    }
  };
  var isTab = function isTab2(event) {
    return event.keyCode === constants.tab || event.which === constants.tab;
  };
  var onNextMenuItem = function onNextMenuItem2(event) {
    event.preventDefault();
    if (!isOpen) {
      onDropOpen();
    } else if (isTab(event) && (!constants.controlBottom && activeItemIndex === items.length - 1 || constants.controlBottom && activeItemIndex === controlButtonIndex)) {
      onDropClose();
    } else {
      var index;
      if (constants.controlBottom && activeItemIndex === controlButtonIndex || !constants.controlBottom && activeItemIndex === items.length - 1 || activeItemIndex === constants.none) {
        index = 0;
      } else {
        index = activeItemIndex + 1;
      }
      setActiveItemIndex(index);
      if (buttonRefs.current[index]) {
        buttonRefs.current[index].focus();
      }
    }
  };
  var onPreviousMenuItem = function onPreviousMenuItem2(event) {
    event.preventDefault();
    if (!isOpen) {
      onDropOpen();
    } else if (isTab(event) && (constants.controlTop && activeItemIndex === controlButtonIndex || !constants.controlTop && activeItemIndex - 1 < 0)) {
      onDropClose();
    } else {
      var index;
      if (activeItemIndex === "none") {
        index = items.length - 1;
      } else if (activeItemIndex - 1 < 0) {
        if (constants.controlTop && activeItemIndex - 1 === controlButtonIndex) {
          index = items.length;
        } else {
          index = items.length - 1;
        }
      } else {
        index = activeItemIndex - 1;
      }
      setActiveItemIndex(index);
      if (buttonRefs.current[index]) {
        buttonRefs.current[index].focus();
      }
    }
  };
  var menuIcon = icon !== false ? icon !== true && icon || import_react93.default.createElement(MenuIcon, {
    color: iconColor,
    size
  }) : null;
  var buttonProps = {
    plain,
    size
  };
  var content;
  if (children2) {
    content = children2;
  } else if (!theme.button["default"]) {
    content = import_react93.default.createElement(Box, {
      direction: "row",
      justify: justifyContent,
      align: "center",
      pad: "small",
      gap: label && icon !== false ? "small" : void 0
    }, import_react93.default.createElement(Text, {
      size
    }, label), menuIcon);
  } else {
    buttonProps = {
      icon: menuIcon,
      label,
      plain,
      reverse: true,
      size
    };
    content = void 0;
  }
  var controlMirror = import_react93.default.createElement(Box, {
    flex: false
  }, import_react93.default.createElement(Button, _extends94({
    ref: function ref2(r2) {
      buttonRefs.current[items.length] = r2;
    },
    a11yTitle: ariaLabel || a11yTitle || format3({
      id: "menu.closeMenu",
      messages
    }),
    active: activeItemIndex === controlButtonIndex,
    focusIndicator: false,
    hoverIndicator: "background",
    onClick: onDropClose,
    onFocus: function onFocus() {
      return setActiveItemIndex(controlButtonIndex);
    },
    tabIndex: activeItemIndex === constants.none ? "-1" : void 0
  }, buttonProps), typeof content === "function" ? function() {
    return content(_extends94({}, props, {
      drop: true
    }));
  } : content));
  return import_react93.default.createElement(Keyboard, {
    onDown: onDropOpen,
    onUp: onDropOpen,
    onSpace: onSelectMenuItem,
    onEsc: onDropClose,
    onTab: onDropClose,
    onKeyDown
  }, import_react93.default.createElement(DropButton, _extends94({
    ref
  }, rest, buttonProps, {
    a11yTitle: ariaLabel || a11yTitle || format3({
      id: "menu.openMenu",
      messages
    }),
    onAlign: setAlignControlMirror,
    disabled,
    dropAlign: align,
    dropTarget,
    dropProps: dropProps || themeDropProps,
    open: isOpen,
    onOpen: onDropOpen,
    onClose: onDropClose,
    dropContent: import_react93.default.createElement(Keyboard, {
      onTab: function onTab(event) {
        return event.shiftKey ? onPreviousMenuItem(event) : onNextMenuItem(event);
      },
      onDown: onNextMenuItem,
      onUp: onPreviousMenuItem,
      onEnter: onSelectMenuItem
    }, import_react93.default.createElement(ContainerBox3, {
      ref: dropContainerRef,
      tabIndex: -1,
      background: dropBackground || theme.menu.background
    }, alignControlMirror === "top" && align.top === "top" ? controlMirror : void 0, import_react93.default.createElement(Box, {
      overflow: "auto"
    }, items.map(function(item, index) {
      var child = !theme.button.option ? import_react93.default.createElement(Box, {
        align: "start",
        pad: "small",
        direction: "row",
        gap: item.gap,
        justify: item.justify
      }, item.reverse && item.label, item.icon, !item.reverse && item.label) : void 0;
      return import_react93.default.createElement(Box, {
        key: index,
        flex: false
      }, import_react93.default.createElement(Button, _extends94({
        ref: function ref2(r2) {
          buttonRefs.current[index] = r2;
        },
        onFocus: function onFocus() {
          setActiveItemIndex(index);
        },
        active: activeItemIndex === index,
        focusIndicator: false,
        plain: !child ? void 0 : true,
        align: "start",
        justify: item.justify,
        kind: !child ? "option" : void 0,
        hoverIndicator: !child ? void 0 : "background"
      }, !child ? item : _extends94({}, item, {
        gap: void 0,
        icon: void 0,
        label: void 0,
        reverse: void 0
      }), {
        onClick: function onClick() {
          if (item.onClick) {
            item.onClick.apply(item, arguments);
          }
          if (item.close !== false) {
            onDropClose();
          }
        }
      }), child));
    })), !initialAlignTop && (alignControlMirror === "bottom" || align.bottom === "bottom") ? controlMirror : void 0))
  }), content));
});
Menu.defaultProps = {
  items: [],
  messages: void 0,
  justifyContent: "start"
};
Menu.displayName = "Menu";
Menu.propTypes = MenuPropTypes;

// node_modules/grommet/es6/components/Meter/Meter.js
var import_react96 = __toESM(require_react());

// node_modules/grommet/es6/components/Meter/Bar.js
var import_react94 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Meter/StyledMeter.js
init_styled_components_browser_esm();
var roundStyle5 = Ce(["border-radius:", ";"], function(props) {
  return props.theme.global.edgeSize[props.round.size];
});
var StyledMeter = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledMeter",
  componentId: "sc-nsxarx-0"
})(["max-width:100%;overflow:hidden;", " ", " path{transition:stroke 0.3s,stroke-width 0.3s;}", ";"], genericStyles, function(props) {
  return props.round && roundStyle5;
}, function(props) {
  return props.theme.meter && props.theme.meter.extend;
});
StyledMeter.defaultProps = {};
Object.setPrototypeOf(StyledMeter.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Meter/utils.js
var strokeProps = function strokeProps2(color, theme) {
  var result = {};
  if (color) {
    if (typeof color === "object") {
      result.stroke = normalizeColor(color.color, theme);
      if (color.opacity) {
        result.strokeOpacity = "" + (color.opacity === true ? theme.global.opacity.medium : theme.global.opacity[color.opacity] || color.opacity);
      }
    } else {
      result.stroke = normalizeColor(color, theme);
    }
  }
  return result;
};
var neutralExp = /^neutral-\d+/;
var defaultColor = function defaultColor2(index, theme, valuesLength) {
  if (index === valuesLength - 1 && theme.meter.color) {
    return theme.meter.color;
  }
  var colorIndex = valuesLength - index - 1;
  if (theme.meter && theme.meter.colors) {
    var _colors = theme.meter.colors[theme.dark ? "dark" : "light"] || theme.meter.colors;
    return _colors[colorIndex % _colors.length];
  }
  var colors3 = Object.keys(theme.global.colors).filter(function(n2) {
    return n2.match(/^graph-[0-9]$/);
  });
  if (colors3.length > 0) {
    return colors3[colorIndex % colors3.length];
  }
  var neutralColors3 = Object.keys(theme.global.colors).filter(function(k2) {
    return neutralExp.test(k2);
  });
  return neutralColors3[colorIndex % neutralColors3.length];
};

// node_modules/grommet/es6/components/Meter/Bar.js
var _excluded58 = ["background", "max", "round", "size", "thickness", "direction", "values"];
var _excluded217 = ["color", "highlight", "label", "onHover", "value"];
function _extends95() {
  _extends95 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends95.apply(this, arguments);
}
function _objectWithoutPropertiesLoose53(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Bar = (0, import_react94.forwardRef)(function(props, ref) {
  var background = props.background, max = props.max, round3 = props.round, size = props.size, thicknessProp = props.thickness, direction = props.direction, values = props.values, rest = _objectWithoutPropertiesLoose53(props, _excluded58);
  var theme = (0, import_react94.useContext)(Ge) || defaultProps2.theme;
  var length = size === "full" ? 288 : parseMetricToNum(theme.global.size[size] || size);
  var thickness = parseMetricToNum(theme.global.edgeSize[thicknessProp] || thicknessProp);
  var capOffset = round3 ? thickness / 2 : 0;
  var mid = thickness / 2;
  var someHighlight = (values || []).some(function(v2) {
    return v2.highlight;
  });
  var start = direction === "horizontal" ? capOffset : max * (length - 2 * capOffset) / max;
  var paths = (values || []).reduce(function(acc, valueArg, index) {
    if (valueArg.value > 0) {
      var color = valueArg.color, highlight = valueArg.highlight, label = valueArg.label, onHover = valueArg.onHover, value = valueArg.value, pathRest = _objectWithoutPropertiesLoose53(valueArg, _excluded217);
      var key = "p-" + index;
      var delta = value * (length - 2 * capOffset) / max;
      var d2 = direction === "horizontal" ? "M " + start + "," + mid + " L " + (start + delta) + "," + mid : "M " + mid + "," + start + " L " + mid + "," + (start - delta);
      var colorName = color || defaultColor(index, theme, values ? values.length : 0);
      var hoverProps;
      if (onHover) {
        hoverProps = {
          onMouseOver: function onMouseOver() {
            return onHover(true);
          },
          onMouseLeave: function onMouseLeave() {
            return onHover(false);
          }
        };
      }
      if (direction === "horizontal") {
        start += delta;
      } else {
        start -= delta;
      }
      var result = import_react94.default.createElement("path", _extends95({
        key,
        d: d2,
        fill: "none"
      }, strokeProps(someHighlight && !highlight ? background : colorName, theme), {
        strokeWidth: direction === "horizontal" ? thickness : length,
        strokeLinecap: round3 ? "round" : "butt"
      }, hoverProps, pathRest));
      acc.push(result);
    }
    return acc;
  }, []).reverse();
  var width;
  if (direction === "horizontal") {
    width = size === "full" ? "100%" : length;
  } else {
    width = size === "full" ? "100%" : thickness;
  }
  var backgroundPath = direction === "horizontal" ? "M " + capOffset + "," + mid + " L " + (length - capOffset) + "," + mid : "M " + mid + "," + capOffset + " L " + mid + "," + (length - capOffset);
  return import_react94.default.createElement(StyledMeter, _extends95({
    ref,
    viewBox: direction === "horizontal" ? "0 0 " + length + " " + thickness : "0 0 " + thickness + " " + length,
    preserveAspectRatio: "none",
    width,
    height: direction === "horizontal" ? thickness : length,
    round: round3 ? {
      size: thicknessProp
    } : void 0
  }, rest), import_react94.default.createElement("path", _extends95({
    d: backgroundPath,
    fill: "none"
  }, strokeProps(background, theme), {
    strokeWidth: thickness,
    strokeLinecap: round3 ? "round" : "square"
  })), paths);
});
Bar.displayName = "Bar";
Bar.defaultProps = {
  background: "light-1"
};
Object.setPrototypeOf(Bar.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Meter/Circle.js
var import_react95 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded59 = ["background", "max", "round", "size", "thickness", "type", "values"];
var _excluded218 = ["color", "highlight", "label", "onHover", "value"];
function _extends96() {
  _extends96 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends96.apply(this, arguments);
}
function _objectWithoutPropertiesLoose54(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Circle = (0, import_react95.forwardRef)(function(props, ref) {
  var background = props.background, max = props.max, round3 = props.round, size = props.size, thickness = props.thickness, type = props.type, values = props.values, rest = _objectWithoutPropertiesLoose54(props, _excluded59);
  var theme = (0, import_react95.useContext)(Ge);
  var width = size === "full" ? 288 : parseMetricToNum(theme.global.size[size] || size);
  var strokeWidth = type === "pie" ? width / 2 : parseMetricToNum(theme.global.edgeSize[thickness] || thickness);
  var centerX = width / 2;
  var centerY = width / 2;
  var radius = width / 2 - strokeWidth / 2;
  var anglePer = (type === "semicircle" ? 180 : 360) / max;
  var someHighlight = (values || []).some(function(v2) {
    return v2.highlight;
  });
  var startValue = 0;
  var startAngle = type === "semicircle" ? 270 : 0;
  var paths = [];
  var pathCaps = [];
  (values || []).filter(function(v2) {
    return v2.value > 0;
  }).forEach(function(valueArg, index) {
    var color = valueArg.color, highlight = valueArg.highlight, label = valueArg.label, onHover = valueArg.onHover, value = valueArg.value, pathRest = _objectWithoutPropertiesLoose54(valueArg, _excluded218);
    var key = "p-" + index;
    var colorName = color || defaultColor(index, theme, values ? values.length : 0);
    var endAngle;
    if (startValue + value >= max) {
      endAngle = type === "semicircle" ? 90 : 360;
    } else {
      endAngle = translateEndAngle(startAngle, anglePer, value);
    }
    var hoverProps;
    if (onHover) {
      hoverProps = {
        onMouseOver: function onMouseOver() {
          return onHover(true);
        },
        onMouseLeave: function onMouseLeave() {
          return onHover(false);
        }
      };
    }
    var stroke = strokeProps(someHighlight && !highlight ? background : colorName, theme);
    if (round3) {
      var d12 = arcCommands(centerX, centerY, radius, startAngle, endAngle);
      paths.unshift(import_react95.default.createElement("path", _extends96({
        key,
        d: d12,
        fill: "none"
      }, stroke, {
        strokeWidth,
        strokeLinecap: "round"
      }, hoverProps, pathRest)));
      var d2 = arcCommands(centerX, centerY, radius, endAngle - 0.5, endAngle);
      var pathCap = import_react95.default.createElement("path", _extends96({
        key: key + "-",
        d: d2,
        fill: "none"
      }, stroke, {
        strokeWidth,
        strokeLinecap: "round"
      }, hoverProps, pathRest));
      if (endAngle - startAngle > 2 * anglePer) {
        pathCaps = [];
      }
      pathCaps.unshift(pathCap);
    } else {
      var d3 = arcCommands(centerX, centerY, radius, startAngle, endAngle);
      paths.push(import_react95.default.createElement("path", _extends96({
        key,
        d: d3,
        fill: "none"
      }, stroke, {
        strokeWidth,
        strokeLinecap: "butt"
      }, hoverProps, pathRest)));
    }
    startValue += value;
    startAngle = endAngle;
  });
  var track;
  if (type === "semicircle") {
    var d1 = arcCommands(centerX, centerY, radius, 270, 90);
    track = import_react95.default.createElement("path", _extends96({
      d: d1,
      strokeWidth,
      fill: "none"
    }, strokeProps(background, theme), {
      strokeLinecap: round3 ? "round" : "square"
    }));
  } else {
    track = import_react95.default.createElement("circle", _extends96({
      cx: centerX,
      cy: centerY,
      r: radius
    }, strokeProps(background, theme), {
      strokeWidth,
      strokeLinecap: round3 ? "round" : "square",
      fill: "none"
    }));
  }
  var viewBoxHeight = type === "semicircle" ? width / 2 : width;
  return import_react95.default.createElement(StyledMeter, _extends96({
    ref,
    viewBox: "0 0 " + width + " " + viewBoxHeight,
    width: size === "full" ? "100%" : width,
    height: size === "full" ? "100%" : viewBoxHeight
  }, rest), track, paths, pathCaps);
});
Circle.displayName = "Circle";
Circle.defaultProps = {};
Object.setPrototypeOf(Circle.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Meter/propTypes.js
var import_prop_types51 = __toESM(require_prop_types());
function _extends97() {
  _extends97 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends97.apply(this, arguments);
}
var PropType47 = {};
if (true) {
  PropType47 = _extends97({}, genericProps, {
    background: import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.shape({
      color: import_prop_types51.default.string,
      opacity: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["weak", "medium", "strong"]), import_prop_types51.default.number, import_prop_types51.default.bool])
    })]),
    color: import_prop_types51.default.string,
    max: import_prop_types51.default.oneOfType([import_prop_types51.default.number, import_prop_types51.default.string]),
    round: import_prop_types51.default.bool,
    size: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "full"]), import_prop_types51.default.string]),
    thickness: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types51.default.string]),
    type: import_prop_types51.default.oneOf(["bar", "circle", "pie", "semicircle"]),
    direction: import_prop_types51.default.oneOf(["horizontal", "vertical"]),
    value: import_prop_types51.default.number,
    values: import_prop_types51.default.arrayOf(import_prop_types51.default.shape({
      color: import_prop_types51.default.string,
      highlight: import_prop_types51.default.bool,
      label: import_prop_types51.default.string.isRequired,
      onClick: import_prop_types51.default.func,
      onHover: import_prop_types51.default.func,
      value: import_prop_types51.default.number.isRequired
    }))
  });
}
var MeterPropTypes = PropType47;

// node_modules/grommet/es6/components/Meter/Meter.js
var _excluded60 = ["background", "color", "direction", "size", "thickness", "type", "value", "values"];
function _extends98() {
  _extends98 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends98.apply(this, arguments);
}
function _objectWithoutPropertiesLoose55(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var deriveMax = function deriveMax2(values) {
  var max = 100;
  if (values && values.length > 1) {
    max = 0;
    values.forEach(function(v2) {
      max += v2.value;
    });
  }
  return max;
};
var Meter = (0, import_react96.forwardRef)(function(_ref, ref) {
  var _ref$background = _ref.background, background = _ref$background === void 0 ? {
    color: "light-2",
    opacity: "medium"
  } : _ref$background, color = _ref.color, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "horizontal" : _ref$direction, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, _ref$thickness = _ref.thickness, thickness = _ref$thickness === void 0 ? "medium" : _ref$thickness, _ref$type = _ref.type, type = _ref$type === void 0 ? "bar" : _ref$type, value = _ref.value, valuesProp = _ref.values, rest = _objectWithoutPropertiesLoose55(_ref, _excluded60);
  var values = (0, import_react96.useMemo)(function() {
    if (valuesProp)
      return valuesProp;
    if (value)
      return [{
        color,
        value
      }];
    return [];
  }, [color, value, valuesProp]);
  var memoizedMax = (0, import_react96.useMemo)(function() {
    return deriveMax(values);
  }, [values]);
  var content;
  if (type === "bar") {
    content = import_react96.default.createElement(Bar, _extends98({
      ref,
      max: memoizedMax,
      values,
      size,
      thickness,
      background,
      direction
    }, rest));
  } else if (type === "circle" || type === "pie" || type === "semicircle") {
    content = import_react96.default.createElement(Circle, _extends98({
      ref,
      max: memoizedMax,
      values,
      size,
      thickness,
      type,
      background
    }, rest));
  }
  return content;
});
Meter.displayName = "Meter";
Meter.prototype = MeterPropTypes;

// node_modules/grommet/es6/components/NameValuePair/NameValuePair.js
var import_react98 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/NameValueList/NameValueListContext.js
var import_react97 = __toESM(require_react());
var NameValueListContext = import_react97.default.createContext({});

// node_modules/grommet/es6/components/NameValuePair/NameValuePair.js
function _extends99() {
  _extends99 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends99.apply(this, arguments);
}
var NameValuePair = function NameValuePair2(_ref) {
  var _theme$nameValuePair, _theme$nameValuePair$;
  var children2 = _ref.children, nameProp = _ref.name;
  var _useContext = (0, import_react98.useContext)(NameValueListContext), nameProps = _useContext.nameProps, pairProps = _useContext.pairProps, valueProps = _useContext.valueProps;
  var size = (0, import_react98.useContext)(ResponsiveContext);
  var theme = (0, import_react98.useContext)(Ge);
  var direction = pairProps == null ? void 0 : pairProps.direction;
  var column = direction === "column" || direction === "column-reverse" || size === "small";
  var Container2 = column ? Box : import_react98.Fragment;
  var nameAlign = size !== "small" ? nameProps == null ? void 0 : nameProps.align : void 0;
  var valueAlign = size !== "small" ? valueProps == null ? void 0 : valueProps.align : void 0;
  var valueGap;
  if (column && (_theme$nameValuePair = theme.nameValuePair) != null && (_theme$nameValuePair$ = _theme$nameValuePair.column) != null && _theme$nameValuePair$.gap)
    valueGap = {
      bottom: theme.nameValuePair.column.gap
    };
  var name;
  if (typeof nameProp === "string" || typeof nameProp === "number")
    name = import_react98.default.createElement(Text, _extends99({
      as: "dt",
      margin: valueGap,
      textAlign: nameAlign
    }, theme.nameValuePair.name), nameProp);
  else
    name = import_react98.default.createElement(Box, {
      as: "dt",
      align: nameAlign
    }, nameProp);
  var value;
  if (typeof children2 === "string" || typeof children2 === "number")
    value = import_react98.default.createElement(Text, _extends99({
      as: "dd",
      margin: "none",
      textAlign: valueAlign
    }, theme.nameValuePair.value), children2);
  else
    value = import_react98.default.createElement(Box, {
      margin: "none",
      as: "dd",
      align: valueAlign
    }, children2);
  var first = direction !== "column-reverse" ? name : value;
  var second = direction !== "column-reverse" ? value : name;
  return import_react98.default.createElement(Container2, null, first, second);
};

// node_modules/grommet/es6/components/NameValueList/NameValueList.js
var import_react99 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded61 = ["align", "layout", "nameProps", "pairProps", "valueProps"];
function _extends100() {
  _extends100 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends100.apply(this, arguments);
}
function _objectWithoutPropertiesLoose56(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var NameValueList = (0, import_react99.forwardRef)(function(_ref, ref) {
  var _theme$nameValueList$, _theme$nameValueList$2;
  var align = _ref.align, _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? "column" : _ref$layout, nameProps = _ref.nameProps, _ref$pairProps = _ref.pairProps, pairProps = _ref$pairProps === void 0 ? {
    direction: "row"
  } : _ref$pairProps, valueProps = _ref.valueProps, rest = _objectWithoutPropertiesLoose56(_ref, _excluded61);
  var size = (0, import_react99.useContext)(ResponsiveContext);
  var theme = (0, import_react99.useContext)(Ge);
  var columns;
  var valueWidth = (valueProps == null ? void 0 : valueProps.width) || theme.nameValueList.value.width;
  var nameWidth = (nameProps == null ? void 0 : nameProps.width) || theme.nameValueList.name.width;
  if (size === "small" || layout === "grid")
    columns = {
      count: "fit",
      size: !Array.isArray(valueWidth) ? ["auto", valueWidth] : valueWidth
    };
  else if (layout === "column" && pairProps.direction === "row")
    columns = [nameWidth, !Array.isArray(valueWidth) ? ["auto", valueWidth] : valueWidth];
  else
    columns = [valueWidth];
  var gap = theme.nameValueList.gap;
  if ((pairProps.direction === "column" || size === "small") && (_theme$nameValueList$ = theme.nameValueList.pair) != null && (_theme$nameValueList$2 = _theme$nameValueList$.column) != null && _theme$nameValueList$2.gap) {
    gap = theme.nameValueList.pair.column.gap;
  }
  var listContextValue = (0, import_react99.useMemo)(function() {
    return {
      nameProps,
      pairProps,
      valueProps
    };
  }, [nameProps, pairProps, valueProps]);
  return import_react99.default.createElement(NameValueListContext.Provider, {
    value: listContextValue
  }, import_react99.default.createElement(Grid, _extends100({
    as: "dl",
    ref,
    columns,
    gap,
    fill: layout === "grid",
    margin: "none"
  }, rest)));
});
NameValueList.displayName = "NameValueList";

// node_modules/grommet/es6/components/Notification/Notification.js
var import_react100 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Notification/propTypes.js
var import_prop_types52 = __toESM(require_prop_types());
var PropType48 = {};
if (true) {
  PropType48 = {
    title: import_prop_types52.default.string.isRequired,
    message: import_prop_types52.default.string,
    status: import_prop_types52.default.oneOf(["critical", "warning", "normal", "unknown"]),
    toast: import_prop_types52.default.oneOfType([import_prop_types52.default.bool, import_prop_types52.default.shape({
      autoClose: import_prop_types52.default.bool,
      position: import_prop_types52.default.oneOf(["bottom", "bottom-left", "bottom-right", "center", "end", "hidden", "left", "right", "start", "top", "top-left", "top-right"])
    })]),
    onClose: import_prop_types52.default.func
  };
}
var NotificationType = PropType48;

// node_modules/grommet/es6/components/Notification/Notification.js
function _extends101() {
  _extends101 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends101.apply(this, arguments);
}
var Notification = function Notification2(_ref) {
  var message = _ref.message, onClose = _ref.onClose, id = _ref.id, status = _ref.status, title = _ref.title, toast = _ref.toast;
  var autoClose = (toast == null ? void 0 : toast.autoClose) === void 0 ? true : toast.autoClose;
  var theme = (0, import_react100.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react100.useState)(true), visible = _useState[0], setVisible = _useState[1];
  var position = (0, import_react100.useMemo)(function() {
    return toast && (toast == null ? void 0 : toast.position) || "top";
  }, [toast]);
  var close = (0, import_react100.useCallback)(function() {
    setVisible(false);
    if (onClose)
      onClose();
  }, [onClose]);
  (0, import_react100.useEffect)(function() {
    if (autoClose) {
      var timer = setTimeout(close, theme.notification.toast.time || theme.notification.time);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [autoClose, close, theme.notification.toast.time, theme.notification.time]);
  var CloseIcon = theme.notification.close.icon;
  var _theme$notification$s = theme.notification[status], StatusIcon = _theme$notification$s.icon, color = _theme$notification$s.color;
  var closeIconColor = theme.notification.close.color;
  var content = import_react100.default.createElement(Box, _extends101({}, theme.notification.container, toast ? _extends101({}, theme.notification.toast.container) : {}, {
    direction: "row"
  }), import_react100.default.createElement(Box, theme.notification.iconContainer, import_react100.default.createElement(StatusIcon, {
    color
  })), import_react100.default.createElement(Box, _extends101({}, theme.notification.textContainer, {
    align: "start",
    direction: "row",
    justify: "between",
    flex: true
  }), import_react100.default.createElement(Box, null, import_react100.default.createElement(Text, theme.notification.title, title), message && import_react100.default.createElement(Paragraph, theme.notification.message, message)), onClose && import_react100.default.createElement(Button, {
    icon: import_react100.default.createElement(CloseIcon, {
      color: closeIconColor
    }),
    onClick: close,
    plain: true
  })));
  if (toast) {
    content = visible && import_react100.default.createElement(Layer, _extends101({}, theme.notification.toast.layer, {
      role: "log",
      modal: false,
      onEsc: onClose,
      id,
      responsive: true,
      plain: true,
      position
    }), content);
  }
  return content;
};
Notification.defaultProps = {
  status: "unknown",
  toast: false
};
Object.setPrototypeOf(Notification.defaultProps, defaultProps2);
Notification.displayName = "Notification";
Notification.propTypes = NotificationType;

// node_modules/grommet/es6/components/RangeInput/RangeInput.js
var import_react101 = __toESM(require_react());

// node_modules/grommet/es6/components/RangeInput/StyledRangeInput.js
init_styled_components_browser_esm();
var getBoundOpacity = function getBoundOpacity2(props, bound) {
  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].opacity ? props.theme.rangeInput.track[bound].opacity : 1;
};
var getBoundColor = function getBoundColor2(props, bound) {
  if (props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].color) {
    return getRGBA(normalizeColor(props.theme.rangeInput.track[bound].color, props.theme), getBoundOpacity(props, bound));
  }
  return getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), getBoundOpacity(props, bound));
};
var trackColorStyle = function trackColorStyle2(props) {
  var _props$theme$rangeInp, _props$theme$rangeInp2;
  var max = props.max, min = props.min;
  var thumbPosition = ((props.value || 0) - min) / (max - min) * 100 + "%";
  var defaultTrackColor;
  if (props.theme.rangeInput && props.theme.rangeInput.track && !props.theme.rangeInput.track.lower && !props.theme.rangeInput.track.upper) {
    var color = getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), 0.2);
    if (color === "rgba(0, 0, 0, 0.2)") {
      defaultTrackColor = color;
    } else {
      defaultTrackColor = getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), props.theme.rangeInput.track.opacity || 1);
    }
    if (!props.color)
      return "background: " + defaultTrackColor;
  }
  var upperTrackColor = (_props$theme$rangeInp = props.theme.rangeInput.track) != null && _props$theme$rangeInp.upper ? getBoundColor(props, "upper") : defaultTrackColor;
  var lowerTrackColor = (_props$theme$rangeInp2 = props.theme.rangeInput.track) != null && _props$theme$rangeInp2.lower ? getBoundColor(props, "lower") : getRGBA(normalizeColor(props.theme.global.colors.control, props.theme), props.theme.rangeInput.track.opacity || 1);
  if (typeof props.color === "string" || typeof props.color === "object" && !Array.isArray(props.color)) {
    lowerTrackColor = normalizeColor(props.color, props.theme);
    return "background: linear-gradient(\n        to right,\n        " + lowerTrackColor + ",\n        " + lowerTrackColor + " " + thumbPosition + ",\n        " + upperTrackColor + " " + thumbPosition + ",\n        " + upperTrackColor + "\n      );\n    ";
  }
  if (Array.isArray(props.color)) {
    var arrayOfTrackColors = props.color;
    var valuePercentage = 0;
    var result = "background: linear-gradient(to right,";
    for (var index = 0; index < arrayOfTrackColors.length; index += 1) {
      var _arrayOfTrackColors$i = arrayOfTrackColors[index], value = _arrayOfTrackColors$i.value, _color = _arrayOfTrackColors$i.color, opacity = _arrayOfTrackColors$i.opacity;
      result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + " " + valuePercentage + "%,";
      if (props.value >= value) {
        valuePercentage = (value - min) / (max - min) * 100;
        result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + " " + valuePercentage + "%,";
      } else {
        result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + " " + thumbPosition + ",";
        result += upperTrackColor + " " + thumbPosition + ", " + upperTrackColor + ")";
        break;
      }
      if (index === arrayOfTrackColors.length - 1) {
        result += upperTrackColor + " " + valuePercentage + "%, " + upperTrackColor + ")";
      }
    }
    return result;
  }
  return "background: linear-gradient(\n      to right,\n      " + lowerTrackColor + ",\n      " + lowerTrackColor + " " + thumbPosition + ",\n      " + upperTrackColor + " " + thumbPosition + ",\n      " + upperTrackColor + "\n    );\n  ";
};
var disabledRangeInputStyle = function disabledRangeInputStyle2(props, context) {
  var _props$theme$rangeInp3;
  return Ce(["", " ", ""], disabledStyle(props.theme.rangeInput.disabled.opacity), ((_props$theme$rangeInp3 = props.theme.rangeInput.disabled[context]) == null ? void 0 : _props$theme$rangeInp3.color) && "background: " + normalizeColor(props.theme.rangeInput.disabled[context].color, props.theme) + ";");
};
var rangeTrackStyle = Ce(["box-sizing:border-box;width:100%;height:", ";", ";", " ", ";"], function(props) {
  return props.theme.rangeInput.track.height;
}, function(props) {
  return trackColorStyle(props);
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track.extend;
}, function(props) {
  var _props$theme, _props$theme$rangeInp4;
  return props.disabled && ((_props$theme = props.theme) == null ? void 0 : (_props$theme$rangeInp4 = _props$theme.rangeInput) == null ? void 0 : _props$theme$rangeInp4.disabled) && disabledRangeInputStyle(props, "track");
});
var rangeThumbStyle = Ce(["box-sizing:border-box;position:relative;border-radius:", ";height:", ";width:", ";overflow:visible;background:", ";-webkit-appearance:none;cursor:pointer;", " ", ";"], function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return normalizeColor(props.theme.rangeInput.thumb.color || "control", props.theme);
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;
}, function(props) {
  var _props$theme2, _props$theme2$rangeIn;
  return props.disabled && ((_props$theme2 = props.theme) == null ? void 0 : (_props$theme2$rangeIn = _props$theme2.rangeInput) == null ? void 0 : _props$theme2$rangeIn.disabled) && disabledRangeInputStyle(props, "thumb");
});
var firefoxMicrosoftThumbStyle = Ce(["", " margin-top:0px;height:", ";width:", ";", " ", ""], rangeThumbStyle, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;
});
var StyledRangeInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledRangeInput",
  componentId: "sc-15st9ck-0"
})(["box-sizing:border-box;position:relative;-webkit-appearance:none;border-color:transparent;height:", ";width:100%;padding:0px;cursor:", ";background:transparent;", " &::-moz-focus-inner{border:none;}&::-moz-focus-outer{border:none;}&::-webkit-slider-runnable-track{", "}&::-webkit-slider-thumb{margin-top:-", "px;", " ", "}&::-moz-range-track{", "}&::-moz-range-thumb{", "}&::-ms-thumb{", "}", " &::-ms-track{", " border-color:transparent;color:transparent;}&::-ms-fill-lower{", ";border-color:transparent;}&::-ms-fill-upper{", ";border-color:transparent;}&:focus::-webkit-slider-thumb{", "}&:focus-visible{outline:0;}&:focus{outline:none;}", ""], function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.disabled ? "default" : "pointer";
}, function(props) {
  return props.theme.rangeInput.pad && edgeStyle("padding", props.theme.rangeInput.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, rangeTrackStyle, function(props) {
  return (parseMetricToNum(props.theme.global.spacing) - parseMetricToNum(props.theme.rangeInput.track.height || 0)) * 0.5;
}, rangeThumbStyle, function(props) {
  return !props.disabled && Ce(["&:hover{box-shadow:0px 0px 0px 2px ", ";}"], normalizeColor(props.theme.rangeInput.thumb.color || "control", props.theme));
}, rangeTrackStyle, firefoxMicrosoftThumbStyle, firefoxMicrosoftThumbStyle, function(props) {
  return !props.disabled && Ce(["&:hover::-moz-range-thumb{box-shadow:0px 0px 0px 2px ", ";}&:hover::-ms-thumb{box-shadow:0px 0px 0px 2px ", ";}"], normalizeColor(props.theme.rangeInput.thumb.color || "control", props.theme), normalizeColor(props.theme.rangeInput.thumb.color || "control", props.theme));
}, rangeTrackStyle, function(props) {
  return trackColorStyle(props, "lower");
}, function(props) {
  return trackColorStyle(props, "upper");
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.extend;
});
StyledRangeInput.defaultProps = {};
Object.setPrototypeOf(StyledRangeInput.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/RangeInput/propTypes.js
var import_prop_types53 = __toESM(require_prop_types());
var PropType49 = {};
if (true) {
  PropType49 = {
    a11yTitle: import_prop_types53.default.string,
    color: import_prop_types53.default.oneOfType([colorPropType, import_prop_types53.default.arrayOf(import_prop_types53.default.shape({
      color: colorPropType.isRequired,
      value: import_prop_types53.default.number.isRequired,
      opacity: import_prop_types53.default.number
    }))]),
    id: import_prop_types53.default.string,
    min: import_prop_types53.default.oneOfType([import_prop_types53.default.number, import_prop_types53.default.string]),
    max: import_prop_types53.default.oneOfType([import_prop_types53.default.number, import_prop_types53.default.string]),
    name: import_prop_types53.default.string,
    onChange: import_prop_types53.default.func,
    step: import_prop_types53.default.number,
    value: import_prop_types53.default.oneOfType([import_prop_types53.default.number, import_prop_types53.default.string])
  };
}
var RangeInputPropTypes = PropType49;

// node_modules/grommet/es6/components/RangeInput/RangeInput.js
var _excluded62 = ["a11yTitle", "color", "name", "onChange", "onFocus", "onBlur", "value", "step", "min", "max"];
function _extends102() {
  _extends102 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends102.apply(this, arguments);
}
function _objectWithoutPropertiesLoose57(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RangeInput = (0, import_react101.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, color = _ref.color, name = _ref.name, _onChange = _ref.onChange, _onFocus = _ref.onFocus, _onBlur = _ref.onBlur, valueProp = _ref.value, _ref$step = _ref.step, step = _ref$step === void 0 ? 1 : _ref$step, _ref$min = _ref.min, min = _ref$min === void 0 ? 0 : _ref$min, _ref$max = _ref.max, max = _ref$max === void 0 ? 100 : _ref$max, rest = _objectWithoutPropertiesLoose57(_ref, _excluded62);
  var formContext = (0, import_react101.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react101.useState)(), focus = _useState[0], setFocus = _useState[1];
  var _useState2 = (0, import_react101.useState)({
    x: null,
    y: null
  }), scroll = _useState2[0], setScroll = _useState2[1];
  var rangeInputRef = useForwardedRef(ref);
  (0, import_react101.useEffect)(function() {
    var x2 = scroll.x, y2 = scroll.y;
    if (x2 !== null && y2 !== null) {
      var handleScrollTo = function handleScrollTo2() {
        return window.scrollTo(x2, y2);
      };
      window.addEventListener("scroll", handleScrollTo);
      return function() {
        return window.removeEventListener("scroll", handleScrollTo);
      };
    }
    return void 0;
  }, [scroll]);
  var setRangeInputValue = (0, import_react101.useCallback)(function(nextValue) {
    if (nextValue > max || nextValue < min)
      return;
    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
    nativeInputValueSetter.call(rangeInputRef.current, nextValue);
    var event = new Event("input", {
      bubbles: true
    });
    rangeInputRef.current.dispatchEvent(event);
  }, [rangeInputRef, min, max]);
  var handleOnWheel = function handleOnWheel2(event) {
    var newValue = parseFloat(value);
    if (event.deltaY < 0) {
      setRangeInputValue(newValue + step);
    } else {
      setRangeInputValue(newValue - step);
    }
  };
  var handleMouseOver = function handleMouseOver2() {
    return setScroll({
      x: window.scrollX,
      y: window.scrollY
    });
  };
  var handleMouseOut = function handleMouseOut2() {
    return setScroll({
      x: null,
      y: null
    });
  };
  return import_react101.default.createElement(StyledRangeInput, _extends102({
    "aria-label": a11yTitle,
    "aria-valuemax": max,
    "aria-valuemin": min,
    "aria-valuenow": value,
    ref: rangeInputRef,
    name,
    focus,
    value
  }, rest, {
    color,
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: function onChange(event) {
      setValue(event.target.value);
      if (_onChange)
        _onChange(event);
    },
    onMouseOver: handleMouseOver,
    onMouseOut: handleMouseOut,
    onWheel: handleOnWheel,
    step,
    type: "range",
    min,
    max
  }));
});
RangeInput.displayName = "RangeInput";
RangeInput.propTypes = RangeInputPropTypes;

// node_modules/grommet/es6/components/RangeSelector/RangeSelector.js
var import_react103 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RangeSelector/EdgeControl.js
var import_react102 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded63 = ["color", "direction", "edge", "onDecrease", "onIncrease", "thickness"];
function _extends103() {
  _extends103 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends103.apply(this, arguments);
}
function _objectWithoutPropertiesLoose58(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DIRECTION_PROPS = {
  horizontal: {
    cursor: "col-resize",
    fill: "vertical"
  },
  vertical: {
    cursor: "row-resize",
    fill: "horizontal"
  }
};
var StyledBox2 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "EdgeControl__StyledBox",
  componentId: "sc-1xo2yt9-0"
})(["", ""], function(props) {
  return props.focus && focusStyle();
});
var EdgeControl = (0, import_react102.forwardRef)(function(_ref, ref) {
  var color = _ref.color, direction = _ref.direction, edge = _ref.edge, onDecrease = _ref.onDecrease, onIncrease = _ref.onIncrease, thickness = _ref.thickness, rest = _objectWithoutPropertiesLoose58(_ref, _excluded63);
  var theme = (0, import_react102.useContext)(Ge);
  var _useState = (0, import_react102.useState)(false), focus = _useState[0], setFocus = _useState[1];
  var _DIRECTION_PROPS$dire = DIRECTION_PROPS[direction], cursor = _DIRECTION_PROPS$dire.cursor, fill = _DIRECTION_PROPS$dire.fill;
  var size = parseMetricToNum(theme.global.spacing) / 2;
  var keyboardProps = direction === "vertical" ? {
    onUp: onDecrease,
    onDown: onIncrease
  } : {
    onLeft: onDecrease,
    onRight: onIncrease
  };
  var boxDirection = direction === "vertical" ? "row" : "column";
  var type = theme.rangeSelector && theme.rangeSelector.edge && theme.rangeSelector.edge.type || "disc";
  var node;
  var backgroundColor2 = normalizeColor(color || "control", theme);
  if (type === "bar") {
    node = import_react102.default.createElement(StyledBox2, {
      flex: !thickness,
      justifySelf: "stretch",
      width: direction === "vertical" ? thickness : size + "px",
      height: direction === "vertical" ? size + "px" : thickness,
      background: backgroundColor2,
      focus
    });
  } else if (type === "disc") {
    node = import_react102.default.createElement(StyledBox2, {
      width: size + "px",
      height: size + "px",
      round: "full",
      background: backgroundColor2,
      focus
    });
  } else {
    node = type;
  }
  return import_react102.default.createElement(Keyboard, keyboardProps, import_react102.default.createElement(Box, {
    direction: boxDirection,
    style: {
      flex: "0 0 1px"
    },
    overflow: "visible",
    align: "center",
    justify: "center",
    alignSelf: "stretch"
  }, import_react102.default.createElement(Box, _extends103({
    ref,
    direction: boxDirection,
    justify: "center",
    align: "center",
    basis: "full",
    fill,
    style: {
      cursor,
      outline: "none",
      minWidth: size,
      minHeight: size,
      zIndex: 1
    },
    tabIndex: 0,
    onFocus: function onFocus() {
      return setFocus(true);
    },
    onBlur: function onBlur() {
      return setFocus(false);
    }
  }, rest), node)));
});
EdgeControl.displayName = "EdgeControl";
EdgeControl.defaultProps = {};
Object.setPrototypeOf(EdgeControl.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/RangeSelector/propTypes.js
var import_prop_types54 = __toESM(require_prop_types());
var PropType50 = {};
if (true) {
  PropType50 = {
    color: colorPropType,
    direction: import_prop_types54.default.oneOf(["horizontal", "vertical"]),
    invert: import_prop_types54.default.bool,
    max: import_prop_types54.default.number,
    messages: import_prop_types54.default.shape({
      lower: import_prop_types54.default.string,
      upper: import_prop_types54.default.string
    }),
    min: import_prop_types54.default.number,
    onChange: import_prop_types54.default.func,
    opacity: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["weak", "medium", "strong"]), import_prop_types54.default.string, import_prop_types54.default.bool]),
    round: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["xsmall", "small", "medium", "large", "full"]), import_prop_types54.default.string]),
    size: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "full"]), import_prop_types54.default.string]),
    step: import_prop_types54.default.number,
    values: import_prop_types54.default.arrayOf(import_prop_types54.default.number).isRequired
  };
}
var RangeSelectorPropTypes = PropType50;

// node_modules/grommet/es6/components/RangeSelector/RangeSelector.js
var _excluded64 = ["color", "direction", "invert", "max", "messages", "min", "onChange", "opacity", "round", "size", "step", "values"];
function _extends104() {
  _extends104 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends104.apply(this, arguments);
}
function _objectWithoutPropertiesLoose59(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Container = styled_components_browser_esm_default(Box).withConfig({
  displayName: "RangeSelector__Container",
  componentId: "sc-siof5p-0"
})(["user-select:none;"]);
var RangeSelector = (0, import_react103.forwardRef)(function(_ref, ref) {
  var color = _ref.color, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "horizontal" : _ref$direction, invert = _ref.invert, _ref$max = _ref.max, max = _ref$max === void 0 ? 100 : _ref$max, messages = _ref.messages, _ref$min = _ref.min, min = _ref$min === void 0 ? 0 : _ref$min, onChange = _ref.onChange, _ref$opacity = _ref.opacity, opacity = _ref$opacity === void 0 ? "medium" : _ref$opacity, round3 = _ref.round, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, _ref$step = _ref.step, step = _ref$step === void 0 ? 1 : _ref$step, _ref$values = _ref.values, values = _ref$values === void 0 ? [] : _ref$values, rest = _objectWithoutPropertiesLoose59(_ref, _excluded64);
  var theme = (0, import_react103.useContext)(Ge) || defaultProps.theme;
  var _useContext = (0, import_react103.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react103.useState)(), changing = _useState[0], setChanging = _useState[1];
  var _useState2 = (0, import_react103.useState)(), lastChange = _useState2[0], setLastChange = _useState2[1];
  var _useState3 = (0, import_react103.useState)(), moveValue = _useState3[0], setMoveValue = _useState3[1];
  var containerRef = (0, import_react103.useRef)();
  var valueForMouseCoord = (0, import_react103.useCallback)(function(event) {
    var rect = containerRef.current.getBoundingClientRect();
    var value;
    if (direction === "vertical") {
      var y2 = event.clientY - (rect.top || 0);
      var scaleY = rect.height / (max - min + 1) || 1;
      value = Math.floor(y2 / scaleY) + min;
    } else {
      var x2 = event.clientX - (rect.left || 0);
      var scaleX = rect.width / (max - min + 1) || 1;
      value = Math.floor(x2 / scaleX) + min;
    }
    var result = Math.ceil(value / step) * step;
    if (result < min) {
      return min;
    }
    if (result > max) {
      return max;
    }
    return result;
  }, [direction, max, min, step]);
  var onMouseMove = (0, import_react103.useCallback)(function(event) {
    var value = valueForMouseCoord(event);
    var nextValues;
    if (changing === "lower" && value <= values[1] && value !== moveValue) {
      nextValues = [value, values[1]];
    } else if (changing === "upper" && value >= values[0] && value !== moveValue) {
      nextValues = [values[0], value];
    } else if (changing === "selection" && value !== moveValue) {
      if (value === max) {
        nextValues = [max - (values[1] - values[0]), max];
      } else if (value === min) {
        nextValues = [min, min + (values[1] - values[0])];
      } else {
        var delta = value - moveValue;
        if (values[0] + delta >= min && values[1] + delta <= max) {
          nextValues = [values[0] + delta, values[1] + delta];
        }
      }
    }
    if (nextValues) {
      setMoveValue(value);
      onChange(nextValues);
    }
  }, [values, changing, moveValue, max, min, setMoveValue, onChange, valueForMouseCoord]);
  (0, import_react103.useEffect)(function() {
    var onMouseUp = function onMouseUp2() {
      return setChanging(void 0);
    };
    if (changing) {
      window.addEventListener("mousemove", onMouseMove);
      window.addEventListener("mouseup", onMouseUp);
      return function() {
        window.removeEventListener("mousemove", onMouseMove);
        window.removeEventListener("mouseup", onMouseUp);
      };
    }
    return void 0;
  }, [changing, onMouseMove]);
  var onClick = (0, import_react103.useCallback)(function(event) {
    var value = valueForMouseCoord(event);
    if (value <= values[0] || value < values[1] && lastChange === "lower") {
      setLastChange("lower");
      onChange([value, values[1]]);
    } else if (value >= values[1] || value > values[0] && lastChange === "upper") {
      setLastChange("upper");
      onChange([values[0], value]);
    }
  }, [lastChange, onChange, valueForMouseCoord, values]);
  var onTouchMove = (0, import_react103.useCallback)(function(event) {
    var touchEvent = event.changedTouches[0];
    onMouseMove(touchEvent);
  }, [onMouseMove]);
  var lower = values[0], upper = values[1];
  var thickness = size === "full" ? void 0 : parseMetricToNum(theme.global.edgeSize[size] || size) + "px";
  var layoutProps = {
    fill: direction,
    round: round3
  };
  if (direction === "vertical")
    layoutProps.width = thickness;
  else
    layoutProps.height = thickness;
  if (size === "full")
    layoutProps.alignSelf = "stretch";
  return import_react103.default.createElement(Container, _extends104({
    ref: containerRef,
    direction: direction === "vertical" ? "column" : "row",
    align: "center",
    fill: true
  }, rest, {
    tabIndex: "-1",
    onClick: onChange ? onClick : void 0,
    onTouchMove: onChange ? onTouchMove : void 0
  }), import_react103.default.createElement(Box, _extends104({
    style: {
      flex: lower - min + " 0 0"
    },
    background: invert ? {
      color: color || theme.rangeSelector.background.invert.color,
      opacity,
      dark: theme.dark
    } : void 0
  }, layoutProps)), import_react103.default.createElement(EdgeControl, {
    a11yTitle: format3({
      id: "rangeSelector.lower",
      messages
    }),
    role: "slider",
    "aria-valuenow": lower,
    "aria-valuemin": min,
    "aria-valuemax": max,
    tabIndex: 0,
    ref,
    color,
    direction,
    thickness,
    edge: "lower",
    onMouseDown: onChange ? function() {
      return setChanging("lower");
    } : void 0,
    onTouchStart: onChange ? function() {
      return setChanging("lower");
    } : void 0,
    onDecrease: onChange && lower - step >= min ? function() {
      return onChange([lower - step, upper]);
    } : void 0,
    onIncrease: onChange && lower + step <= upper ? function() {
      return onChange([lower + step, upper]);
    } : void 0
  }), import_react103.default.createElement(Box, _extends104({
    style: {
      flex: upper - lower + 1 + " 0 0",
      cursor: direction === "vertical" ? "ns-resize" : "ew-resize"
    },
    background: invert ? void 0 : {
      color: color || "control",
      opacity,
      dark: theme.dark
    }
  }, layoutProps, {
    onMouseDown: onChange ? function(event) {
      var nextMoveValue = valueForMouseCoord(event);
      setChanging("selection");
      setMoveValue(nextMoveValue);
    } : void 0
  })), import_react103.default.createElement(EdgeControl, {
    a11yTitle: format3({
      id: "rangeSelector.upper",
      messages
    }),
    role: "slider",
    "aria-valuenow": upper,
    "aria-valuemin": min,
    "aria-valuemax": max,
    tabIndex: 0,
    color,
    direction,
    thickness,
    edge: "upper",
    onMouseDown: onChange ? function() {
      return setChanging("upper");
    } : void 0,
    onTouchStart: onChange ? function() {
      return setChanging("upper");
    } : void 0,
    onDecrease: onChange && upper - step >= lower ? function() {
      return onChange([lower, upper - step]);
    } : void 0,
    onIncrease: onChange && upper + step <= max ? function() {
      return onChange([lower, upper + step]);
    } : void 0
  }), import_react103.default.createElement(Box, _extends104({
    style: {
      flex: max - upper + " 0 0"
    },
    background: invert ? {
      color: color || theme.rangeSelector.background.invert.color,
      opacity,
      dark: theme.dark
    } : void 0
  }, layoutProps, {
    round: round3
  })));
});
RangeSelector.displayName = "RangeSelector";
RangeSelector.propTypes = RangeSelectorPropTypes;

// node_modules/grommet/es6/components/RoutedAnchor/RoutedAnchor.js
var import_react104 = __toESM(require_react());
var import_prop_types55 = __toESM(require_prop_types());
var _excluded65 = ["path", "method"];
function _extends105() {
  _extends105 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends105.apply(this, arguments);
}
function _objectWithoutPropertiesLoose60(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o2, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf3(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf(o2, p2);
}
var RoutedAnchor = function(_Component) {
  _inheritsLoose(RoutedAnchor2, _Component);
  function RoutedAnchor2() {
    return _Component.apply(this, arguments) || this;
  }
  var _proto = RoutedAnchor2.prototype;
  _proto.render = function render() {
    var _this = this;
    var _this$props = this.props, path = _this$props.path, method = _this$props.method, rest = _objectWithoutPropertiesLoose60(_this$props, _excluded65);
    if (true) {
      console.warn("This component will be deprecated in the upcoming releases. \n        Please refer to https://github.com/grommet/grommet/issues/2855 \n        for more information.");
    }
    return import_react104.default.createElement(Anchor, _extends105({}, rest, {
      href: path,
      onClick: function onClick(event) {
        var onClick2 = _this.props.onClick;
        var router = _this.context.router;
        if (event) {
          var modifierKey = event.ctrlKey || event.metaKey;
          if (modifierKey) {
            return;
          }
        }
        if (router) {
          event.preventDefault();
          (router.history || router)[method](path);
        }
        if (onClick2) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          onClick2.apply(void 0, [event].concat(args));
        }
      }
    }));
  };
  return RoutedAnchor2;
}(import_react104.Component);
RoutedAnchor.contextTypes = {
  router: import_prop_types55.default.shape({}).isRequired
};
RoutedAnchor.defaultProps = {
  method: "push"
};

// node_modules/grommet/es6/components/RoutedButton/RoutedButton.js
var import_react105 = __toESM(require_react());
var import_prop_types56 = __toESM(require_prop_types());
var _excluded66 = ["href", "path", "method", "onClick"];
function _extends106() {
  _extends106 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends106.apply(this, arguments);
}
function _objectWithoutPropertiesLoose61(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _inheritsLoose2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o2, p2) {
  _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf2(o2, p2);
}
var RoutedButton = function(_Component) {
  _inheritsLoose2(RoutedButton2, _Component);
  function RoutedButton2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;
    _this.onClick = function(event) {
      var _this$props = _this.props, method = _this$props.method, onClick = _this$props.onClick, path = _this$props.path;
      var router = _this.context.router;
      if (event) {
        var modifierKey = event.ctrlKey || event.metaKey;
        if (modifierKey) {
          return;
        }
      }
      if (router) {
        event.preventDefault();
        (router.history || router)[method](path);
      }
      if (onClick) {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        onClick.apply(void 0, [event].concat(args));
      }
    };
    return _this;
  }
  var _proto = RoutedButton2.prototype;
  _proto.render = function render() {
    var _this$props2 = this.props, href = _this$props2.href, path = _this$props2.path, method = _this$props2.method, onClick = _this$props2.onClick, rest = _objectWithoutPropertiesLoose61(_this$props2, _excluded66);
    if (true) {
      console.warn("This component will be deprecated in the upcoming releases.\n         Please refer to https://github.com/grommet/grommet/issues/2855\n         for more information.");
    }
    return import_react105.default.createElement(Button, _extends106({}, rest, {
      href: path || href,
      disabled: !path && !onClick,
      onClick: this.onClick
    }));
  };
  return RoutedButton2;
}(import_react105.Component);
RoutedButton.contextTypes = {
  router: import_prop_types56.default.shape({}).isRequired
};
RoutedButton.defaultProps = {
  method: "push"
};

// node_modules/grommet/es6/components/Select/Select.js
var import_react107 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Select/SelectContainer.js
var import_react106 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Select/StyledSelect.js
init_styled_components_browser_esm();
var StyledContainer5 = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledSelect__StyledContainer",
  componentId: "sc-znp66n-0"
})(["@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}", ";", ";"], function(props) {
  return props.dropHeight ? sizeStyle("max-height", props.dropHeight, props.theme) : "max-height: inherit;";
}, function(props) {
  return props.theme.select.container && props.theme.select.container.extend;
});

// node_modules/grommet/es6/components/Select/utils.js
var applyKey = function applyKey2(option, key) {
  if (option === void 0)
    return void 0;
  if (typeof key === "object")
    return applyKey2(option, key.key);
  if (typeof key === "function")
    return key(option);
  if (key !== void 0)
    return option[key];
  return option;
};

// node_modules/grommet/es6/components/Select/SelectContainer.js
function _extends107() {
  _extends107 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends107.apply(this, arguments);
}
var OptionsBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "SelectContainer__OptionsBox",
  componentId: "sc-1wi0ul8-0"
})(["position:relative;scroll-behavior:smooth;overflow:auto;outline:none;"]);
var SelectOption = styled_components_browser_esm_default(Button).withConfig({
  displayName: "SelectContainer__SelectOption",
  componentId: "sc-1wi0ul8-1"
})(["", " display:block;width:100%;"], function(props) {
  return props.selected && props.textComponent && selectedStyle;
});
var ClearButton = function ClearButton2(_ref) {
  var clear = _ref.clear, onClear = _ref.onClear, name = _ref.name, theme = _ref.theme, setFocus = _ref.setFocus;
  var label = clear.label, position = clear.position;
  var align = position !== "bottom" ? "start" : "center";
  var buttonLabel = label || "Clear " + (name || "selection");
  return import_react106.default.createElement(Button, {
    onClick: onClear,
    onFocus: function onFocus() {
      return setFocus(true);
    },
    onBlur: function onBlur() {
      return setFocus(false);
    }
  }, import_react106.default.createElement(Box, _extends107({}, theme.select.clear.container, {
    align
  }), import_react106.default.createElement(Text, theme.select.clear.text, buttonLabel)));
};
var SelectContainer = (0, import_react106.forwardRef)(function(_ref2, ref) {
  var clear = _ref2.clear, _ref2$children = _ref2.children, children2 = _ref2$children === void 0 ? null : _ref2$children, disabled = _ref2.disabled, disabledKey = _ref2.disabledKey, dropHeight = _ref2.dropHeight, _ref2$emptySearchMess = _ref2.emptySearchMessage, emptySearchMessage = _ref2$emptySearchMess === void 0 ? "No matches found" : _ref2$emptySearchMess, id = _ref2.id, labelKey = _ref2.labelKey, multiple = _ref2.multiple, name = _ref2.name, onChange = _ref2.onChange, onKeyDown = _ref2.onKeyDown, onMore = _ref2.onMore, onSearch = _ref2.onSearch, optionIndexesInValue = _ref2.optionIndexesInValue, options = _ref2.options, allOptions = _ref2.allOptions, searchPlaceholder = _ref2.searchPlaceholder, search = _ref2.search, setSearch = _ref2.setSearch, selected = _ref2.selected, usingKeyboard = _ref2.usingKeyboard, _ref2$value = _ref2.value, value = _ref2$value === void 0 ? "" : _ref2$value, valueKey = _ref2.valueKey, _ref2$replace = _ref2.replace, replace = _ref2$replace === void 0 ? true : _ref2$replace;
  var theme = (0, import_react106.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react106.useState)(-1), activeIndex = _useState[0], setActiveIndex = _useState[1];
  var _useState2 = (0, import_react106.useState)(), keyboardNavigation = _useState2[0], setKeyboardNavigation = _useState2[1];
  var _useState3 = (0, import_react106.useState)(false), focus = _useState3[0], setFocus = _useState3[1];
  var searchRef = (0, import_react106.useRef)();
  var optionsRef = (0, import_react106.useRef)();
  (0, import_react106.useEffect)(function() {
    var optionsNode = optionsRef.current;
    if (optionsNode.children && optionsNode.children[activeIndex])
      optionsNode.children[activeIndex].focus();
  }, [activeIndex]);
  (0, import_react106.useEffect)(function() {
    if (activeIndex === -1 && search && optionIndexesInValue.length) {
      setActiveIndex(optionIndexesInValue[0]);
    }
  }, [activeIndex, optionIndexesInValue, search]);
  (0, import_react106.useEffect)(function() {
    var timer = setTimeout(function() {
      var optionsNode = optionsRef.current;
      if (onSearch) {
        var searchInput = searchRef.current;
        if (searchInput && searchInput.focus) {
          setFocusWithoutScroll(searchInput);
        }
      } else if (optionsNode && optionsNode.children && usingKeyboard) {
        setFocusWithoutScroll(optionsNode.children[0]);
        setActiveIndex(0);
      } else if (optionsNode) {
        setFocusWithoutScroll(optionsNode);
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, [onSearch, usingKeyboard]);
  (0, import_react106.useEffect)(function() {
    if (keyboardNavigation) {
      var timer = setTimeout(function() {
        return setKeyboardNavigation(false);
      }, 100);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [keyboardNavigation]);
  var optionLabel = (0, import_react106.useCallback)(function(index) {
    return applyKey(options[index], labelKey);
  }, [labelKey, options]);
  var optionValue = (0, import_react106.useCallback)(function(index) {
    return applyKey(options[index], valueKey);
  }, [options, valueKey]);
  var isDisabled = (0, import_react106.useCallback)(function(index) {
    var option = options[index];
    var result;
    if (disabledKey) {
      result = applyKey(option, disabledKey);
    } else if (Array.isArray(disabled)) {
      if (typeof disabled[0] === "number") {
        result = disabled.indexOf(index) !== -1;
      } else {
        var optionVal = optionValue(index);
        result = disabled.indexOf(optionVal) !== -1;
      }
    }
    return result;
  }, [disabled, disabledKey, options, optionValue]);
  var isSelected = (0, import_react106.useCallback)(function(index) {
    var result;
    if (selected) {
      result = selected.indexOf(index) !== -1;
    } else {
      var optionVal = optionValue(index);
      if (Array.isArray(value)) {
        if (value.length === 0) {
          result = false;
        } else if (typeof value[0] !== "object") {
          result = value.indexOf(optionVal) !== -1;
        } else if (valueKey) {
          result = value.some(function(valueItem) {
            var valueValue2 = typeof valueKey === "function" ? valueKey(valueItem) : valueItem[valueKey];
            return valueValue2 === optionVal;
          });
        }
      } else if (valueKey && typeof value === "object") {
        var valueValue = typeof valueKey === "function" ? valueKey(value) : value[valueKey];
        result = valueValue === optionVal;
      } else {
        result = value === optionVal;
      }
    }
    return result;
  }, [optionValue, selected, value, valueKey]);
  var selectOption = (0, import_react106.useCallback)(function(index) {
    return function(event) {
      if (onChange) {
        var nextValue;
        var nextSelected;
        if (multiple) {
          var nextOptionIndexesInValue = optionIndexesInValue.slice(0);
          var allOptionsIndex = allOptions.indexOf(options[index]);
          var valueIndex = optionIndexesInValue.indexOf(allOptionsIndex);
          if (valueIndex === -1) {
            nextOptionIndexesInValue.push(allOptionsIndex);
          } else {
            nextOptionIndexesInValue.splice(valueIndex, 1);
          }
          nextValue = nextOptionIndexesInValue.map(function(i2) {
            return valueKey && valueKey.reduce ? applyKey(allOptions[i2], valueKey) : allOptions[i2];
          });
          nextSelected = nextOptionIndexesInValue;
        } else {
          nextValue = valueKey && valueKey.reduce ? applyKey(options[index], valueKey) : options[index];
          nextSelected = index;
        }
        onChange(event, {
          option: options[index],
          value: nextValue,
          selected: nextSelected
        });
      }
    };
  }, [multiple, onChange, optionIndexesInValue, options, allOptions, valueKey]);
  var onClear = (0, import_react106.useCallback)(function(event) {
    onChange(event, {
      option: void 0,
      value: "",
      selected: ""
    });
  }, [onChange]);
  var onNextOption = (0, import_react106.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = activeIndex + 1;
    while (nextActiveIndex < options.length && isDisabled(nextActiveIndex)) {
      nextActiveIndex += 1;
    }
    if (nextActiveIndex !== options.length) {
      setActiveIndex(nextActiveIndex);
      setKeyboardNavigation(true);
    }
  }, [activeIndex, isDisabled, options]);
  var onPreviousOption = (0, import_react106.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = activeIndex - 1;
    while (nextActiveIndex >= 0 && isDisabled(nextActiveIndex)) {
      nextActiveIndex -= 1;
    }
    if (nextActiveIndex >= 0) {
      setActiveIndex(nextActiveIndex);
      setKeyboardNavigation(true);
    }
  }, [activeIndex, isDisabled]);
  var onKeyDownOption = (0, import_react106.useCallback)(function(event) {
    if (!onSearch) {
      var nextActiveIndex = options.findIndex(function(e2, index) {
        var label;
        if (typeof e2 === "object") {
          label = e2.label || applyKey(e2, labelKey);
        } else {
          label = e2;
        }
        return typeof label === "string" && label.charAt(0).toLowerCase() === event.key.toLowerCase() && !isDisabled(index);
      });
      if (nextActiveIndex >= 0) {
        event.preventDefault();
        setActiveIndex(nextActiveIndex);
        setKeyboardNavigation(true);
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  }, [onKeyDown, options, isDisabled, onSearch, labelKey]);
  var onActiveOption = (0, import_react106.useCallback)(function(index) {
    return function() {
      if (!keyboardNavigation)
        setActiveIndex(index);
    };
  }, [keyboardNavigation]);
  var onSelectOption = (0, import_react106.useCallback)(function(event) {
    if (activeIndex >= 0 && !focus) {
      event.preventDefault();
      selectOption(activeIndex)(event);
    }
  }, [activeIndex, selectOption, focus]);
  var customSearchInput = theme.select.searchInput;
  var SelectTextInput2 = customSearchInput || TextInput;
  var selectOptionsStyle = theme.select.options ? _extends107({}, theme.select.options.box, theme.select.options.container) : {};
  return import_react106.default.createElement(Keyboard, {
    onEnter: onSelectOption,
    onUp: onPreviousOption,
    onDown: onNextOption,
    onKeyDown: onKeyDownOption
  }, import_react106.default.createElement(StyledContainer5, {
    ref,
    as: Box,
    id: id ? id + "__select-drop" : void 0,
    dropHeight
  }, onSearch && import_react106.default.createElement(Box, {
    pad: !customSearchInput ? "xsmall" : void 0,
    flex: false
  }, import_react106.default.createElement(SelectTextInput2, {
    focusIndicator: !customSearchInput,
    size: "small",
    ref: searchRef,
    type: "search",
    value: search || "",
    placeholder: searchPlaceholder,
    onChange: function onChange2(event) {
      var nextSearch = event.target.value;
      setSearch(nextSearch);
      setActiveIndex(-1);
      onSearch(nextSearch);
    }
  })), clear && clear.position !== "bottom" && value && import_react106.default.createElement(ClearButton, {
    clear,
    name,
    onClear,
    theme,
    setFocus
  }), import_react106.default.createElement(OptionsBox, {
    role: "listbox",
    tabIndex: "-1",
    ref: optionsRef,
    "aria-multiselectable": multiple
  }, options.length > 0 ? import_react106.default.createElement(InfiniteScroll, {
    items: options,
    step: theme.select.step,
    onMore,
    replace,
    show: activeIndex !== -1 ? activeIndex : void 0
  }, function(option, index, optionRef) {
    var optionDisabled = isDisabled(index);
    var optionSelected = isSelected(index);
    var optionActive = activeIndex === index;
    var child;
    var textComponent = false;
    if (children2) {
      child = children2(option, index, options, {
        active: optionActive,
        disabled: optionDisabled,
        selected: optionSelected
      });
      if (typeof child === "string" || child.props && child.props.children && typeof child.props.children === "string")
        textComponent = true;
    } else if (theme.select.options) {
      child = import_react106.default.createElement(Box, selectOptionsStyle, import_react106.default.createElement(Text, theme.select.options.text, optionLabel(index)));
      textComponent = true;
    }
    return import_react106.default.createElement(SelectOption, {
      key: index,
      ref: optionRef,
      tabIndex: optionSelected ? "0" : "-1",
      role: "option",
      "aria-setsize": options.length,
      "aria-posinset": index + 1,
      "aria-selected": optionSelected,
      focusIndicator: false,
      "aria-disabled": optionDisabled || void 0,
      plain: !child ? void 0 : true,
      align: "start",
      kind: !child ? "option" : void 0,
      hoverIndicator: !child ? void 0 : "background",
      label: !child ? optionLabel(index) : void 0,
      disabled: optionDisabled || void 0,
      active: optionActive,
      selected: optionSelected,
      option,
      onMouseOver: !optionDisabled ? onActiveOption(index) : void 0,
      onClick: !optionDisabled ? selectOption(index) : void 0,
      textComponent
    }, child);
  }) : import_react106.default.createElement(SelectOption, {
    key: "search_empty",
    tabIndex: "-1",
    role: "menuitem",
    hoverIndicator: "background",
    disabled: true
  }, import_react106.default.createElement(Box, selectOptionsStyle, import_react106.default.createElement(Text, theme.select.container.text, emptySearchMessage)))), clear && clear.position === "bottom" && value && import_react106.default.createElement(ClearButton, {
    clear,
    name,
    onClear,
    theme,
    setFocus
  })));
});

// node_modules/grommet/es6/components/Select/propTypes.js
var import_prop_types57 = __toESM(require_prop_types());
function _extends108() {
  _extends108 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends108.apply(this, arguments);
}
var PropType51 = {};
if (true) {
  PropType51 = _extends108({}, genericProps, {
    children: import_prop_types57.default.func,
    clear: import_prop_types57.default.oneOfType([import_prop_types57.default.bool, import_prop_types57.default.shape({
      position: import_prop_types57.default.oneOf(["top", "bottom"]),
      label: import_prop_types57.default.string
    })]),
    closeOnChange: import_prop_types57.default.bool,
    defaultValue: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.object, import_prop_types57.default.number, import_prop_types57.default.arrayOf(import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.object, import_prop_types57.default.number]))]),
    disabled: import_prop_types57.default.oneOfType([import_prop_types57.default.bool, import_prop_types57.default.arrayOf(import_prop_types57.default.oneOfType([import_prop_types57.default.number, import_prop_types57.default.string, import_prop_types57.default.object]))]),
    disabledKey: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.func]),
    dropAlign: import_prop_types57.default.shape({
      top: import_prop_types57.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types57.default.oneOf(["top", "bottom"]),
      right: import_prop_types57.default.oneOf(["left", "right"]),
      left: import_prop_types57.default.oneOf(["left", "right"])
    }),
    dropHeight: import_prop_types57.default.oneOfType([import_prop_types57.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types57.default.string]),
    dropTarget: import_prop_types57.default.object,
    dropProps: import_prop_types57.default.object,
    focusIndicator: import_prop_types57.default.bool,
    icon: import_prop_types57.default.oneOfType([import_prop_types57.default.bool, import_prop_types57.default.func, import_prop_types57.default.node, import_prop_types57.default.elementType]),
    labelKey: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.func]),
    messages: import_prop_types57.default.shape({
      multiple: import_prop_types57.default.string
    }),
    multiple: import_prop_types57.default.bool,
    name: import_prop_types57.default.string,
    onChange: import_prop_types57.default.func,
    onClose: import_prop_types57.default.func,
    onOpen: import_prop_types57.default.func,
    onSearch: import_prop_types57.default.func,
    onMore: import_prop_types57.default.func,
    options: import_prop_types57.default.arrayOf(import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.number, import_prop_types57.default.bool, import_prop_types57.default.element, import_prop_types57.default.object])).isRequired,
    open: import_prop_types57.default.bool,
    placeholder: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.element, import_prop_types57.default.node]),
    plain: import_prop_types57.default.bool,
    replace: import_prop_types57.default.bool,
    searchPlaceholder: import_prop_types57.default.string,
    selected: import_prop_types57.default.oneOfType([import_prop_types57.default.number, import_prop_types57.default.arrayOf(import_prop_types57.default.number)]),
    size: import_prop_types57.default.oneOfType([import_prop_types57.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types57.default.string]),
    value: import_prop_types57.default.oneOfType([
      import_prop_types57.default.string,
      import_prop_types57.default.element,
      import_prop_types57.default.object,
      import_prop_types57.default.number,
      import_prop_types57.default.arrayOf(import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.object, import_prop_types57.default.number]))
    ]),
    valueLabel: import_prop_types57.default.node,
    valueKey: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.func, import_prop_types57.default.shape({
      key: import_prop_types57.default.string,
      reduce: import_prop_types57.default.bool
    })]),
    emptySearchMessage: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.node])
  });
}
var SelectPropTypes = PropType51;

// node_modules/grommet/es6/components/Select/Select.js
var _excluded67 = ["a11yTitle", "aria-label", "alignSelf", "children", "clear", "closeOnChange", "defaultValue", "disabled", "disabledKey", "dropAlign", "dropHeight", "dropProps", "dropTarget", "emptySearchMessage", "focusIndicator", "gridArea", "id", "icon", "labelKey", "margin", "messages", "multiple", "name", "onBlur", "onChange", "onClick", "onClose", "onFocus", "onKeyDown", "onMore", "onOpen", "onSearch", "open", "options", "placeholder", "plain", "replace", "searchPlaceholder", "selected", "size", "value", "valueKey", "valueLabel"];
function _extends109() {
  _extends109 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends109.apply(this, arguments);
}
function _objectWithoutPropertiesLoose62(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SelectTextInput = styled_components_browser_esm_default(TextInput).withConfig({
  displayName: "Select__SelectTextInput",
  componentId: "sc-17idtfo-0"
})(["cursor:", ";"], function(props) {
  return props.defaultCursor ? "default" : "pointer";
});
var HiddenInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "Select__HiddenInput",
  componentId: "sc-17idtfo-1"
})(["display:none;"]);
var StyledSelectDropButton = styled_components_browser_esm_default(DropButton).withConfig({
  displayName: "Select__StyledSelectDropButton",
  componentId: "sc-17idtfo-2"
})(["", ";", ";", ";"], function(props) {
  return !props.callerPlain && controlBorderStyle;
}, function(props) {
  return props.theme.select && props.theme.select.control && props.theme.select.control.extend;
}, function(props) {
  return props.open && props.theme.select.control.open;
});
StyledSelectDropButton.defaultProps = {};
Object.setPrototypeOf(StyledSelectDropButton.defaultProps, defaultProps2);
var defaultDropAlign3 = {
  top: "bottom",
  left: "left"
};
var Select = (0, import_react107.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], alignSelf = _ref.alignSelf, children2 = _ref.children, _ref$clear = _ref.clear, clear = _ref$clear === void 0 ? false : _ref$clear, _ref$closeOnChange = _ref.closeOnChange, closeOnChange = _ref$closeOnChange === void 0 ? true : _ref$closeOnChange, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, disabledKey = _ref.disabledKey, _ref$dropAlign = _ref.dropAlign, dropAlign2 = _ref$dropAlign === void 0 ? defaultDropAlign3 : _ref$dropAlign, dropHeight = _ref.dropHeight, dropProps = _ref.dropProps, dropTarget = _ref.dropTarget, emptySearchMessage = _ref.emptySearchMessage, focusIndicator = _ref.focusIndicator, gridArea = _ref.gridArea, id = _ref.id, icon = _ref.icon, labelKey = _ref.labelKey, margin = _ref.margin, messages = _ref.messages, multiple = _ref.multiple, name = _ref.name, onBlur = _ref.onBlur, onChange = _ref.onChange, onClick = _ref.onClick, onClose = _ref.onClose, onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, onMore = _ref.onMore, onOpen = _ref.onOpen, onSearch = _ref.onSearch, propOpen = _ref.open, optionsProp = _ref.options, placeholder = _ref.placeholder, plain = _ref.plain, replace = _ref.replace, searchPlaceholder = _ref.searchPlaceholder, selected = _ref.selected, size = _ref.size, valueProp = _ref.value, valueKey = _ref.valueKey, valueLabel = _ref.valueLabel, rest = _objectWithoutPropertiesLoose62(_ref, _excluded67);
  var theme = (0, import_react107.useContext)(Ge) || defaultProps2.theme;
  var inputRef = (0, import_react107.useRef)();
  var formContext = (0, import_react107.useContext)(FormContext);
  var _useContext = (0, import_react107.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react107.useState)(), usingKeyboard = _useState[0], setUsingKeyboard = _useState[1];
  var onMouseDown = function onMouseDown2() {
    return setUsingKeyboard(false);
  };
  var onKeyPress = function onKeyPress2() {
    return setUsingKeyboard(true);
  };
  (0, import_react107.useEffect)(function() {
    document.addEventListener("mousedown", onMouseDown);
    document.addEventListener("keydown", onKeyPress);
    return function() {
      document.removeEventListener("mousedown", onMouseDown);
      document.removeEventListener("keydown", onKeyPress);
    };
  }, []);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: defaultValue3 || ""
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var valuedValue = (0, import_react107.useMemo)(function() {
    if (Array.isArray(value))
      return value.map(function(v2) {
        return valueKey && valueKey.reduce ? v2 : applyKey(v2, valueKey);
      });
    return valueKey && valueKey.reduce ? value : applyKey(value, valueKey);
  }, [value, valueKey]);
  var _useState2 = (0, import_react107.useState)(), search = _useState2[0], setSearch = _useState2[1];
  var _useState3 = (0, import_react107.useState)(optionsProp), allOptions = _useState3[0], setAllOptions = _useState3[1];
  (0, import_react107.useEffect)(function() {
    if (!search)
      setAllOptions(optionsProp);
  }, [optionsProp, search]);
  var optionIndexesInValue = (0, import_react107.useMemo)(function() {
    var result = [];
    allOptions.forEach(function(option, index) {
      if (selected !== void 0) {
        if (Array.isArray(selected)) {
          if (selected.indexOf(index) !== -1)
            result.push(index);
        } else if (index === selected) {
          result.push(index);
        }
      } else if (Array.isArray(valuedValue)) {
        if (valuedValue.some(function(v2) {
          return v2 === applyKey(option, valueKey);
        })) {
          result.push(index);
        }
      } else if (valuedValue === applyKey(option, valueKey)) {
        result.push(index);
      }
    });
    return result;
  }, [allOptions, selected, valueKey, valuedValue]);
  var _useState4 = (0, import_react107.useState)(propOpen), open = _useState4[0], setOpen = _useState4[1];
  (0, import_react107.useEffect)(function() {
    return setOpen(propOpen);
  }, [propOpen]);
  var onRequestOpen = (0, import_react107.useCallback)(function() {
    if (open)
      return;
    setOpen(true);
    if (onOpen)
      onOpen();
  }, [onOpen, open]);
  var onRequestClose = (0, import_react107.useCallback)(function() {
    setOpen(false);
    if (onClose)
      onClose();
    setSearch();
  }, [onClose]);
  var triggerChangeEvent = (0, import_react107.useCallback)(function(nextValue) {
    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
    nativeInputValueSetter.call(inputRef.current, nextValue);
    var event = new Event("input", {
      bubbles: true
    });
    inputRef.current.dispatchEvent(event);
  }, []);
  var onSelectChange = (0, import_react107.useCallback)(function(event, _ref2) {
    var option = _ref2.option, nextValue = _ref2.value, nextSelected = _ref2.selected;
    if (closeOnChange)
      onRequestClose();
    if (typeof nextValue !== "object" && nextValue !== event.target.value && inputRef.current) {
      triggerChangeEvent(nextValue);
    }
    setValue(nextValue);
    if (onChange) {
      event.persist();
      var adjustedEvent;
      if (event instanceof Event) {
        adjustedEvent = new event.constructor(event.type, event);
        Object.defineProperties(adjustedEvent, {
          target: {
            value: inputRef.current
          },
          value: {
            value: nextValue
          },
          option: {
            value: option
          },
          selected: {
            value: nextSelected
          }
        });
      } else {
        adjustedEvent = event;
        adjustedEvent.target = inputRef.current;
        adjustedEvent.value = nextValue;
        adjustedEvent.option = option;
        adjustedEvent.selected = nextSelected;
      }
      onChange(adjustedEvent);
    }
    setSearch();
  }, [closeOnChange, onChange, onRequestClose, setValue, triggerChangeEvent]);
  var SelectIcon;
  switch (icon) {
    case false:
      break;
    case true:
    case void 0:
      SelectIcon = open && theme.select.icons.up ? theme.select.icons.up : theme.select.icons.down;
      break;
    default:
      SelectIcon = icon;
  }
  var selectValue = (0, import_react107.useMemo)(function() {
    if (valueLabel)
      return valueLabel;
    if (import_react107.default.isValidElement(value))
      return value;
    return void 0;
  }, [value, valueLabel]);
  var inputValue = (0, import_react107.useMemo)(function() {
    if (!selectValue) {
      if (optionIndexesInValue.length === 0)
        return "";
      if (optionIndexesInValue.length === 1)
        return applyKey(allOptions[optionIndexesInValue[0]], labelKey);
      return format3({
        id: "select.multiple",
        messages
      });
    }
    return void 0;
  }, [labelKey, messages, format3, optionIndexesInValue, allOptions, selectValue]);
  var iconColor = normalizeColor(theme.select.icons.color || "control", theme);
  return import_react107.default.createElement(Keyboard, {
    onDown: onRequestOpen,
    onUp: onRequestOpen
  }, import_react107.default.createElement(StyledSelectDropButton, {
    ref,
    a11yTitle: "" + (ariaLabel || a11yTitle || placeholder || "Open Drop") + (value ? format3({
      id: "select.selected",
      messages,
      values: {
        currentSelectedValue: value
      }
    }) : ""),
    "aria-expanded": Boolean(open),
    "aria-haspopup": "listbox",
    id,
    disabled: disabled === true || void 0,
    dropAlign: dropAlign2,
    dropTarget,
    open,
    alignSelf,
    focusIndicator,
    onFocus,
    onBlur,
    gridArea,
    margin,
    onOpen: onRequestOpen,
    onClose: onRequestClose,
    onClick,
    dropContent: import_react107.default.createElement(SelectContainer, {
      clear,
      disabled,
      disabledKey,
      dropHeight,
      emptySearchMessage,
      id,
      labelKey,
      multiple,
      name,
      onChange: onSelectChange,
      onKeyDown,
      onMore,
      onSearch,
      options: optionsProp,
      allOptions,
      optionIndexesInValue,
      replace,
      searchPlaceholder,
      search,
      setSearch,
      selected,
      usingKeyboard,
      value,
      valueKey
    }, children2),
    callerPlain: plain,
    plain: true,
    dropProps,
    theme
  }, import_react107.default.createElement(Box, {
    align: "center",
    direction: "row",
    justify: "between",
    background: theme.select.background
  }, import_react107.default.createElement(Box, {
    direction: "row",
    flex: true,
    basis: "auto"
  }, selectValue ? import_react107.default.createElement(import_react107.default.Fragment, null, selectValue, import_react107.default.createElement(HiddenInput, {
    type: "text",
    id: id ? id + "__input" : void 0,
    value: inputValue,
    ref: inputRef,
    readOnly: true
  })) : import_react107.default.createElement(SelectTextInput, _extends109({
    a11yTitle: (ariaLabel || a11yTitle) && "" + (ariaLabel || a11yTitle) + (value && typeof value === "string" ? ", " + value : ""),
    defaultCursor: disabled === true || void 0,
    focusIndicator: false,
    id: id ? id + "__input" : void 0,
    name,
    ref: inputRef
  }, rest, {
    tabIndex: "-1",
    type: "text",
    placeholder,
    plain: true,
    readOnly: true,
    value: inputValue,
    size,
    theme
  }))), SelectIcon && import_react107.default.createElement(Box, {
    margin: theme.select.icons.margin,
    flex: false,
    style: {
      minWidth: "auto"
    }
  }, (0, import_react107.isValidElement)(SelectIcon) ? SelectIcon : import_react107.default.createElement(SelectIcon, {
    color: iconColor,
    size
  })))));
});
Select.defaultProps = _extends109({}, defaultProps2);
Select.displayName = "Select";
Select.propTypes = SelectPropTypes;

// node_modules/grommet/es6/components/Sidebar/Sidebar.js
var import_react108 = __toESM(require_react());

// node_modules/grommet/es6/components/Sidebar/propTypes.js
var import_prop_types58 = __toESM(require_prop_types());
var PropType52 = {};
if (true) {
  PropType52 = {
    children: import_prop_types58.default.node,
    footer: import_prop_types58.default.node,
    header: import_prop_types58.default.node
  };
}
var SidebarPropTypes = PropType52;

// node_modules/grommet/es6/components/Sidebar/Sidebar.js
var _excluded68 = ["children", "footer", "header"];
function _extends110() {
  _extends110 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends110.apply(this, arguments);
}
function _objectWithoutPropertiesLoose63(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Sidebar = function Sidebar2(_ref) {
  var children2 = _ref.children, footer = _ref.footer, header = _ref.header, rest = _objectWithoutPropertiesLoose63(_ref, _excluded68);
  return import_react108.default.createElement(Box, _extends110({
    pad: "small",
    gap: "large",
    height: {
      min: "100%"
    }
  }, rest), header, import_react108.default.createElement(Box, {
    flex: true
  }, children2), footer);
};
Sidebar.propTypes = SidebarPropTypes;
Sidebar.defaultProps = {
  children: void 0,
  footer: void 0,
  header: void 0
};

// node_modules/grommet/es6/components/SkipLink/SkipLink.js
var import_react109 = __toESM(require_react());
var _excluded69 = ["id", "label"];
function _extends111() {
  _extends111 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends111.apply(this, arguments);
}
function _objectWithoutPropertiesLoose64(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SkipLink = (0, import_react109.forwardRef)(function(_ref, ref) {
  var id = _ref.id, label = _ref.label, rest = _objectWithoutPropertiesLoose64(_ref, _excluded69);
  return import_react109.default.createElement(Anchor, _extends111({
    href: "#" + id,
    ref,
    label
  }, rest));
});

// node_modules/grommet/es6/components/SkipLinks/SkipLinks.js
var import_react110 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/SkipLinks/propTypes.js
var import_prop_types59 = __toESM(require_prop_types());
var PropType53 = {};
if (true) {
  PropType53 = {
    children: import_prop_types59.default.node.isRequired,
    messages: import_prop_types59.default.shape({
      skipTo: import_prop_types59.default.string
    })
  };
}
var SkipLinksPropTypes = PropType53;

// node_modules/grommet/es6/components/SkipLinks/SkipLinks.js
var SkipLinks = function SkipLinks2(_ref) {
  var children2 = _ref.children, id = _ref.id, messages = _ref.messages;
  var theme = (0, import_react110.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react110.useState)(false), showLayer = _useState[0], setShowLayer = _useState[1];
  var _useContext = (0, import_react110.useContext)(MessageContext), format3 = _useContext.format;
  var layerRef = (0, import_react110.useRef)(null);
  var onFocus = function onFocus2() {
    setShowLayer(true);
  };
  var removeLayer = function removeLayer2() {
    setShowLayer(false);
  };
  var onBlur = function onBlur2() {
    setTimeout(function() {
      var layerNode = layerRef.current;
      if (layerNode && !layerNode.contains(document.activeElement)) {
        removeLayer();
      }
    }, 0);
  };
  return import_react110.default.createElement(Layer, {
    id,
    position: showLayer ? theme.skipLinks.position : "hidden",
    ref: layerRef,
    onFocus,
    onBlur,
    modal: false,
    targetChildPosition: "first",
    responsive: false
  }, import_react110.default.createElement(Box, theme.skipLinks.container, import_react110.default.createElement(Text, theme.skipLinks.label, format3({
    id: "skipLinks.skipTo",
    messages
  })), import_react110.default.createElement(Box, {
    align: "center",
    gap: "medium"
  }, import_react110.Children.map(children2, function(child, index) {
    return (0, import_react110.cloneElement)(child, {
      key: "skip-link-" + index,
      onClick: removeLayer
    });
  }))));
};
SkipLinks.defaultProps = {};
SkipLinks.propTypes = SkipLinksPropTypes;

// node_modules/grommet/es6/components/SkipLinkTarget/SkipLinkTarget.js
var import_react111 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded70 = ["label"];
function _extends112() {
  _extends112 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends112.apply(this, arguments);
}
function _objectWithoutPropertiesLoose65(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var HiddenAnchor2 = styled_components_browser_esm_default(Anchor).withConfig({
  displayName: "SkipLinkTarget__HiddenAnchor",
  componentId: "sc-16wjfgk-0"
})(["width:0;height:0;overflow:hidden;position:absolute;"]);
var SkipLinkTarget = function SkipLinkTarget2(_ref) {
  var label = _ref.label, rest = _objectWithoutPropertiesLoose65(_ref, _excluded70);
  return import_react111.default.createElement(HiddenAnchor2, _extends112({}, rest, {
    tabIndex: "-1",
    "aria-hidden": "true"
  }), label);
};

// node_modules/grommet/es6/components/Spinner/Spinner.js
var import_react112 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Spinner/propTypes.js
var import_prop_types60 = __toESM(require_prop_types());
var PropType54 = {};
if (true) {
  PropType54 = {
    size: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types60.default.string]),
    color: import_prop_types60.default.oneOfType([import_prop_types60.default.string, import_prop_types60.default.shape({
      dark: import_prop_types60.default.string,
      light: import_prop_types60.default.string
    })]),
    message: import_prop_types60.default.oneOfType([import_prop_types60.default.string, import_prop_types60.default.shape({
      start: import_prop_types60.default.string,
      end: import_prop_types60.default.string
    })])
  };
}
var SpinnerPropTypes = PropType54;

// node_modules/grommet/es6/components/Spinner/Spinner.js
var _excluded71 = ["ref", "size"];
var _excluded219 = ["children", "color", "size", "message"];
var _excluded311 = ["size", "color", "border"];
function _extends113() {
  _extends113 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends113.apply(this, arguments);
}
function _objectWithoutPropertiesLoose66(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var BasicSpinner = function BasicSpinner2(_ref) {
  var ref = _ref.ref, size = _ref.size, rest = _objectWithoutPropertiesLoose66(_ref, _excluded71);
  return import_react112.default.createElement(Box, _extends113({
    height: size,
    width: size,
    ref
  }, rest));
};
var Spinner = (0, import_react112.forwardRef)(function(_ref2, ref) {
  var children2 = _ref2.children, colorProp = _ref2.color, size = _ref2.size, message = _ref2.message, rest = _objectWithoutPropertiesLoose66(_ref2, _excluded219);
  var theme = (0, import_react112.useContext)(Ge) || defaultProps2.theme;
  var announce = (0, import_react112.useContext)(AnnounceContext);
  (0, import_react112.useEffect)(function() {
    if (message != null && message.start)
      announce(message.start);
    else if (typeof message === "string")
      announce(message);
    return function() {
      return (message == null ? void 0 : message.end) && announce(message.end);
    };
  }, [announce, message]);
  var _theme$spinner$contai = theme.spinner.container, sizeThemeProp = _theme$spinner$contai.size, colorThemeProp = _theme$spinner$contai.color, borderThemeProp = _theme$spinner$contai.border, themeProps = _objectWithoutPropertiesLoose66(_theme$spinner$contai, _excluded311);
  var normalizedSize = size || sizeThemeProp;
  var spinnerSize = theme.spinner.size[normalizedSize] || normalizedSize;
  var color = colorProp || colorThemeProp;
  var Icon = theme.spinner.icon;
  var defaultBorder = [{
    side: "all",
    color: "background-contrast",
    size
  }, {
    side: "top",
    color,
    size
  }];
  var spinnerBorder = Array.isArray(borderThemeProp) ? borderThemeProp.map(function(borderSide) {
    return _extends113({}, borderSide, {
      color: borderSide.side === "all" ? borderSide.color || "background-contrast" : color
    });
  }) : borderThemeProp;
  if (children2) {
    return import_react112.default.createElement(BasicSpinner, _extends113({
      size: spinnerSize,
      ref
    }, rest), children2);
  }
  if (Icon)
    return import_react112.default.createElement(BasicSpinner, _extends113({
      size: spinnerSize,
      ref
    }, themeProps, rest), (0, import_react112.isValidElement)(Icon) ? Icon : import_react112.default.createElement(Icon, {
      size: spinnerSize,
      color
    }));
  return import_react112.default.createElement(BasicSpinner, _extends113({
    size: spinnerSize,
    ref,
    border: typeof borderThemeProp === "undefined" ? defaultBorder : spinnerBorder
  }, themeProps, rest));
});
Spinner.displayName = "Spinner";
Spinner.propTypes = SpinnerPropTypes;

// node_modules/grommet/es6/components/Tab/Tab.js
var import_react114 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Tabs/TabsContext.js
var import_react113 = __toESM(require_react());
var TabsContext = import_react113.default.createContext({});

// node_modules/grommet/es6/components/Tab/StyledTab.js
init_styled_components_browser_esm();
var tabHoverStyle = Ce(["&:hover{", " ", " ", ";}"], function(props) {
  return props.theme.tab.hover.background && Ce(["background:", ";"], normalizeColor(props.theme.tab.hover.background, props.theme));
}, function(props) {
  return props.theme.tab.hover.color && Ce(["color:", ";"], normalizeColor(props.theme.tab.hover.color, props.theme));
}, function(props) {
  return props.theme.tab.hover.extend;
});
var StyledTab = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTab",
  componentId: "sc-1nnwnsb-0"
})(["", " ", " ", " ", ""], genericStyles, function(props) {
  return !props.plain && !props.disabled && props.theme.tab.hover && tabHoverStyle;
}, function(props) {
  return props.disabled && props.theme.tab.disabled;
}, function(props) {
  return props.theme.tab.extend;
});
StyledTab.defaultProps = {};
Object.setPrototypeOf(StyledTab.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Tab/propTypes.js
var import_prop_types61 = __toESM(require_prop_types());
var PropType55 = {};
if (true) {
  PropType55 = {
    disabled: import_prop_types61.default.bool,
    icon: import_prop_types61.default.element,
    plain: import_prop_types61.default.bool,
    reverse: import_prop_types61.default.bool,
    title: import_prop_types61.default.node
  };
}
var TabPropTypes = PropType55;

// node_modules/grommet/es6/components/Tab/Tab.js
var _excluded72 = ["active", "disabled", "children", "icon", "plain", "title", "onMouseOver", "onMouseOut", "reverse", "onClick"];
function _extends114() {
  _extends114 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends114.apply(this, arguments);
}
function _objectWithoutPropertiesLoose67(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Tab = (0, import_react114.forwardRef)(function(_ref, ref) {
  var activeProp = _ref.active, disabled = _ref.disabled, children2 = _ref.children, icon = _ref.icon, plain = _ref.plain, title = _ref.title, onMouseOver = _ref.onMouseOver, onMouseOut = _ref.onMouseOut, reverse = _ref.reverse, onClick = _ref.onClick, rest = _objectWithoutPropertiesLoose67(_ref, _excluded72);
  var _useContext = (0, import_react114.useContext)(TabsContext), active = _useContext.active, activeIndex = _useContext.activeIndex, onActivate = _useContext.onActivate, setActiveContent = _useContext.setActiveContent, setActiveTitle = _useContext.setActiveTitle;
  var theme = (0, import_react114.useContext)(Ge) || defaultProps2.theme;
  var _useState = (0, import_react114.useState)(void 0), over = _useState[0], setOver = _useState[1];
  var _useState2 = (0, import_react114.useState)(void 0), focus = _useState2[0], setFocus = _useState2[1];
  var normalizedTitle = title;
  var tabStyles = {};
  (0, import_react114.useEffect)(function() {
    if (active) {
      setActiveContent(children2);
      var activeTitle = typeof title === "string" ? title : activeIndex + 1;
      setActiveTitle(activeTitle);
    }
  }, [active, activeIndex, children2, setActiveContent, setActiveTitle, title]);
  var onMouseOverTab = function onMouseOverTab2(event) {
    setOver(true);
    if (onMouseOver) {
      onMouseOver(event);
    }
  };
  var onMouseOutTab = function onMouseOutTab2(event) {
    setOver(void 0);
    if (onMouseOut) {
      onMouseOut(event);
    }
  };
  var onClickTab = function onClickTab2(event) {
    if (event) {
      event.preventDefault();
    }
    onActivate();
    if (onClick) {
      onClick(event);
    }
  };
  if (active && disabled) {
    console.warn("Warning: Tab props 'active' and 'disabled' have both been set to TRUE on the same Tab resulting in an interesting Tab state. Is this your intent?");
  }
  if (!plain) {
    if (typeof title !== "string") {
      normalizedTitle = title;
    } else if (active) {
      normalizedTitle = import_react114.default.createElement(Text, theme.tab.active, title);
    } else if (disabled && theme.tab.disabled) {
      normalizedTitle = import_react114.default.createElement(Text, theme.tab.disabled, title);
    } else {
      normalizedTitle = import_react114.default.createElement(Text, {
        color: over ? theme.tab.hover.color : theme.tab.color
      }, title);
    }
    if (theme.tab.border) {
      var borderColor = theme.tab.border.color || theme.global.control.border.color;
      if (active) {
        borderColor = theme.tab.border.active.color || borderColor;
      } else if (disabled && theme.tab.border.disabled) {
        borderColor = theme.tab.border.disabled.color || borderColor;
      } else if (over) {
        borderColor = theme.tab.border.hover.color || borderColor;
      }
      borderColor = normalizeColor(borderColor, theme);
      tabStyles.border = {
        side: theme.tab.border.side,
        size: theme.tab.border.size,
        color: borderColor
      };
    }
    tabStyles.background = active ? theme.tab.active.background || theme.tab.background : theme.tab.background;
    tabStyles.pad = theme.tab.pad;
    tabStyles.margin = theme.tab.margin;
  }
  var renderIcon = function renderIcon2(iconProp) {
    if (active) {
      return import_react114.default.cloneElement(iconProp, _extends114({}, theme.tab.active));
    }
    if (disabled) {
      return import_react114.default.cloneElement(iconProp, _extends114({}, theme.tab.disabled));
    }
    return import_react114.default.cloneElement(iconProp, {
      color: over ? theme.tab.hover.color : theme.tab.color
    });
  };
  var normalizedIcon;
  if (icon) {
    normalizedIcon = renderIcon(icon);
  }
  var first = reverse ? normalizedTitle : normalizedIcon;
  var second = reverse ? normalizedIcon : normalizedTitle;
  var withIconStyles;
  if (first && second) {
    withIconStyles = {
      direction: "row",
      align: "center",
      justify: "center",
      gap: "small"
    };
  }
  return import_react114.default.createElement(Button, _extends114({
    ref,
    plain: true,
    role: "tab",
    "aria-selected": active,
    "aria-expanded": active,
    disabled
  }, rest, {
    onClick: onClickTab,
    onMouseOver: onMouseOverTab,
    onMouseOut: onMouseOutTab,
    onFocus: function onFocus() {
      setFocus(true);
      if (onMouseOver)
        onMouseOver();
    },
    onBlur: function onBlur() {
      setFocus(void 0);
      if (onMouseOut)
        onMouseOut();
    },
    style: focus && {
      zIndex: 1
    }
  }), import_react114.default.createElement(StyledTab, _extends114({
    as: Box,
    disabled,
    plain
  }, withIconStyles, tabStyles), first, second));
});
Tab.displayName = "Tab";
Tab.defaultProps = {};
Object.setPrototypeOf(Tab.defaultProps, defaultProps2);
Tab.propTypes = TabPropTypes;

// node_modules/grommet/es6/components/Tabs/Tabs.js
var import_react115 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Tabs/StyledTabs.js
init_styled_components_browser_esm();
var _FLEX_MAP2;
var StyledTabsHeader = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTabs__StyledTabsHeader",
  componentId: "sc-a4fwxl-0"
})(["", ";"], function(props) {
  return props.theme.tabs.header.extend;
});
StyledTabsHeader.defaultProps = {};
Object.setPrototypeOf(StyledTabsHeader.defaultProps, defaultProps2);
var FLEX_MAP2 = (_FLEX_MAP2 = {}, _FLEX_MAP2[true] = "1 1", _FLEX_MAP2[false] = "0 0", _FLEX_MAP2.grow = "1 0", _FLEX_MAP2.shrink = "0 1", _FLEX_MAP2);
var flexStyle2 = Ce(["flex:", ";"], function(props) {
  return "" + FLEX_MAP2[props.flex] + (props.flex !== true ? " auto" : "");
});
var StyledTabPanel = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTabs__StyledTabPanel",
  componentId: "sc-a4fwxl-1"
})(["min-height:0;", " ", ";"], function(props) {
  return props.flex && flexStyle2;
}, function(props) {
  return props.theme.tabs.panel.extend;
});
StyledTabPanel.defaultProps = {};
Object.setPrototypeOf(StyledTabPanel.defaultProps, defaultProps2);
var StyledTabs = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTabs",
  componentId: "sc-a4fwxl-2"
})(["", " ", ";"], genericStyles, function(props) {
  return props.theme.tabs.extend;
});
StyledTabs.defaultProps = {};
Object.setPrototypeOf(StyledTabs.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Tabs/propTypes.js
var import_prop_types62 = __toESM(require_prop_types());
function _extends115() {
  _extends115 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends115.apply(this, arguments);
}
var PropType56 = {};
if (true) {
  PropType56 = _extends115({}, genericProps, {
    activeIndex: import_prop_types62.default.number,
    alignControls: import_prop_types62.default.oneOf(["start", "center", "end", "stretch"]),
    children: import_prop_types62.default.node.isRequired,
    flex: import_prop_types62.default.oneOfType([import_prop_types62.default.oneOf(["grow", "shrink"]), import_prop_types62.default.bool]),
    justify: import_prop_types62.default.oneOf(["start", "center", "end"]),
    messages: import_prop_types62.default.shape({
      tabContents: import_prop_types62.default.string
    }),
    onActive: import_prop_types62.default.func
  });
}
var TabsPropTypes = PropType56;

// node_modules/grommet/es6/components/Tabs/Tabs.js
var _excluded73 = ["alignControls", "children", "flex", "justify", "messages", "responsive"];
function _extends116() {
  _extends116 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends116.apply(this, arguments);
}
function _objectWithoutPropertiesLoose68(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Tabs = (0, import_react115.forwardRef)(function(_ref, ref) {
  var alignControls = _ref.alignControls, children2 = _ref.children, flex = _ref.flex, _ref$justify = _ref.justify, justify = _ref$justify === void 0 ? "center" : _ref$justify, messages = _ref.messages, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, rest = _objectWithoutPropertiesLoose68(_ref, _excluded73);
  var theme = (0, import_react115.useContext)(Ge) || defaultProps2.theme;
  var _useContext = (0, import_react115.useContext)(MessageContext), format3 = _useContext.format;
  var propsActiveIndex = rest.activeIndex, onActive = rest.onActive;
  var _useState = (0, import_react115.useState)(rest.activeIndex || 0), activeIndex = _useState[0], setActiveIndex = _useState[1];
  var _useState2 = (0, import_react115.useState)(), activeContent = _useState2[0], setActiveContent = _useState2[1];
  var _useState3 = (0, import_react115.useState)(), activeTitle = _useState3[0], setActiveTitle = _useState3[1];
  if (activeIndex !== propsActiveIndex && propsActiveIndex !== void 0) {
    setActiveIndex(propsActiveIndex);
  }
  delete rest.activeIndex;
  delete rest.onActive;
  var getTabsContext = (0, import_react115.useCallback)(function(index) {
    var activateTab = function activateTab2(nextIndex) {
      if (propsActiveIndex === void 0) {
        setActiveIndex(nextIndex);
      }
      if (onActive) {
        onActive(nextIndex);
      }
    };
    return {
      activeIndex,
      active: activeIndex === index,
      onActivate: function onActivate() {
        return activateTab(index);
      },
      setActiveContent,
      setActiveTitle
    };
  }, [activeIndex, onActive, propsActiveIndex]);
  var tabs2 = import_react115.default.Children.map(children2, function(child, index) {
    return import_react115.default.createElement(TabsContext.Provider, {
      value: getTabsContext(index)
    }, child ? import_react115.default.cloneElement(child, {
      active: activeIndex === index
    }) : child);
  });
  var tabsHeaderStyles = {};
  if (theme.tabs.header && theme.tabs.header.border) {
    var borderColor = theme.tabs.header.border.color || theme.global.control.border.color;
    borderColor = normalizeColor(borderColor, theme);
    tabsHeaderStyles.border = {
      side: theme.tabs.header.border.side,
      size: theme.tabs.header.border.size,
      style: theme.tabs.header.border.style,
      color: borderColor
    };
  }
  var tabContentTitle = (activeTitle || "") + " " + format3({
    id: "tabs.tabContents",
    messages
  });
  return import_react115.default.createElement(StyledTabs, _extends116({
    ref,
    as: Box,
    role: "tablist",
    flex,
    responsive
  }, rest, {
    background: theme.tabs.background
  }), import_react115.default.createElement(StyledTabsHeader, _extends116({
    as: Box,
    direction: "row",
    justify,
    alignSelf: alignControls,
    flex: false,
    wrap: true,
    background: theme.tabs.header.background,
    gap: theme.tabs.gap
  }, tabsHeaderStyles), tabs2), import_react115.default.createElement(StyledTabPanel, {
    flex,
    "aria-label": tabContentTitle,
    role: "tabpanel"
  }, activeContent));
});
Tabs.displayName = "Tabs";
Tabs.propTypes = TabsPropTypes;

// node_modules/grommet/es6/components/Tag/Tag.js
var import_react116 = __toESM(require_react());
init_styled_components_browser_esm();
var import_FormClose2 = __toESM(require_FormClose());

// node_modules/grommet/es6/components/Tag/propTypes.js
var import_prop_types63 = __toESM(require_prop_types());
function _extends117() {
  _extends117 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends117.apply(this, arguments);
}
var PropType57 = {};
if (true) {
  PropType57 = _extends117({}, genericProps, {
    as: import_prop_types63.default.oneOfType([import_prop_types63.default.string, import_prop_types63.default.func]),
    name: import_prop_types63.default.string,
    value: import_prop_types63.default.string.isRequired,
    onClick: import_prop_types63.default.func,
    onRemove: import_prop_types63.default.func,
    size: import_prop_types63.default.oneOfType([import_prop_types63.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types63.default.string])
  });
}
var TagPropTypes = PropType57;

// node_modules/grommet/es6/components/Tag/StyledTag.js
init_styled_components_browser_esm();
var StyledTagButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledTag__StyledTagButton",
  componentId: "sc-cb9fl2-0"
})(["", " ", ""], function(props) {
  return props.border && borderStyle(props.border, true, props.theme);
}, function(props) {
  return props.round && roundStyle(props.round, true, props.theme);
});
StyledTagButton.defaultProps = {};
Object.setPrototypeOf(StyledTagButton.defaultProps, defaultProps2);
var StyledRemoveButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledTag__StyledRemoveButton",
  componentId: "sc-cb9fl2-1"
})(["", ""], function(props) {
  return props.round && roundStyle(props.round, true, props.theme);
});
StyledRemoveButton.defaultProps = {};
Object.setPrototypeOf(StyledRemoveButton.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Tag/Tag.js
var _excluded74 = ["name", "value", "size", "onRemove", "onClick"];
function _extends118() {
  _extends118 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends118.apply(this, arguments);
}
function _objectWithoutPropertiesLoose69(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Tag = (0, import_react116.forwardRef)(function(_ref, ref) {
  var _theme$tag$size, _theme$tag$size$size, _theme$tag$size2, _theme$tag$size2$size, _theme$tag$size3, _theme$tag$size3$size, _theme$tag$size4, _theme$tag$size4$size;
  var name = _ref.name, value = _ref.value, size = _ref.size, onRemove = _ref.onRemove, onClick = _ref.onClick, rest = _objectWithoutPropertiesLoose69(_ref, _excluded74);
  var theme = (0, import_react116.useContext)(Ge) || defaultProps2.theme;
  var containerProps = _extends118({
    ref,
    align: "center",
    background: theme.tag.background,
    border: theme.tag.border,
    round: ((_theme$tag$size = theme.tag.size) == null ? void 0 : (_theme$tag$size$size = _theme$tag$size[size]) == null ? void 0 : _theme$tag$size$size.round) || theme.tag.round
  }, rest);
  var contents = import_react116.default.createElement(Box, {
    width: {
      min: "min-content"
    },
    pad: ((_theme$tag$size2 = theme.tag.size) == null ? void 0 : (_theme$tag$size2$size = _theme$tag$size2[size]) == null ? void 0 : _theme$tag$size2$size.pad) || theme.tag.pad
  }, import_react116.default.createElement(Text, {
    size
  }, name && import_react116.default.createElement(Text, _extends118({}, theme.tag.name, {
    size
  }), " ", name), name && value ? import_react116.default.createElement(Text, {
    size
  }, theme.tag.separator) : "", value && import_react116.default.createElement(Text, _extends118({}, theme.tag.value, {
    size
  }), value)));
  if (onClick && onRemove) {
    console.warn('Tag cannot combine "onClick" and "onRemove".');
  }
  return onRemove || !onClick ? import_react116.default.createElement(Box, _extends118({
    flex: false,
    direction: "row",
    width: {
      min: "min-content"
    }
  }, containerProps), contents, onRemove && import_react116.default.createElement(StyledRemoveButton, _extends118({
    onClick: onRemove,
    plain: true,
    hoverIndicator: true,
    focusIndicator: true,
    icon: import_react116.default.createElement(import_FormClose2.FormClose, (_theme$tag$size3 = theme.tag.size) == null ? void 0 : (_theme$tag$size3$size = _theme$tag$size3[size]) == null ? void 0 : _theme$tag$size3$size.icon),
    round: ((_theme$tag$size4 = theme.tag.size) == null ? void 0 : (_theme$tag$size4$size = _theme$tag$size4[size]) == null ? void 0 : _theme$tag$size4$size.round) || theme.tag.round
  }, theme.tag.remove))) : import_react116.default.createElement(StyledTagButton, _extends118({
    flex: false,
    plain: true,
    onClick,
    hoverIndicator: true,
    focusIndicator: true
  }, containerProps), contents);
});
Tag.displayName = "Tag";
Tag.prototype = TagPropTypes;

// node_modules/grommet/es6/components/TextArea/TextArea.js
var import_react117 = __toESM(require_react());

// node_modules/grommet/es6/components/TextArea/StyledTextArea.js
init_styled_components_browser_esm();
var plainStyle5 = Ce(["outline:none;border:none;width:100%;-webkit-appearance:none;"]);
var resizeStyle = function resizeStyle2(resize) {
  if (resize === "horizontal") {
    return "resize: horizontal;";
  }
  if (resize === "vertical") {
    return "resize: vertical;";
  }
  if (resize) {
    return "resize: both;";
  }
  return "resize: none;";
};
var StyledTextArea = styled_components_browser_esm_default.textarea.withConfig({
  displayName: "StyledTextArea",
  componentId: "sc-17i3mwp-0"
})(["", " ", " ", " ", " ", " ", ";"], inputStyle, function(props) {
  return props.resize !== void 0 && resizeStyle(props.resize);
}, function(props) {
  return props.fillArg && "height: 100%;";
}, function(props) {
  return props.plain && plainStyle5;
}, function(props) {
  return props.disabled && disabledStyle(props.theme.textArea.disabled && props.theme.textArea.disabled.opacity);
}, function(props) {
  return props.theme.textArea && props.theme.textArea.extend;
});
StyledTextArea.defaultProps = {};
Object.setPrototypeOf(StyledTextArea.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/TextArea/propTypes.js
var import_prop_types64 = __toESM(require_prop_types());
var PropType58 = {};
if (true) {
  PropType58 = {
    a11yTitle: import_prop_types64.default.string,
    id: import_prop_types64.default.string,
    fill: import_prop_types64.default.bool,
    focusIndicator: import_prop_types64.default.bool,
    name: import_prop_types64.default.string,
    onChange: import_prop_types64.default.func,
    placeholder: import_prop_types64.default.string,
    plain: import_prop_types64.default.bool,
    value: import_prop_types64.default.string,
    resize: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["vertical", "horizontal"]), import_prop_types64.default.bool]),
    size: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types64.default.string])
  };
}
var TextAreaPropTypes = PropType58;

// node_modules/grommet/es6/components/TextArea/TextArea.js
var _excluded75 = ["a11yTitle", "fill", "focusIndicator", "name", "onBlur", "onChange", "onFocus", "onKeyDown", "value"];
function _extends119() {
  _extends119 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends119.apply(this, arguments);
}
function _objectWithoutPropertiesLoose70(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var TextArea = (0, import_react117.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, fill = _ref.fill, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, name = _ref.name, _onBlur = _ref.onBlur, _onChange = _ref.onChange, _onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose70(_ref, _excluded75);
  var formContext = (0, import_react117.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react117.useState)(), focus = _useState[0], setFocus = _useState[1];
  return import_react117.default.createElement(Keyboard, {
    onEsc: function onEsc(event) {
      event.stopPropagation();
      event.nativeEvent.stopImmediatePropagation();
    },
    onKeyDown
  }, import_react117.default.createElement(StyledTextArea, _extends119({
    "aria-label": a11yTitle,
    ref,
    name,
    fillArg: fill,
    focus,
    value,
    focusIndicator
  }, rest, {
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: function onChange(event) {
      setValue(event.target.value);
      if (_onChange)
        _onChange(event);
    }
  })));
});
TextArea.displayName = "TextArea";
TextArea.propTypes = TextAreaPropTypes;

// node_modules/grommet/es6/components/Video/Video.js
var import_react118 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Video/StyledVideo.js
init_styled_components_browser_esm();
var FIT_MAP2 = {
  cover: "cover",
  contain: "contain"
};
var fitStyle2 = Ce(["flex:1 1;min-height:0;object-fit:", ";"], function(props) {
  return FIT_MAP2[props.fit];
});
var StyledVideo = styled_components_browser_esm_default.video.withConfig({
  displayName: "StyledVideo",
  componentId: "sc-w4v8h9-0"
})(["max-width:100%;z-index:1;", "::cue{background:", ";}", ";"], function(props) {
  return props.fit && fitStyle2;
}, function(props) {
  return props.theme.video.captions.background;
}, function(props) {
  return props.theme.video && props.theme.video.extend;
});
StyledVideo.defaultProps = {};
Object.setPrototypeOf(StyledVideo.defaultProps, defaultProps2);
var StyledVideoContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledVideo__StyledVideoContainer",
  componentId: "sc-w4v8h9-1"
})(["flex:1 1;display:flex;flex-direction:column;overflow:hidden;position:relative;", ";"], genericStyles);
StyledVideoContainer.defaultProps = {};
Object.setPrototypeOf(StyledVideoContainer.defaultProps, defaultProps2);
var positionStyle = Ce(["position:absolute;left:0;right:0;bottom:0;z-index:1;"]);
var StyledVideoControls = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledVideo__StyledVideoControls",
  componentId: "sc-w4v8h9-2"
})(["flex:0 0;", " opacity:0;transition:opacity 0.3s;", ";"], function(props) {
  return props.over && positionStyle;
}, function(props) {
  return props.active ? "opacity: 1;" : "pointer-events: none";
});
StyledVideoControls.defaultProps = {};
Object.setPrototypeOf(StyledVideoControls.defaultProps, defaultProps2);
var headStyle = Ce(["::after{content:'';height:100%;width:", ";background:", ";position:absolute;left:", ";}"], function(props) {
  return props.theme.global.edgeSize.xsmall;
}, function(props) {
  return normalizeColor(props.theme.video.scrubber.color, props.theme);
}, function(props) {
  return props.value + "%";
});
var StyledVideoScrubber = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledVideo__StyledVideoScrubber",
  componentId: "sc-w4v8h9-3"
})(["cursor:pointer;width:100%;height:100%;", ";"], function(props) {
  return props.value && headStyle;
});
StyledVideoScrubber.defaultProps = {};
Object.setPrototypeOf(StyledVideoScrubber.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Video/propTypes.js
var import_prop_types65 = __toESM(require_prop_types());
function _extends120() {
  _extends120 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends120.apply(this, arguments);
}
var PropType59 = {};
if (true) {
  PropType59 = _extends120({}, genericProps, {
    autoPlay: import_prop_types65.default.bool,
    controls: import_prop_types65.default.oneOfType([import_prop_types65.default.oneOf([false, "over", "below"]), import_prop_types65.default.shape({
      position: import_prop_types65.default.oneOf[false, "over", "below"],
      items: import_prop_types65.default.arrayOf(import_prop_types65.default.oneOfType([import_prop_types65.default.string, import_prop_types65.default.shape({
        icon: import_prop_types65.default.element,
        a11yTitle: import_prop_types65.default.string,
        onClick: import_prop_types65.default.func
      })]))
    })]),
    fit: import_prop_types65.default.oneOf(["cover", "contain"]),
    loop: import_prop_types65.default.bool,
    mute: import_prop_types65.default.bool,
    messages: import_prop_types65.default.shape({
      closeMenu: import_prop_types65.default.string,
      fullScreen: import_prop_types65.default.string,
      progressMeter: import_prop_types65.default.string,
      openMenu: import_prop_types65.default.string,
      pauseButton: import_prop_types65.default.string,
      playButton: import_prop_types65.default.string,
      scrubber: import_prop_types65.default.string,
      volumeDown: import_prop_types65.default.string,
      volumeUp: import_prop_types65.default.string
    })
  });
}
var VideoPropTypes = PropType59;

// node_modules/grommet/es6/components/Video/Video.js
var _excluded76 = ["alignSelf", "autoPlay", "children", "controls", "gridArea", "loop", "margin", "messages", "mute", "onDurationChange", "onEnded", "onPause", "onPlay", "onTimeUpdate", "onVolumeChange"];
function _extends121() {
  _extends121 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends121.apply(this, arguments);
}
function _objectWithoutPropertiesLoose71(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var VOLUME_STEP = 0.166667;
var formatTime = function formatTime2(time) {
  var minutes = Math.round(time / 60);
  if (minutes < 10) {
    minutes = "0" + minutes;
  }
  var seconds = Math.round(time) % 60;
  if (seconds < 10) {
    seconds = "0" + seconds;
  }
  return minutes + ":" + seconds;
};
var Video = (0, import_react118.forwardRef)(function(_ref, ref) {
  var alignSelf = _ref.alignSelf, autoPlay = _ref.autoPlay, children2 = _ref.children, controlsProp = _ref.controls, gridArea = _ref.gridArea, loop = _ref.loop, margin = _ref.margin, messages = _ref.messages, mute = _ref.mute, _onDurationChange = _ref.onDurationChange, _onEnded = _ref.onEnded, _onPause = _ref.onPause, _onPlay = _ref.onPlay, _onTimeUpdate = _ref.onTimeUpdate, _onVolumeChange = _ref.onVolumeChange, rest = _objectWithoutPropertiesLoose71(_ref, _excluded76);
  var theme = (0, import_react118.useContext)(Ge) || defaultProps2.theme;
  var _useContext = (0, import_react118.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react118.useState)([]), captions = _useState[0], setCaptions = _useState[1];
  var _useState2 = (0, import_react118.useState)(), currentTime = _useState2[0], setCurrentTime = _useState2[1];
  var _useState3 = (0, import_react118.useState)(), duration = _useState3[0], setDuration = _useState3[1];
  var _useState4 = (0, import_react118.useState)(), percentagePlayed = _useState4[0], setPercentagePlayed = _useState4[1];
  var _useState5 = (0, import_react118.useState)(false), playing = _useState5[0], setPlaying = _useState5[1];
  var _useState6 = (0, import_react118.useState)(), scrubTime = _useState6[0], setScrubTime = _useState6[1];
  var _useState7 = (0, import_react118.useState)(), volume = _useState7[0], setVolume = _useState7[1];
  var _useState8 = (0, import_react118.useState)(false), hasPlayed = _useState8[0], setHasPlayed = _useState8[1];
  var _useState9 = (0, import_react118.useState)(), interacting = _useState9[0], setInteracting = _useState9[1];
  var _useState10 = (0, import_react118.useState)(), height = _useState10[0], setHeight = _useState10[1];
  var _useState11 = (0, import_react118.useState)(), width = _useState11[0], setWidth = _useState11[1];
  var containerRef = (0, import_react118.useRef)();
  var scrubberRef = (0, import_react118.useRef)();
  var videoRef = useForwardedRef(ref);
  var controls = (0, import_react118.useMemo)(function() {
    var result;
    if (typeof controlsProp === "string" || typeof controlsProp === "boolean") {
      result = {
        items: ["volume", "fullScreen"],
        position: controlsProp
      };
    } else {
      result = {
        items: (controlsProp == null ? void 0 : controlsProp.items) || ["volume", "fullScreen"],
        position: (controlsProp == null ? void 0 : controlsProp.position) || "over"
      };
    }
    return result;
  }, [controlsProp]);
  (0, import_react118.useEffect)(function() {
    var video2 = videoRef.current;
    if (video2 && mute)
      video2.muted = true;
  }, [mute, videoRef]);
  (0, import_react118.useEffect)(function() {
    var video2 = videoRef.current;
    if (video2) {
      var textTracks = video2.textTracks;
      for (var i2 = 0; i2 < textTracks.length; i2 += 1) {
        textTracks[i2].mode = "hidden";
      }
      setCurrentTime(video2.currentTime);
      setPercentagePlayed(video2.currentTime / video2.duration * 100);
      setVolume(videoRef.current.volume);
    }
  }, [videoRef]);
  (0, import_react118.useEffect)(function() {
    var timer = setTimeout(function() {
      if (interacting && !containsFocus(containerRef.current)) {
        setInteracting(false);
      }
    }, 3e3);
    return function() {
      return clearTimeout(timer);
    };
  }, [interacting]);
  useLayoutEffect(function() {
    var video2 = videoRef.current;
    if (video2) {
      if (video2.videoHeight) {
        var rect = video2.getBoundingClientRect();
        var ratio = rect.width / rect.height;
        var videoRatio = video2.videoWidth / video2.videoHeight;
        if (videoRatio > ratio) {
          var nextHeight = rect.width / videoRatio;
          if (nextHeight !== height) {
            setHeight(nextHeight);
            setWidth(void 0);
          }
        } else {
          var nextWidth = rect.height * videoRatio;
          if (nextWidth !== width) {
            setHeight(void 0);
            setWidth(nextWidth);
          }
        }
      }
      var textTracks = video2.textTracks;
      if (textTracks.length > 0) {
        if (textTracks.length === 1) {
          var active = textTracks[0].mode === "showing";
          if (!captions || !captions[0] || captions[0].active !== active) {
            setCaptions([{
              active
            }]);
          }
        } else {
          var nextCaptions = [];
          var set3 = false;
          for (var i2 = 0; i2 < textTracks.length; i2 += 1) {
            var track = textTracks[i2];
            var _active = track.mode === "showing";
            nextCaptions.push({
              label: track.label,
              active: _active
            });
            if (!captions || !captions[i2] || captions[i2].active !== _active) {
              set3 = true;
            }
          }
          if (set3) {
            setCaptions(nextCaptions);
          }
        }
      }
    }
  }, [captions, height, videoRef, width]);
  var play = (0, import_react118.useCallback)(function() {
    return videoRef.current.play();
  }, [videoRef]);
  var pause = (0, import_react118.useCallback)(function() {
    return videoRef.current.pause();
  }, [videoRef]);
  var scrub = (0, import_react118.useCallback)(function(event) {
    if (scrubberRef.current) {
      var scrubberRect = scrubberRef.current.getBoundingClientRect();
      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;
      setScrubTime(duration * percent);
    }
  }, [duration]);
  var seek = (0, import_react118.useCallback)(function(event) {
    if (scrubberRef.current) {
      var scrubberRect = scrubberRef.current.getBoundingClientRect();
      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;
      if (duration)
        videoRef.current.currentTime = duration * percent;
    }
  }, [duration, videoRef]);
  var louder = (0, import_react118.useCallback)(function() {
    videoRef.current.volume += VOLUME_STEP;
  }, [videoRef]);
  var quieter = (0, import_react118.useCallback)(function() {
    videoRef.current.volume -= VOLUME_STEP;
  }, [videoRef]);
  var showCaptions = function showCaptions2(index) {
    var textTracks = videoRef.current.textTracks;
    for (var i2 = 0; i2 < textTracks.length; i2 += 1) {
      textTracks[i2].mode = i2 === index ? "showing" : "hidden";
    }
  };
  var fullscreen = (0, import_react118.useCallback)(function() {
    var video2 = videoRef.current;
    if (video2.requestFullscreen) {
      video2.requestFullscreen();
    } else if (video2.msRequestFullscreen) {
      video2.msRequestFullscreen();
    } else if (video2.mozRequestFullScreen) {
      video2.mozRequestFullScreen();
    } else if (video2.webkitRequestFullscreen) {
      video2.webkitRequestFullscreen();
    } else {
      console.warn("This browser doesn't support fullscreen.");
    }
  }, [videoRef]);
  var controlsElement;
  if (controls != null && controls.position) {
    var _controls$items;
    var over = controls.position === "over";
    var background = over ? theme.video.controls && theme.video.controls.background || {
      color: "background-back",
      opacity: "strong",
      dark: true
    } : void 0;
    var iconColor = over && (theme.video.icons.color || "text");
    var formattedTime = formatTime(scrubTime || currentTime || duration);
    var Icons = {
      ClosedCaption: theme.video.icons.closedCaption,
      Configure: theme.video.icons.configure,
      FullScreen: theme.video.icons.fullScreen,
      Pause: theme.video.icons.pause,
      Play: theme.video.icons.play,
      ReduceVolume: theme.video.icons.reduceVolume,
      Volume: theme.video.icons.volume
    };
    var captionControls = captions.map(function(caption) {
      return {
        icon: caption.label ? void 0 : import_react118.default.createElement(Icons.ClosedCaption, {
          color: iconColor
        }),
        label: caption.label,
        active: caption.active,
        onClick: function onClick() {
          return showCaptions(caption.active ? -1 : 0);
        }
      };
    });
    var volumeControls = ["volume", "reduceVolume"].map(function(control) {
      return {
        icon: control === "volume" ? import_react118.default.createElement(Icons.Volume, {
          color: iconColor
        }) : import_react118.default.createElement(Icons.ReduceVolume, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: control === "volume" ? "video.volumeUp" : "video.volumeDown",
          messages
        }),
        onClick: function onClick() {
          if (volume <= 1 - VOLUME_STEP && control === "volume") {
            return louder();
          }
          if (volume >= VOLUME_STEP && control === "reduceVolume") {
            return quieter();
          }
          return void 0;
        },
        close: false
      };
    });
    var buttonProps = {
      captions: captionControls,
      volume: volumeControls,
      fullScreen: {
        icon: import_react118.default.createElement(Icons.FullScreen, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: "video.fullScreen",
          messages
        }),
        onClick: fullscreen
      },
      pause: {
        icon: import_react118.default.createElement(Icons.Pause, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: "video.pauseButton",
          messages
        }),
        onClick: playing ? pause : play
      },
      play: {
        icon: import_react118.default.createElement(Icons.Play, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: "video.playButton",
          messages
        }),
        onClick: playing ? pause : play
      }
    };
    var controlsMenuItems = [];
    (_controls$items = controls.items) == null ? void 0 : _controls$items.map(function(item) {
      if (item === "volume") {
        volumeControls.map(function(control) {
          return controlsMenuItems.push(control);
        });
        return void 0;
      }
      if (typeof item === "string")
        return controlsMenuItems.push(buttonProps[item]);
      return controlsMenuItems.push(item);
    });
    controlsElement = import_react118.default.createElement(StyledVideoControls, {
      over,
      active: !hasPlayed || controls.position === "below" || over && interacting,
      onBlur: function onBlur() {
        if (!containsFocus(containerRef.current))
          setInteracting(false);
      }
    }, import_react118.default.createElement(Box, {
      direction: "row",
      align: "center",
      justify: "between",
      background
    }, import_react118.default.createElement(Button, {
      icon: playing ? import_react118.default.createElement(Icons.Pause, {
        color: iconColor,
        a11yTitle: format3({
          id: "video.pauseButton",
          messages
        })
      }) : import_react118.default.createElement(Icons.Play, {
        color: iconColor,
        a11yTitle: format3({
          id: "video.playButton",
          messages
        })
      }),
      hoverIndicator: "background",
      onClick: playing ? pause : play
    }), import_react118.default.createElement(Box, {
      direction: "row",
      align: "center",
      flex: true
    }, import_react118.default.createElement(Box, {
      flex: true
    }, import_react118.default.createElement(Stack, null, import_react118.default.createElement(Meter, {
      "aria-label": format3({
        id: "video.progressMeter",
        messages
      }),
      background: over ? theme.video.scrubber && theme.video.scrubber.track && theme.video.scrubber.track.color || "dark-3" : void 0,
      size: "full",
      thickness: "small",
      values: [{
        value: percentagePlayed || 0
      }]
    }), import_react118.default.createElement(StyledVideoScrubber, {
      "aria-label": format3({
        id: "video.scrubber",
        messages
      }),
      ref: scrubberRef,
      tabIndex: 0,
      role: "button",
      value: scrubTime ? Math.round(scrubTime / duration * 100) : void 0,
      onMouseMove: scrub,
      onMouseLeave: function onMouseLeave() {
        return setScrubTime(void 0);
      },
      onClick: seek
    }))), import_react118.default.createElement(Box, {
      pad: {
        horizontal: "small"
      }
    }, import_react118.default.createElement(Text, {
      margin: "none"
    }, formattedTime))), import_react118.default.createElement(Menu, {
      icon: import_react118.default.createElement(Icons.Configure, {
        color: iconColor
      }),
      dropAlign: {
        bottom: "top",
        right: "right"
      },
      dropBackground: background,
      messages: {
        openMenu: format3({
          id: "video.openMenu",
          messages
        }),
        closeMenu: format3({
          id: "video.closeMenu",
          messages
        })
      },
      items: [].concat(controlsMenuItems)
    })));
  }
  var mouseEventListeners;
  if ((controls == null ? void 0 : controls.position) === "over") {
    mouseEventListeners = {
      onMouseEnter: function onMouseEnter() {
        return setInteracting(true);
      },
      onMouseMove: function onMouseMove() {
        return setInteracting(true);
      },
      onTouchStart: function onTouchStart() {
        return setInteracting(true);
      }
    };
  }
  var style;
  if (rest.fit === "contain" && (controls == null ? void 0 : controls.position) === "over") {
    if (width) {
      style = {
        width
      };
    } else if (height) {
      style = {
        height
      };
    }
  }
  return import_react118.default.createElement(StyledVideoContainer, _extends121({
    ref: containerRef
  }, mouseEventListeners, {
    alignSelf,
    gridArea,
    margin,
    style
  }), import_react118.default.createElement(StyledVideo, _extends121({}, rest, {
    ref: videoRef,
    onDurationChange: function onDurationChange(event) {
      var video2 = videoRef.current;
      setDuration(video2.duration);
      setPercentagePlayed(video2.currentTime / video2.duration * 100);
      if (_onDurationChange)
        _onDurationChange(event);
    },
    onEnded: function onEnded(event) {
      setPlaying(false);
      if (_onEnded)
        _onEnded(event);
    },
    onPause: function onPause(event) {
      setPlaying(false);
      if (_onPause)
        _onPause(event);
    },
    onPlay: function onPlay(event) {
      setPlaying(true);
      setHasPlayed(true);
      if (_onPlay)
        _onPlay(event);
    },
    onTimeUpdate: function onTimeUpdate(event) {
      var video2 = videoRef.current;
      setCurrentTime(video2.currentTime);
      setPercentagePlayed(video2.currentTime / video2.duration * 100);
      if (_onTimeUpdate)
        _onTimeUpdate(event);
    },
    onVolumeChange: function onVolumeChange(event) {
      setVolume(videoRef.current.volume);
      if (_onVolumeChange)
        _onVolumeChange(event);
    },
    autoPlay: autoPlay || false,
    loop: loop || false
  }), children2), controlsElement);
});
Video.defaultProps = {};
Video.displayName = "Video";
Video.propTypes = VideoPropTypes;

// node_modules/grommet/es6/components/WorldMap/WorldMap.js
var import_react119 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/WorldMap/StyledWorldMap.js
init_styled_components_browser_esm();
var fillStyle12 = function fillStyle13(fillProp) {
  if (fillProp === "horizontal") {
    return "\n      width: 100%;\n      height: unset;\n    ";
  }
  if (fillProp === "vertical") {
    return "\n      width: unset;\n      height: 100%;\n    ";
  }
  if (fillProp) {
    return "\n      width: 100%;\n      height: 100%;\n    ";
  }
  return "";
};
var StyledWorldMap = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledWorldMap",
  componentId: "sc-had4c3-0"
})(["", " ", " ", ";"], genericStyles, function(props) {
  return props.fillProp !== void 0 ? fillStyle12(props.fillProp) : "width: 100%;";
}, function(props) {
  return props.theme.worldMap && props.theme.worldMap.extend;
});
StyledWorldMap.defaultProps = {};
Object.setPrototypeOf(StyledWorldMap.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/WorldMap/propTypes.js
var import_prop_types66 = __toESM(require_prop_types());
function _extends122() {
  _extends122 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends122.apply(this, arguments);
}
var PropType60 = {};
if (true) {
  PropType60 = _extends122({}, genericProps, {
    color: colorPropType,
    continents: import_prop_types66.default.arrayOf(import_prop_types66.default.shape({
      color: colorPropType,
      name: import_prop_types66.default.oneOf(["Africa", "Asia", "Australia", "Europe", "North America", "South America"]).isRequired,
      onClick: import_prop_types66.default.func,
      onHover: import_prop_types66.default.func
    })),
    fill: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["horizontal", "vertical"]), import_prop_types66.default.bool]),
    onSelectPlace: import_prop_types66.default.func,
    places: import_prop_types66.default.arrayOf(import_prop_types66.default.shape({
      color: colorPropType,
      content: import_prop_types66.default.node,
      dropProps: import_prop_types66.default.shape({}),
      name: import_prop_types66.default.string,
      location: import_prop_types66.default.arrayOf(import_prop_types66.default.number).isRequired,
      onClick: import_prop_types66.default.func,
      onHover: import_prop_types66.default.func
    })),
    hoverColor: colorPropType
  });
}
var WorldMapPropTypes = PropType60;

// node_modules/grommet/es6/components/WorldMap/WorldMap.js
var _excluded77 = ["fill", "color", "continents", "hoverColor", "onSelectPlace", "places"];
var _excluded220 = ["location"];
var _excluded312 = ["color", "onClick", "onHover"];
var _excluded410 = ["color", "coords", "content", "dropProps", "key", "name", "onClick", "onHover"];
function _extends123() {
  _extends123 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends123.apply(this, arguments);
}
function _objectWithoutPropertiesLoose72(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var FACTOR = 10;
var EQUATOR_Y = 32;
var WIDTH = 93;
var LAT_SCALE = 0.98;
var LAT_EXTREME_SCALE = 0.91;
var LON_SCALE = 0.99;
var X_OFFSET = -2;
var Y_OFFSET = -2;
var CONTINENTS = [{
  name: "Australia",
  origin: [74, 32],
  area: [[4, 0], [7, 1], [15, 7], [13, 9], [8, 8], [0, 6], [0, 2]],
  dots: [[4, 0, 1], [2, 1, 6], [0, 2, 9], [0, 3, 10], [0, 4, 10], [0, 5, 3], [5, 5, 5], [5, 6, 4], [8, 8, 1], [15, 7, 1], [14, 8, 1], [13, 9, 1]]
}, {
  name: "Asia",
  origin: [52, 1],
  area: [[16, 0], [38, 5], [40, 7], [28, 17], [24, 25], [29, 29], [19, 29], [11, 24], [3, 23], [0, 20], [0, 19], [6, 13], [7, 6]],
  dots: [[16, 0, 1], [17, 1, 2], [18, 2, 2], [15, 3, 6], [28, 3, 1], [30, 3, 1], [10, 4, 2], [13, 4, 10], [24, 4, 1], [9, 5, 22], [32, 5, 1], [38, 5, 1], [7, 6, 2], [10, 6, 1], [12, 6, 27], [7, 7, 34], [7, 8, 31], [7, 9, 26], [34, 9, 3], [7, 10, 22], [31, 10, 1], [33, 10, 1], [7, 11, 21], [32, 11, 2], [7, 12, 21], [32, 12, 1], [6, 13, 22], [32, 13, 1], [6, 14, 22], [5, 15, 22], [3, 16, 2], [6, 16, 20], [2, 17, 3], [6, 17, 16], [24, 17, 1], [28, 17, 1], [1, 18, 22], [26, 18, 2], [0, 19, 24], [0, 20, 5], [6, 20, 17], [2, 21, 5], [10, 21, 14], [2, 22, 5], [11, 22, 4], [16, 22, 4], [3, 23, 3], [11, 23, 2], [17, 23, 3], [23, 23, 1], [11, 24, 2], [18, 24, 2], [23, 24, 1], [24, 25, 1], [18, 26, 1], [22, 26, 1], [18, 27, 1], [20, 27, 4], [18, 28, 1], [21, 28, 1], [23, 28, 1], [26, 28, 3], [19, 29, 1], [28, 29, 2]]
}, {
  name: "Africa",
  origin: [40, 19],
  area: [[3, 0], [6, 0], [11, 2], [16, 7], [16, 15], [11, 18], [9, 18], [0, 6], [0, 3]],
  dots: [[3, 0, 4], [2, 1, 6], [9, 1, 2], [1, 2, 11], [0, 3, 13], [0, 4, 14], [0, 5, 14], [0, 6, 16], [1, 7, 16], [2, 8, 2], [6, 8, 11], [7, 9, 9], [7, 10, 8], [7, 11, 7], [8, 12, 7], [7, 13, 8], [7, 14, 7], [16, 14, 1], [8, 15, 5], [15, 15, 2], [8, 16, 5], [9, 17, 3], [9, 18, 3]]
}, {
  name: "Europe",
  origin: [39, 2],
  area: [[8, 0], [10, 0], [20, 2], [19, 11], [18, 13], [14, 16], [3, 16], [0, 7]],
  dots: [[8, 0, 3], [9, 1, 1], [20, 2, 1], [19, 3, 1], [12, 4, 1], [19, 4, 1], [9, 5, 6], [9, 6, 7], [17, 6, 3], [0, 7, 1], [8, 7, 12], [7, 8, 3], [11, 8, 9], [7, 9, 3], [11, 9, 9], [4, 10, 1], [7, 10, 1], [9, 10, 1], [11, 10, 9], [3, 11, 2], [7, 11, 13], [4, 12, 1], [6, 12, 13], [4, 13, 15], [5, 14, 3], [9, 14, 4], [15, 14, 2], [3, 15, 3], [8, 15, 1], [10, 15, 5], [6, 15, 2], [3, 16, 2], [10, 16, 5]]
}, {
  name: "South America",
  origin: [22, 26],
  area: [[2, 0], [5, 0], [11, 4], [11, 8], [3, 18], [2, 17], [0, 4], [0, 3]],
  dots: [[2, 0, 4], [1, 1, 7], [1, 2, 7], [0, 3, 10], [0, 4, 12], [1, 5, 11], [2, 6, 9], [3, 7, 8], [3, 8, 8], [3, 9, 6], [3, 10, 6], [3, 11, 5], [3, 12, 3], [2, 13, 3], [2, 14, 3], [2, 15, 2], [2, 16, 2], [2, 17, 2], [3, 18, 1]]
}, {
  name: "North America",
  origin: [0, 0],
  area: [[21, 0], [39, 0], [39, 6], [22, 26], [16, 23], [2, 12], [0, 7]],
  dots: [[22, 0, 6], [29, 0, 1], [31, 0, 1], [33, 0, 5], [20, 1, 1], [22, 1, 1], [24, 1, 2], [27, 1, 13], [17, 2, 1], [20, 2, 5], [26, 2, 13], [13, 3, 1], [19, 3, 1], [21, 3, 3], [26, 3, 14], [14, 4, 1], [16, 4, 4], [21, 4, 3], [29, 4, 11], [12, 5, 3], [16, 5, 1], [18, 5, 1], [20, 5, 3], [24, 5, 1], [30, 5, 8], [14, 6, 3], [19, 6, 1], [22, 6, 4], [31, 6, 8], [0, 7, 15], [16, 7, 1], [18, 7, 4], [24, 7, 2], [30, 7, 7], [2, 8, 20], [24, 8, 3], [29, 8, 5], [2, 9, 20], [24, 9, 2], [30, 9, 3], [1, 10, 18], [23, 10, 2], [31, 10, 1], [2, 11, 2], [8, 11, 11], [23, 11, 2], [26, 11, 1], [2, 12, 1], [8, 12, 13], [24, 12, 3], [10, 13, 12], [23, 13, 5], [11, 14, 17], [11, 15, 9], [21, 15, 6], [28, 15, 2], [11, 16, 11], [23, 16, 4], [11, 17, 14], [12, 18, 11], [12, 19, 12], [13, 20, 9], [15, 21, 3], [22, 21, 1], [16, 22, 2], [16, 23, 2], [20, 23, 1], [23, 23, 1], [18, 24, 3], [21, 25, 1], [22, 26, 1]]
}];
var mergeBounds = function mergeBounds2(bounds1, bounds2) {
  return [bounds1 ? Math.min(bounds1[0], bounds2[0]) : bounds2[0], bounds1 ? Math.min(bounds1[1], bounds2[1]) : bounds2[1], bounds1 ? Math.max(bounds1[2], bounds2[2]) : bounds2[2], bounds1 ? Math.max(bounds1[3], bounds2[3]) : bounds2[3]];
};
var midPoint = function midPoint2(bounds2) {
  return [bounds2[0] + (bounds2[2] - bounds2[0]) / 2, bounds2[1] + (bounds2[3] - bounds2[1]) / 2];
};
var latLonToCoord = function latLonToCoord2(_ref) {
  var lat = _ref[0], lon = _ref[1];
  var scaledLon = lon * LON_SCALE;
  var x2 = Math.round((scaledLon + 180) * (WIDTH / 360));
  var scaledLat = lat * (lat > 60 || lat < -50 ? LAT_EXTREME_SCALE : LAT_SCALE);
  var latRad = scaledLat * Math.PI / 180;
  var mercN = Math.log(Math.tan(Math.PI / 4 + latRad / 2));
  var y2 = Math.round(EQUATOR_Y - WIDTH * mercN / (2 * Math.PI));
  return [x2 + X_OFFSET, y2 + Y_OFFSET];
};
var coordToLatLon = function coordToLatLon2(_ref2) {
  var x2 = _ref2[0], y2 = _ref2[1];
  var mercN = (EQUATOR_Y - (y2 - Y_OFFSET)) * (2 * Math.PI) / WIDTH;
  var latRad = (Math.atan(Math.exp(mercN)) - Math.PI / 4) * 2;
  var scaledLat = latRad * 180 / Math.PI / LAT_SCALE;
  var lat = scaledLat / (scaledLat > 60 || scaledLat < -50 ? LAT_EXTREME_SCALE : LAT_SCALE);
  var lon = (x2 - X_OFFSET) * 360 / WIDTH - 180;
  return [lat, lon];
};
var buildContinent = function buildContinent2(_ref3) {
  var areaProp = _ref3.area, dotsProp = _ref3.dots, name = _ref3.name, origin = _ref3.origin;
  var bounds2 = [origin[0], origin[1], origin[0], origin[1]];
  var dots = dotsProp.map(function(segment) {
    var count = segment[2];
    var spots = [];
    for (var i2 = 0; i2 < count; i2 += 1) {
      spots.push("h0");
    }
    var dotCommands = spots.join(" m10,0 ");
    var x2 = FACTOR * (origin[0] + segment[0] + 1);
    var y2 = FACTOR * (origin[1] + segment[1] + 1);
    bounds2 = mergeBounds(bounds2, [origin[0], origin[1], origin[0] + segment[0] + segment[2], origin[1] + segment[1]]);
    return "M" + x2 + "," + y2 + " " + dotCommands;
  }).join(" ");
  var area = areaProp.map(function(point, index) {
    var x2 = FACTOR * (point[0] + origin[0] + 1);
    var y2 = FACTOR * (point[1] + origin[1] + 1);
    return (index === 0 ? "M" : "L") + x2 + "," + y2;
  }).join(" ") + " Z";
  var mid = midPoint(bounds2);
  return {
    area,
    dots,
    name,
    origin,
    bounds: bounds2,
    mid
  };
};
var buildWorld = function buildWorld2() {
  var continents = CONTINENTS.map(buildContinent);
  var bounds2;
  continents.forEach(function(continent) {
    bounds2 = mergeBounds(bounds2, continent.bounds);
  });
  return {
    continents,
    bounds: bounds2,
    x: bounds2[0] * FACTOR,
    y: bounds2[1] * FACTOR,
    width: (bounds2[2] - bounds2[0] + 1) * FACTOR,
    height: (bounds2[3] - bounds2[1] + 2) * FACTOR
  };
};
var buildInteractiveProps = function buildInteractiveProps2(_ref4, activeFunc, active) {
  var name = _ref4.name, onClick = _ref4.onClick, onHover = _ref4.onHover;
  return {
    role: "button",
    "aria-label": name,
    tabIndex: "0",
    onClick: onClick ? function() {
      return onClick(name);
    } : void 0,
    onMouseOver: function onMouseOver() {
      if (!active) {
        activeFunc(name);
        if (onHover) {
          onHover(true);
        }
      }
    },
    onMouseLeave: function onMouseLeave() {
      if (active) {
        activeFunc(void 0);
        if (onHover) {
          onHover(false);
        }
      }
    },
    onFocus: function onFocus() {
      if (!active) {
        activeFunc(name);
      }
    },
    onBlur: function onBlur() {
      if (active) {
        activeFunc(void 0);
      }
    }
  };
};
var WorldMap = (0, import_react119.forwardRef)(function(_ref5, ref) {
  var fill = _ref5.fill, color = _ref5.color, continentsProp = _ref5.continents, hoverColor = _ref5.hoverColor, onSelectPlace = _ref5.onSelectPlace, placesProp = _ref5.places, rest = _objectWithoutPropertiesLoose72(_ref5, _excluded77);
  var theme = import_react119.default.useContext(Ge);
  var world = import_react119.default.useMemo(buildWorld, []);
  var _React$useState = import_react119.default.useState({}), continents = _React$useState[0], setContinents = _React$useState[1];
  import_react119.default.useEffect(function() {
    if (continentsProp) {
      setContinents(continentsProp.reduce(function(obj, continent) {
        obj[continent.name] = continent;
        return obj;
      }, {}));
    } else
      setContinents({});
  }, [continentsProp]);
  var _React$useState2 = import_react119.default.useState([]), places = _React$useState2[0], setPlaces = _React$useState2[1];
  import_react119.default.useEffect(function() {
    if (placesProp) {
      setPlaces(placesProp.map(function(_ref6) {
        var location = _ref6.location, place = _objectWithoutPropertiesLoose72(_ref6, _excluded220);
        var coords = latLonToCoord(location);
        return _extends123({
          coords,
          key: location.join(",")
        }, place);
      }));
    } else
      setPlaces([]);
  }, [placesProp, world]);
  var _React$useState3 = import_react119.default.useState(), over = _React$useState3[0], setOver = _React$useState3[1];
  var _React$useState4 = import_react119.default.useState(), activeCoords = _React$useState4[0], setActiveCoords = _React$useState4[1];
  var _React$useState5 = import_react119.default.useState(), activeContinent = _React$useState5[0], setActiveContinent = _React$useState5[1];
  var _React$useState6 = import_react119.default.useState(), activePlace = _React$useState6[0], setActivePlace = _React$useState6[1];
  var containerRef = import_react119.default.useRef();
  var _React$useState7 = import_react119.default.useState([]), targets = _React$useState7[0], setTargets = _React$useState7[1];
  var placeRef = import_react119.default.useCallback(function(node, index) {
    setTargets(function(prevTargets) {
      if (!prevTargets[index]) {
        var nextTargets = [].concat(prevTargets);
        nextTargets[index] = node;
        return nextTargets;
      }
      return prevTargets;
    });
  }, []);
  var onMouseMove = import_react119.default.useCallback(function(event) {
    var rect = containerRef.current.getBoundingClientRect();
    var scale = rect.width / world.width;
    var coords = [Math.round((event.clientX - rect.left) / scale / FACTOR), Math.round((event.clientY - rect.top) / scale / FACTOR)];
    setActiveCoords(coords);
  }, [world.width]);
  var continentElements = world.continents.map(function(_ref7) {
    var area = _ref7.area, dots = _ref7.dots, name = _ref7.name;
    var _ref8 = continents[name] || {}, continentColor = _ref8.color, onClick = _ref8.onClick, onHover = _ref8.onHover, restContinents = _objectWithoutPropertiesLoose72(_ref8, _excluded312);
    var active2 = activeContinent && activeContinent === name;
    var interactiveProps2 = {};
    if (onClick || onHover) {
      interactiveProps2 = buildInteractiveProps(continents[name], function(activate) {
        return setActiveContinent(activate);
      }, active2);
    }
    return import_react119.default.createElement("g", _extends123({
      key: name
    }, interactiveProps2, restContinents), import_react119.default.createElement("path", {
      stroke: "none",
      fill: "#fff",
      fillOpacity: "0.01",
      d: area
    }), import_react119.default.createElement("path", {
      d: dots,
      strokeLinecap: "round",
      strokeWidth: parseMetricToNum(theme.worldMap.continent[active2 ? "active" : "base"]),
      stroke: normalizeColor(continentColor || color || theme.worldMap.color, theme)
    }));
  });
  var placesContent = [];
  var placeElements = places.map(function(place, index) {
    var placeColor = place.color, coords = place.coords, content = place.content, dropProps = place.dropProps, key = place.key, name = place.name, onClick = place.onClick, onHover = place.onHover, restPlace = _objectWithoutPropertiesLoose72(place, _excluded410);
    var d3 = "M" + FACTOR * coords[0] + ", " + FACTOR * coords[1] + " h0";
    var active2 = activePlace && activePlace === name;
    var interactiveProps2 = {};
    if (onClick || onHover) {
      interactiveProps2 = buildInteractiveProps(place, function(activate) {
        return setActivePlace(activate);
      }, active2);
    }
    if (content && targets[index]) {
      placesContent.push(import_react119.default.createElement(Drop, _extends123({
        key: key || name
      }, dropProps, {
        target: targets[index]
      }), content));
    }
    return import_react119.default.createElement("path", _extends123({
      key,
      ref: function ref2(node) {
        return placeRef(node, index);
      },
      strokeLinecap: "round",
      strokeWidth: parseMetricToNum(theme.worldMap.place[active2 ? "active" : "base"]),
      stroke: normalizeColor(placeColor || color || theme.worldMap.color, theme)
    }, interactiveProps2, restPlace, {
      d: d3
    }));
  });
  var interactiveProps = {};
  if (onSelectPlace) {
    interactiveProps = {
      onMouseOver: function onMouseOver() {
        return setOver(true);
      },
      onMouseMove: over ? onMouseMove : void 0,
      onMouseLeave: function onMouseLeave() {
        setOver(false);
        setActiveCoords(void 0);
      }
    };
  }
  var active;
  if (activeCoords) {
    var d2 = "M" + FACTOR * activeCoords[0] + ", " + FACTOR * activeCoords[1] + " h0";
    active = import_react119.default.createElement("g", {
      stroke: "none",
      fill: "none",
      fillRule: "evenodd",
      onClick: function onClick() {
        return onSelectPlace(coordToLatLon(activeCoords, world.bounds));
      }
    }, import_react119.default.createElement("path", {
      strokeLinecap: "round",
      strokeWidth: parseMetricToNum(theme.worldMap.place.active),
      stroke: normalizeColor(hoverColor || color || theme.worldMap.hover.color, theme),
      d: d2
    }));
  }
  return import_react119.default.createElement(import_react119.default.Fragment, null, import_react119.default.createElement(StyledWorldMap, _extends123({
    ref,
    viewBox: world.x + " " + world.y + " " + world.width + " " + world.height,
    preserveAspectRatio: "xMinYMin meet",
    fillProp: fill,
    width: world.width,
    height: world.height
  }, interactiveProps, rest), import_react119.default.createElement("g", {
    ref: containerRef,
    stroke: "none",
    fill: "none",
    fillRule: "evenodd"
  }, continentElements), placeElements, active), placesContent);
});
WorldMap.displayName = "WorldMap";
WorldMap.defaultProps = {};
Object.setPrototypeOf(WorldMap.defaultProps, defaultProps2);
WorldMap.propTypes = WorldMapPropTypes;
export {
  Accordion,
  AccordionPanel,
  Anchor,
  AnnounceContext,
  Avatar,
  Box,
  Button,
  Calendar,
  Card,
  CardBody,
  CardFooter,
  CardHeader,
  Carousel,
  Chart,
  CheckBox,
  CheckBoxGroup,
  Clock,
  Collapsible,
  ContainerTargetContext,
  DataChart,
  DataTable,
  DateInput,
  Diagram,
  Distribution,
  Drop,
  DropButton,
  FileInput,
  Footer,
  Form,
  FormContext,
  FormField,
  Grid,
  Grommet,
  Header,
  Heading,
  Image,
  InfiniteScroll,
  Keyboard,
  Layer,
  List,
  Main,
  GrommetMarkdown as Markdown,
  MaskedInput,
  Menu,
  Meter,
  NameValueList,
  NameValuePair,
  Nav,
  Notification,
  Pagination,
  Paragraph,
  RadioButton,
  RadioButtonGroup,
  RangeInput,
  RangeSelector,
  ResponsiveContext,
  RootsContext,
  RoutedAnchor,
  RoutedButton,
  Select,
  Sidebar,
  SkipLink,
  SkipLinkTarget,
  SkipLinks,
  Spinner,
  Stack,
  Tab,
  Table,
  TableBody,
  TableCell,
  TableFooter,
  TableHeader,
  TableRow,
  Tabs,
  Tag,
  Text,
  TextArea,
  TextInput,
  Ge as ThemeContext,
  Tip,
  Video,
  WorldMap,
  base,
  calcBounds,
  calcs,
  dark,
  defaultProps2 as defaultProps,
  extendDefaultTheme,
  generate,
  grommet,
  round
};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=grommet.js.map
